{
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "fragments",
          "type": "uint256"
        }
      ],
      "name": "fragmentsToShares",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "sharesToFragments",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_sharesPerFragment",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "sharesToScaledShares",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "who",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "epoch",
          "type": "uint256"
        },
        {
          "name": "supplyDelta",
          "type": "int256"
        }
      ],
      "name": "rebase",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "monetaryPolicy_",
          "type": "address"
        }
      ],
      "name": "setMonetaryPolicy",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "monetaryPolicy",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rebaseStartTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_initialSharesPerFragment",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner_",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "who",
          "type": "address"
        }
      ],
      "name": "sharesOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "fragments",
          "type": "uint256"
        }
      ],
      "name": "scaledSharesToShares",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "epoch",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "totalSupply",
          "type": "uint256"
        }
      ],
      "name": "LogRebase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "monetaryPolicy",
          "type": "address"
        }
      ],
      "name": "LogMonetaryPolicyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/digg-core/UFragments.sol",
    "10": "deps/openzeppelin-eth/2.0.2/contracts/ownership/Ownable.sol",
    "11": "deps/openzeppelin-eth/2.0.2/contracts/token/ERC20/ERC20Detailed.sol",
    "12": "deps/openzeppelin-eth/2.0.2/contracts/token/ERC20/IERC20.sol",
    "15": "deps/zos-lib/contracts/Initializable.sol",
    "3": "contracts/digg-core/lib/SafeMathInt.sol",
    "9": "deps/openzeppelin-eth/2.0.2/contracts/math/SafeMath.sol"
  },
  "ast": {
    "absolutePath": "contracts/digg-core/UFragments.sol",
    "exportedSymbols": {
      "UFragments": [
        2147
      ]
    },
    "id": 2148,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1474,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "deps/openzeppelin-eth/2.0.2/contracts/math/SafeMath.sol",
        "file": "deps/openzeppelin-eth/2.0.2/contracts/math/SafeMath.sol",
        "id": 1475,
        "nodeType": "ImportDirective",
        "scope": 2148,
        "sourceUnit": 2496,
        "src": "25:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "deps/openzeppelin-eth/2.0.2/contracts/ownership/Ownable.sol",
        "file": "deps/openzeppelin-eth/2.0.2/contracts/ownership/Ownable.sol",
        "id": 1476,
        "nodeType": "ImportDirective",
        "scope": 2148,
        "sourceUnit": 1473,
        "src": "91:69:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "deps/openzeppelin-eth/2.0.2/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "deps/openzeppelin-eth/2.0.2/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 1477,
        "nodeType": "ImportDirective",
        "scope": 2148,
        "sourceUnit": 2974,
        "src": "161:77:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/digg-core/lib/SafeMathInt.sol",
        "file": "./lib/SafeMathInt.sol",
        "id": 1478,
        "nodeType": "ImportDirective",
        "scope": 2148,
        "sourceUnit": 2338,
        "src": "240:31:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1479,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2973,
              "src": "858:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$2973",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 1480,
            "nodeType": "InheritanceSpecifier",
            "src": "858:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1481,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1472,
              "src": "873:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$1472",
                "typeString": "contract Ownable"
              }
            },
            "id": 1482,
            "nodeType": "InheritanceSpecifier",
            "src": "873:7:1"
          }
        ],
        "contractDependencies": [
          1472,
          2906,
          2973,
          3042
        ],
        "contractKind": "contract",
        "documentation": "@title uFragments ERC20 token\n@dev This is part of an implementation of the uFragments Ideal Money protocol.\n     uFragments is a normal ERC20 token, but its supply can be adjusted by splitting and\n     combining tokens proportionally across all wallets.\n *      uFragment balances are internally represented with a hidden denomination, 'shares'.\n     We support splitting the currency in expansion and combining the currency on contraction by\n     changing the exchange rate between the hidden 'shares' and the public 'fragments'.",
        "fullyImplemented": true,
        "id": 2147,
        "linearizedBaseContracts": [
          2147,
          1472,
          2973,
          3042,
          2906
        ],
        "name": "UFragments",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1485,
            "libraryName": {
              "contractScope": null,
              "id": 1483,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2495,
              "src": "2126:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2495",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "2120:27:1",
            "typeName": {
              "id": 1484,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2139:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 1488,
            "libraryName": {
              "contractScope": null,
              "id": 1486,
              "name": "SafeMathInt",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2337,
              "src": "2158:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathInt_$2337",
                "typeString": "library SafeMathInt"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "2152:29:1",
            "typeName": {
              "id": 1487,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "2174:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1494,
            "name": "LogRebase",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1490,
                  "indexed": true,
                  "name": "epoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 1494,
                  "src": "2203:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2203:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1492,
                  "indexed": false,
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1494,
                  "src": "2226:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1491,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2226:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2202:44:1"
            },
            "src": "2187:60:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1498,
            "name": "LogMonetaryPolicyUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1496,
                  "indexed": false,
                  "name": "monetaryPolicy",
                  "nodeType": "VariableDeclaration",
                  "scope": 1498,
                  "src": "2283:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2283:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2282:24:1"
            },
            "src": "2252:55:1"
          },
          {
            "constant": false,
            "id": 1500,
            "name": "monetaryPolicy",
            "nodeType": "VariableDeclaration",
            "scope": 2147,
            "src": "2344:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1499,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2344:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1502,
            "name": "rebaseStartTime",
            "nodeType": "VariableDeclaration",
            "scope": 2147,
            "src": "2379:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1501,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2379:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1512,
              "nodeType": "Block",
              "src": "2446:65:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1505,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3057,
                            "src": "2464:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2464:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1507,
                          "name": "monetaryPolicy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1500,
                          "src": "2478:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2464:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1504,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3060,
                        3061
                      ],
                      "referencedDeclaration": 3060,
                      "src": "2456:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2456:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1510,
                  "nodeType": "ExpressionStatement",
                  "src": "2456:37:1"
                },
                {
                  "id": 1511,
                  "nodeType": "PlaceholderStatement",
                  "src": "2503:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 1513,
            "name": "onlyMonetaryPolicy",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2443:2:1"
            },
            "src": "2416:95:1",
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1515,
            "name": "rebasePausedDeprecated",
            "nodeType": "VariableDeclaration",
            "scope": 2147,
            "src": "2517:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1514,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2517:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1517,
            "name": "tokenPausedDeprecated",
            "nodeType": "VariableDeclaration",
            "scope": 2147,
            "src": "2558:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1516,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2558:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1538,
              "nodeType": "Block",
              "src": "2635:93:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1522,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1519,
                          "src": "2653:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 1524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2667:3:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2659:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2659:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2653:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1521,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3060,
                        3061
                      ],
                      "referencedDeclaration": 3060,
                      "src": "2645:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2645:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1528,
                  "nodeType": "ExpressionStatement",
                  "src": "2645:27:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1530,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1519,
                          "src": "2690:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1532,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3084,
                              "src": "2704:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UFragments_$2147",
                                "typeString": "contract UFragments"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_UFragments_$2147",
                                "typeString": "contract UFragments"
                              }
                            ],
                            "id": 1531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2696:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2696:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2690:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3060,
                        3061
                      ],
                      "referencedDeclaration": 3060,
                      "src": "2682:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2682:28:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1536,
                  "nodeType": "ExpressionStatement",
                  "src": "2682:28:1"
                },
                {
                  "id": 1537,
                  "nodeType": "PlaceholderStatement",
                  "src": "2720:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 1539,
            "name": "validRecipient",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1519,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "2623:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2623:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2622:12:1"
            },
            "src": "2599:129:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1548,
              "nodeType": "Block",
              "src": "2766:59:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1542,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3059,
                          "src": "2784:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1543,
                          "name": "rebaseStartTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1502,
                          "src": "2791:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2784:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1541,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3060,
                        3061
                      ],
                      "referencedDeclaration": 3060,
                      "src": "2776:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2776:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1546,
                  "nodeType": "ExpressionStatement",
                  "src": "2776:31:1"
                },
                {
                  "id": 1547,
                  "nodeType": "PlaceholderStatement",
                  "src": "2817:1:1"
                }
              ]
            },
            "documentation": null,
            "id": 1549,
            "name": "onlyAfterRebaseStart",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1540,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2763:2:1"
            },
            "src": "2734:91:1",
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 1552,
            "name": "DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 2147,
            "src": "2831:37:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1550,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2831:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "39",
              "id": 1551,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2867:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_9_by_1",
                "typeString": "int_const 9"
              },
              "value": "9"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1555,
            "name": "SCALED_SHARES_EXTRA_DECIMALS",
            "nodeType": "VariableDeclaration",
            "scope": 2147,
            "src": "2874:57:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1553,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2874:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "39",
              "id": 1554,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2930:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_9_by_1",
                "typeString": "int_const 9"
              },
              "value": "9"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1561,
            "name": "MAX_UINT256",
            "nodeType": "VariableDeclaration",
            "scope": 2147,
            "src": "2937:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1556,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2937:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "id": 1560,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "UnaryOperation",
              "operator": "~",
              "prefix": true,
              "src": "2976:11:1",
              "subExpression": {
                "argumentTypes": null,
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 1558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2985:1:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    }
                  ],
                  "id": 1557,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "ElementaryTypeNameExpression",
                  "src": "2977:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_uint256_$",
                    "typeString": "type(uint256)"
                  },
                  "typeName": "uint256"
                },
                "id": 1559,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "typeConversion",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "2977:10:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1567,
            "name": "MAX_UINT128",
            "nodeType": "VariableDeclaration",
            "scope": 2147,
            "src": "2993:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1562,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2993:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "id": 1566,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "UnaryOperation",
              "operator": "~",
              "prefix": true,
              "src": "3032:11:1",
              "subExpression": {
                "argumentTypes": null,
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 1564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3041:1:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    }
                  ],
                  "id": 1563,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "nodeType": "ElementaryTypeNameExpression",
                  "src": "3033:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_uint128_$",
                    "typeString": "type(uint128)"
                  },
                  "typeName": "uint128"
                },
                "id": 1565,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "typeConversion",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "3033:10:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                }
              },
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1574,
            "name": "MAX_FRAGMENTS_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 2147,
            "src": "3049:67:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1568,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3049:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 1573,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "34303030",
                "id": 1569,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3097:4:1",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_4000_by_1",
                  "typeString": "int_const 4000"
                },
                "value": "4000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "id": 1572,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "3130",
                  "id": 1570,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3104:2:1",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_10_by_1",
                    "typeString": "int_const 10"
                  },
                  "value": "10"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "argumentTypes": null,
                  "id": 1571,
                  "name": "DECIMALS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1552,
                  "src": "3108:8:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "src": "3104:12:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "3097:19:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1582,
            "name": "TOTAL_SHARES",
            "nodeType": "VariableDeclaration",
            "scope": 2147,
            "src": "3303:90:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1575,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3303:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 1581,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "id": 1576,
                "name": "MAX_UINT256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 1561,
                "src": "3343:11:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1577,
                      "name": "MAX_UINT256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1561,
                      "src": "3358:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1578,
                      "name": "MAX_FRAGMENTS_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1574,
                      "src": "3372:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3358:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1580,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "3357:36:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "3343:50:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 1585,
            "name": "MAX_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 2147,
            "src": "3473:49:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1583,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3473:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "id": 1584,
              "name": "MAX_UINT128",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1567,
              "src": "3511:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1587,
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 2147,
            "src": "3529:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1586,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3529:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1589,
            "name": "_sharesPerFragment",
            "nodeType": "VariableDeclaration",
            "scope": 2147,
            "src": "3563:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1588,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3563:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": 10,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1591,
            "name": "_initialSharesPerFragment",
            "nodeType": "VariableDeclaration",
            "scope": 2147,
            "src": "3602:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1590,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3602:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1595,
            "name": "_shareBalances",
            "nodeType": "VariableDeclaration",
            "scope": 2147,
            "src": "3648:50:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1594,
              "keyType": {
                "id": 1592,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3656:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3648:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1593,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3667:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1601,
            "name": "_allowedFragments",
            "nodeType": "VariableDeclaration",
            "scope": 2147,
            "src": "3830:73:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 1600,
              "keyType": {
                "id": 1596,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3838:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3830:47:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 1599,
                "keyType": {
                  "id": 1597,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3857:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3849:27:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 1598,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3868:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1616,
              "nodeType": "Block",
              "src": "4098:105:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1608,
                      "name": "monetaryPolicy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1500,
                      "src": "4108:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1609,
                      "name": "monetaryPolicy_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1603,
                      "src": "4125:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4108:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1611,
                  "nodeType": "ExpressionStatement",
                  "src": "4108:32:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1613,
                        "name": "monetaryPolicy_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1603,
                        "src": "4180:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1612,
                      "name": "LogMonetaryPolicyUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1498,
                      "src": "4155:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4155:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1615,
                  "nodeType": "EmitStatement",
                  "src": "4150:46:1"
                }
              ]
            },
            "documentation": "@param monetaryPolicy_ The address of the monetary policy contract to use for authentication.",
            "id": 1617,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1606,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1605,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1405,
                  "src": "4088:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4088:9:1"
              }
            ],
            "name": "setMonetaryPolicy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1603,
                  "name": "monetaryPolicy_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1617,
                  "src": "4054:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4054:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4053:25:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 1607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4098:0:1"
            },
            "scope": 2147,
            "src": "4027:176:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1691,
              "nodeType": "Block",
              "src": "4582:1440:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 1632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1630,
                      "name": "supplyDelta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1621,
                      "src": "4596:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4611:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4596:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1641,
                  "nodeType": "IfStatement",
                  "src": "4592:115:1",
                  "trueBody": {
                    "id": 1640,
                    "nodeType": "Block",
                    "src": "4614:93:1",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1634,
                              "name": "epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1619,
                              "src": "4643:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1635,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1587,
                              "src": "4650:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1633,
                            "name": "LogRebase",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1494,
                            "src": "4633:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 1636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4633:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1637,
                        "nodeType": "EmitStatement",
                        "src": "4628:35:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1638,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1587,
                          "src": "4684:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1629,
                        "id": 1639,
                        "nodeType": "Return",
                        "src": "4677:19:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 1644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1642,
                      "name": "supplyDelta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1621,
                      "src": "4721:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4735:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4721:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1666,
                    "nodeType": "Block",
                    "src": "4828:78:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1657,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1587,
                            "src": "4842:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1661,
                                    "name": "supplyDelta",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1621,
                                    "src": "4882:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  ],
                                  "id": 1660,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4874:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": "uint256"
                                },
                                "id": 1662,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4874:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1658,
                                "name": "_totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1587,
                                "src": "4857:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1659,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2474,
                              "src": "4857:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4857:38:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4842:53:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1665,
                        "nodeType": "ExpressionStatement",
                        "src": "4842:53:1"
                      }
                    ]
                  },
                  "id": 1667,
                  "nodeType": "IfStatement",
                  "src": "4717:189:1",
                  "trueBody": {
                    "id": 1656,
                    "nodeType": "Block",
                    "src": "4738:84:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1645,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1587,
                            "src": "4752:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1649,
                                        "name": "supplyDelta",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1621,
                                        "src": "4792:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      },
                                      "id": 1650,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "abs",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2336,
                                      "src": "4792:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_int256_$bound_to$_t_int256_$",
                                        "typeString": "function (int256) pure returns (int256)"
                                      }
                                    },
                                    "id": 1651,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4792:17:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  ],
                                  "id": 1648,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4784:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": "uint256"
                                },
                                "id": 1652,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4784:26:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1646,
                                "name": "_totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1587,
                                "src": "4767:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2450,
                              "src": "4767:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4767:44:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4752:59:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1655,
                        "nodeType": "ExpressionStatement",
                        "src": "4752:59:1"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1668,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1587,
                      "src": "4920:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1669,
                      "name": "MAX_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1585,
                      "src": "4935:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4920:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1676,
                  "nodeType": "IfStatement",
                  "src": "4916:81:1",
                  "trueBody": {
                    "id": 1675,
                    "nodeType": "Block",
                    "src": "4947:50:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1671,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1587,
                            "src": "4961:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1672,
                            "name": "MAX_SUPPLY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1585,
                            "src": "4976:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4961:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1674,
                        "nodeType": "ExpressionStatement",
                        "src": "4961:25:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1677,
                      "name": "_sharesPerFragment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1589,
                      "src": "5007:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1680,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1587,
                          "src": "5045:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1678,
                          "name": "TOTAL_SHARES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1582,
                          "src": "5028:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2426,
                        "src": "5028:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5028:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5007:51:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1683,
                  "nodeType": "ExpressionStatement",
                  "src": "5007:51:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1685,
                        "name": "epoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1619,
                        "src": "5966:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1686,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1587,
                        "src": "5973:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1684,
                      "name": "LogRebase",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1494,
                      "src": "5956:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5956:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1688,
                  "nodeType": "EmitStatement",
                  "src": "5951:35:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1689,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1587,
                    "src": "6003:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1629,
                  "id": 1690,
                  "nodeType": "Return",
                  "src": "5996:19:1"
                }
              ]
            },
            "documentation": "@dev Notifies Fragments contract about a new rebase cycle.\n@param supplyDelta The number of new fragment tokens to add into circulation via expansion.\n@return The total number of fragments after the supply adjustment.",
            "id": 1692,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1624,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1623,
                  "name": "onlyMonetaryPolicy",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1513,
                  "src": "4524:18:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4524:18:1"
              },
              {
                "arguments": null,
                "id": 1626,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1625,
                  "name": "onlyAfterRebaseStart",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1549,
                  "src": "4543:20:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4543:20:1"
              }
            ],
            "name": "rebase",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1619,
                  "name": "epoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 1692,
                  "src": "4480:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4480:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1621,
                  "name": "supplyDelta",
                  "nodeType": "VariableDeclaration",
                  "scope": 1692,
                  "src": "4495:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 1620,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4495:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4479:35:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 1629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1628,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1692,
                  "src": "4573:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4573:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4572:9:1"
            },
            "scope": 2147,
            "src": "4464:1558:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1759,
              "nodeType": "Block",
              "src": "6083:501:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "44696767",
                        "id": 1702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6118:6:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3405467b4beba6e2c6f69072f5d45f2762d4eebdd67c29b6f88e0df3d059e820",
                          "typeString": "literal_string \"Digg\""
                        },
                        "value": "Digg"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "44494747",
                        "id": 1703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6126:6:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0558fda071bfc544725213edcaaa3f855a4e2bfec5f07b9463fac5aab4908520",
                          "typeString": "literal_string \"DIGG\""
                        },
                        "value": "DIGG"
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1705,
                            "name": "DECIMALS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1552,
                            "src": "6140:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6134:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": "uint8"
                        },
                        "id": 1706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6134:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3405467b4beba6e2c6f69072f5d45f2762d4eebdd67c29b6f88e0df3d059e820",
                          "typeString": "literal_string \"Digg\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0558fda071bfc544725213edcaaa3f855a4e2bfec5f07b9463fac5aab4908520",
                          "typeString": "literal_string \"DIGG\""
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1699,
                        "name": "ERC20Detailed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2973,
                        "src": "6093:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$2973_$",
                          "typeString": "type(contract ERC20Detailed)"
                        }
                      },
                      "id": 1701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2944,
                      "src": "6093:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (string memory,string memory,uint8)"
                      }
                    },
                    "id": 1707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6093:57:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1708,
                  "nodeType": "ExpressionStatement",
                  "src": "6093:57:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1712,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1694,
                        "src": "6179:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1709,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1472,
                        "src": "6160:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$1472_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 1711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1388,
                      "src": "6160:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6160:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1714,
                  "nodeType": "ExpressionStatement",
                  "src": "6160:26:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1715,
                      "name": "rebaseStartTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1502,
                      "src": "6197:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6215:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6197:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1718,
                  "nodeType": "ExpressionStatement",
                  "src": "6197:19:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1719,
                      "name": "rebasePausedDeprecated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1515,
                      "src": "6226:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6251:5:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6226:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1722,
                  "nodeType": "ExpressionStatement",
                  "src": "6226:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1723,
                      "name": "tokenPausedDeprecated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1517,
                      "src": "6266:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 1724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6290:5:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "6266:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1726,
                  "nodeType": "ExpressionStatement",
                  "src": "6266:29:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1727,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1587,
                      "src": "6306:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1728,
                      "name": "MAX_FRAGMENTS_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1574,
                      "src": "6321:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6306:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1730,
                  "nodeType": "ExpressionStatement",
                  "src": "6306:35:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1731,
                        "name": "_shareBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1595,
                        "src": "6351:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1733,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1732,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1694,
                        "src": "6366:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6351:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1734,
                      "name": "TOTAL_SHARES",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1582,
                      "src": "6376:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6351:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1736,
                  "nodeType": "ExpressionStatement",
                  "src": "6351:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1737,
                      "name": "_sharesPerFragment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1589,
                      "src": "6398:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1740,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1587,
                          "src": "6436:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1738,
                          "name": "TOTAL_SHARES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1582,
                          "src": "6419:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2426,
                        "src": "6419:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6419:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6398:51:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1743,
                  "nodeType": "ExpressionStatement",
                  "src": "6398:51:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1744,
                      "name": "_initialSharesPerFragment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1591,
                      "src": "6459:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1747,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1587,
                          "src": "6504:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1745,
                          "name": "TOTAL_SHARES",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1582,
                          "src": "6487:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2426,
                        "src": "6487:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6487:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6459:58:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1750,
                  "nodeType": "ExpressionStatement",
                  "src": "6459:58:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "307830",
                            "id": 1753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6550:3:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0x0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6542:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6542:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1755,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1694,
                        "src": "6556:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1756,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1587,
                        "src": "6564:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1751,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3033,
                      "src": "6533:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6533:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1758,
                  "nodeType": "EmitStatement",
                  "src": "6528:49:1"
                }
              ]
            },
            "documentation": null,
            "id": 1760,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1697,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1696,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2887,
                  "src": "6071:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6071:11:1"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1694,
                  "name": "owner_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "6048:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6048:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6047:16:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 1698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6083:0:1"
            },
            "scope": 2147,
            "src": "6028:556:1",
            "stateMutability": "nonpayable",
            "superFunction": 1388,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1767,
              "nodeType": "Block",
              "src": "6705:36:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1765,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1587,
                    "src": "6722:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1764,
                  "id": 1766,
                  "nodeType": "Return",
                  "src": "6715:19:1"
                }
              ]
            },
            "documentation": "@return The total number of fragments.",
            "id": 1768,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6672:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 1764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1763,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1768,
                  "src": "6696:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6696:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6695:9:1"
            },
            "scope": 2147,
            "src": "6652:89:1",
            "stateMutability": "view",
            "superFunction": 2980,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1775,
              "nodeType": "Block",
              "src": "6870:36:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1773,
                    "name": "TOTAL_SHARES",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1582,
                    "src": "6887:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1772,
                  "id": 1774,
                  "nodeType": "Return",
                  "src": "6880:19:1"
                }
              ]
            },
            "documentation": "@return The total number of underlying shares.",
            "id": 1776,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "totalShares",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6837:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 1772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1771,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1776,
                  "src": "6861:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1770,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6861:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6860:9:1"
            },
            "scope": 2147,
            "src": "6817:89:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1790,
              "nodeType": "Block",
              "src": "7083:67:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1787,
                        "name": "_sharesPerFragment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1589,
                        "src": "7124:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1783,
                          "name": "_shareBalances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1595,
                          "src": "7100:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 1785,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1784,
                          "name": "who",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1778,
                          "src": "7115:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7100:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2426,
                      "src": "7100:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7100:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1782,
                  "id": 1789,
                  "nodeType": "Return",
                  "src": "7093:50:1"
                }
              ]
            },
            "documentation": "@param who The address to query.\n@return The balance of the specified address.",
            "id": 1791,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1778,
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 1791,
                  "src": "7040:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1777,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7040:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7039:13:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 1782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1781,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1791,
                  "src": "7074:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7074:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7073:9:1"
            },
            "scope": 2147,
            "src": "7021:129:1",
            "stateMutability": "view",
            "superFunction": 2987,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1802,
              "nodeType": "Block",
              "src": "7336:43:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1798,
                      "name": "_shareBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1595,
                      "src": "7353:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1800,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1799,
                      "name": "who",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1793,
                      "src": "7368:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7353:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1797,
                  "id": 1801,
                  "nodeType": "Return",
                  "src": "7346:26:1"
                }
              ]
            },
            "documentation": "@param who The address to query.\n@return The underlying shares of the specified address.",
            "id": 1803,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "sharesOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1793,
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 1803,
                  "src": "7293:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7293:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7292:13:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 1797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1796,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1803,
                  "src": "7327:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7327:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7326:9:1"
            },
            "scope": 2147,
            "src": "7275:104:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1815,
              "nodeType": "Block",
              "src": "7604:57:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1812,
                        "name": "_sharesPerFragment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1589,
                        "src": "7635:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1810,
                        "name": "fragments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "7621:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2402,
                      "src": "7621:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7621:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1809,
                  "id": 1814,
                  "nodeType": "Return",
                  "src": "7614:40:1"
                }
              ]
            },
            "documentation": "@param fragments Fragment value to convert.\n@return The underlying share value of the specified fragment amount.",
            "id": 1816,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "fragmentsToShares",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1805,
                  "name": "fragments",
                  "nodeType": "VariableDeclaration",
                  "scope": 1816,
                  "src": "7555:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7555:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7554:19:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 1809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1808,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1816,
                  "src": "7595:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7595:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7594:9:1"
            },
            "scope": 2147,
            "src": "7528:133:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1835,
              "nodeType": "Block",
              "src": "7885:113:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1823,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1818,
                      "src": "7899:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7909:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7899:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1829,
                  "nodeType": "IfStatement",
                  "src": "7895:50:1",
                  "trueBody": {
                    "id": 1828,
                    "nodeType": "Block",
                    "src": "7912:33:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7933:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1822,
                        "id": 1827,
                        "nodeType": "Return",
                        "src": "7926:8:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1832,
                        "name": "_sharesPerFragment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1589,
                        "src": "7972:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1830,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1818,
                        "src": "7961:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2426,
                      "src": "7961:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7961:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1822,
                  "id": 1834,
                  "nodeType": "Return",
                  "src": "7954:37:1"
                }
              ]
            },
            "documentation": "@param shares Share value to convert.\n@return The current fragment value of the specified underlying share amount.",
            "id": 1836,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "sharesToFragments",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1818,
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 1836,
                  "src": "7839:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7839:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7838:16:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 1822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1821,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1836,
                  "src": "7876:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7876:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7875:9:1"
            },
            "scope": 2147,
            "src": "7812:186:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1853,
              "nodeType": "Block",
              "src": "8155:102:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 1848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8217:2:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1849,
                          "name": "SCALED_SHARES_EXTRA_DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1555,
                          "src": "8221:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8217:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1845,
                            "name": "_initialSharesPerFragment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1591,
                            "src": "8186:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1843,
                            "name": "fragments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1838,
                            "src": "8172:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2402,
                          "src": "8172:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8172:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2402,
                      "src": "8172:44:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8172:78:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1842,
                  "id": 1852,
                  "nodeType": "Return",
                  "src": "8165:85:1"
                }
              ]
            },
            "documentation": "@dev Scaled Shares are a user-friendly representation of shares",
            "id": 1854,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "scaledSharesToShares",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1839,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1838,
                  "name": "fragments",
                  "nodeType": "VariableDeclaration",
                  "scope": 1854,
                  "src": "8106:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8106:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8105:19:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 1842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1841,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1854,
                  "src": "8146:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8146:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8145:9:1"
            },
            "scope": 2147,
            "src": "8076:181:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1878,
              "nodeType": "Block",
              "src": "8339:158:1",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1861,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1856,
                      "src": "8353:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8363:1:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8353:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1867,
                  "nodeType": "IfStatement",
                  "src": "8349:50:1",
                  "trueBody": {
                    "id": 1866,
                    "nodeType": "Block",
                    "src": "8366:33:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8387:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1860,
                        "id": 1865,
                        "nodeType": "Return",
                        "src": "8380:8:1"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 1873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8457:2:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1874,
                          "name": "SCALED_SHARES_EXTRA_DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1555,
                          "src": "8461:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8457:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1870,
                            "name": "_initialSharesPerFragment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1591,
                            "src": "8426:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1868,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1856,
                            "src": "8415:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2426,
                          "src": "8415:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8415:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1872,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2402,
                      "src": "8415:41:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8415:75:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1860,
                  "id": 1877,
                  "nodeType": "Return",
                  "src": "8408:82:1"
                }
              ]
            },
            "documentation": null,
            "id": 1879,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "sharesToScaledShares",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1856,
                  "name": "shares",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "8293:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8293:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8292:16:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 1860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1859,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "8330:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8330:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8329:9:1"
            },
            "scope": 2147,
            "src": "8263:234:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1931,
              "nodeType": "Block",
              "src": "8801:280:1",
              "statements": [
                {
                  "assignments": [
                    1892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1892,
                      "name": "shareValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 1932,
                      "src": "8811:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1891,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8811:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1897,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1895,
                        "name": "_sharesPerFragment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1589,
                        "src": "8842:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1893,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1883,
                        "src": "8832:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2402,
                      "src": "8832:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8832:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8811:50:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1898,
                        "name": "_shareBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1595,
                        "src": "8871:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1901,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1899,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3057,
                          "src": "8886:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8886:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8871:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1907,
                          "name": "shareValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1892,
                          "src": "8931:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1902,
                            "name": "_shareBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1595,
                            "src": "8900:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1905,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1903,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3057,
                              "src": "8915:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8915:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8900:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2450,
                        "src": "8900:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8900:42:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8871:71:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1910,
                  "nodeType": "ExpressionStatement",
                  "src": "8871:71:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1911,
                        "name": "_shareBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1595,
                        "src": "8952:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1913,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1912,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1881,
                        "src": "8967:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8952:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1918,
                          "name": "shareValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1892,
                          "src": "8996:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1914,
                            "name": "_shareBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1595,
                            "src": "8973:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1916,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1915,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1881,
                            "src": "8988:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8973:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2474,
                        "src": "8973:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8973:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8952:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1921,
                  "nodeType": "ExpressionStatement",
                  "src": "8952:55:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1923,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3057,
                          "src": "9031:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9031:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1925,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1881,
                        "src": "9043:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1926,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1883,
                        "src": "9047:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1922,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3033,
                      "src": "9022:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9022:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1928,
                  "nodeType": "EmitStatement",
                  "src": "9017:36:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 1929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9070:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1890,
                  "id": 1930,
                  "nodeType": "Return",
                  "src": "9063:11:1"
                }
              ]
            },
            "documentation": "@dev Transfer tokens to a specified address.\n@param to The address to transfer to.\n@param value The amount to be transferred.\n@return True on success, false otherwise.",
            "id": 1932,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1886,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1881,
                    "src": "8782:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1887,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1885,
                  "name": "validRecipient",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1539,
                  "src": "8767:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8767:18:1"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1881,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "8733:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1880,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8733:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1883,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "8745:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8745:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8732:27:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 1890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1889,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1932,
                  "src": "8795:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1888,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8795:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8794:6:1"
            },
            "scope": 2147,
            "src": "8715:366:1",
            "stateMutability": "nonpayable",
            "superFunction": 3005,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1947,
              "nodeType": "Block",
              "src": "9462:58:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1941,
                        "name": "_allowedFragments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1601,
                        "src": "9479:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 1943,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1942,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1934,
                        "src": "9497:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9479:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1945,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1944,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1936,
                      "src": "9505:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9479:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1940,
                  "id": 1946,
                  "nodeType": "Return",
                  "src": "9472:41:1"
                }
              ]
            },
            "documentation": "@dev Function to check the amount of tokens that an owner has allowed to a spender.\n@param owner_ The address which owns the funds.\n@param spender The address which will spend the funds.\n@return The number of tokens still available for the spender.",
            "id": 1948,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1934,
                  "name": "owner_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1948,
                  "src": "9399:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9399:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1936,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1948,
                  "src": "9415:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1935,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9415:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9398:33:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 1940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1939,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1948,
                  "src": "9453:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9453:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9452:9:1"
            },
            "scope": 2147,
            "src": "9380:140:1",
            "stateMutability": "view",
            "superFunction": 2996,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2016,
              "nodeType": "Block",
              "src": "9908:358:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1962,
                          "name": "_allowedFragments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1601,
                          "src": "9918:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 1966,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1963,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1950,
                          "src": "9936:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9918:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1967,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1964,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3057,
                          "src": "9942:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "9942:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9918:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1975,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1954,
                          "src": "9996:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1968,
                              "name": "_allowedFragments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1601,
                              "src": "9956:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1970,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1969,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1950,
                              "src": "9974:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9956:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1973,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1971,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3057,
                              "src": "9980:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "9980:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9956:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2450,
                        "src": "9956:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9956:46:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9918:84:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1978,
                  "nodeType": "ExpressionStatement",
                  "src": "9918:84:1"
                },
                {
                  "assignments": [
                    1980
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1980,
                      "name": "shareValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 2017,
                      "src": "10013:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1979,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10013:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1985,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1983,
                        "name": "_sharesPerFragment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1589,
                        "src": "10044:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1981,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1954,
                        "src": "10034:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mul",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2402,
                      "src": "10034:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10034:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10013:50:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1986,
                        "name": "_shareBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1595,
                        "src": "10073:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1988,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1987,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1950,
                        "src": "10088:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10073:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1993,
                          "name": "shareValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1980,
                          "src": "10121:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1989,
                            "name": "_shareBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1595,
                            "src": "10096:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1991,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1990,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1950,
                            "src": "10111:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10096:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2450,
                        "src": "10096:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10096:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10073:59:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1996,
                  "nodeType": "ExpressionStatement",
                  "src": "10073:59:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1997,
                        "name": "_shareBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1595,
                        "src": "10142:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1999,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1998,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1952,
                        "src": "10157:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10142:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2004,
                          "name": "shareValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1980,
                          "src": "10186:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2000,
                            "name": "_shareBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1595,
                            "src": "10163:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2002,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2001,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1952,
                            "src": "10178:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10163:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2474,
                        "src": "10163:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10163:34:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10142:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2007,
                  "nodeType": "ExpressionStatement",
                  "src": "10142:55:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2009,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1950,
                        "src": "10221:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2010,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1952,
                        "src": "10227:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2011,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1954,
                        "src": "10231:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2008,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3033,
                      "src": "10212:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10212:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2013,
                  "nodeType": "EmitStatement",
                  "src": "10207:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10255:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1961,
                  "id": 2015,
                  "nodeType": "Return",
                  "src": "10248:11:1"
                }
              ]
            },
            "documentation": "@dev Transfer tokens from one address to another.\n@param from The address you want to send tokens from.\n@param to The address you want to transfer to.\n@param value The amount of tokens to be transferred.",
            "id": 2017,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1957,
                    "name": "to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1952,
                    "src": "9889:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1958,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1956,
                  "name": "validRecipient",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1539,
                  "src": "9874:14:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "9874:18:1"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1950,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 2017,
                  "src": "9805:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1949,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9805:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1952,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2017,
                  "src": "9827:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9827:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1954,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2017,
                  "src": "9847:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1953,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9847:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9795:71:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 1961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1960,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2017,
                  "src": "9902:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1959,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9902:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9901:6:1"
            },
            "scope": 2147,
            "src": "9774:492:1",
            "stateMutability": "nonpayable",
            "superFunction": 3025,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2044,
              "nodeType": "Block",
              "src": "10966:135:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2026,
                          "name": "_allowedFragments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1601,
                          "src": "10976:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 2030,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2027,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3057,
                            "src": "10994:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10994:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10976:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2031,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2029,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2019,
                        "src": "11006:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10976:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2032,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2021,
                      "src": "11017:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10976:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2034,
                  "nodeType": "ExpressionStatement",
                  "src": "10976:46:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2036,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3057,
                          "src": "11046:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11046:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2038,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2019,
                        "src": "11058:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2039,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2021,
                        "src": "11067:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2035,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3041,
                      "src": "11037:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11037:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2041,
                  "nodeType": "EmitStatement",
                  "src": "11032:41:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11090:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2025,
                  "id": 2043,
                  "nodeType": "Return",
                  "src": "11083:11:1"
                }
              ]
            },
            "documentation": "@dev Approve the passed address to spend the specified amount of tokens on behalf of\nmsg.sender. This method is included for ERC20 compatibility.\nincreaseAllowance and decreaseAllowance should be used instead.\nChanging an allowance with this method brings the risk that someone may transfer both\nthe old and the new allowance - if they are both greater than zero - if a transfer\ntransaction is mined before the later approve() call is mined.\n     * @param spender The address which will spend the funds.\n@param value The amount of tokens to be spent.",
            "id": 2045,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2019,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2045,
                  "src": "10912:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10912:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2021,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 2045,
                  "src": "10929:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10929:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10911:32:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 2025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2024,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2045,
                  "src": "10960:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2023,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10960:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10959:6:1"
            },
            "scope": 2147,
            "src": "10895:206:1",
            "stateMutability": "nonpayable",
            "superFunction": 3014,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2085,
              "nodeType": "Block",
              "src": "11551:217:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 2054,
                          "name": "_allowedFragments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1601,
                          "src": "11561:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 2058,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2055,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3057,
                            "src": "11579:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "11579:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11561:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2059,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 2057,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2047,
                        "src": "11591:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11561:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2067,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2049,
                          "src": "11645:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 2060,
                              "name": "_allowedFragments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1601,
                              "src": "11602:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 2063,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 2061,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3057,
                                "src": "11620:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "11620:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11602:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2065,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 2064,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2047,
                            "src": "11632:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11602:38:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2474,
                        "src": "11602:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 2068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11602:54:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11561:95:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2070,
                  "nodeType": "ExpressionStatement",
                  "src": "11561:95:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2072,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3057,
                          "src": "11680:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11680:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2074,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2047,
                        "src": "11692:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2075,
                            "name": "_allowedFragments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1601,
                            "src": "11701:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 2078,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2076,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3057,
                              "src": "11719:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "11719:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11701:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2080,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2079,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2047,
                          "src": "11731:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11701:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2071,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3041,
                      "src": "11671:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11671:69:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2082,
                  "nodeType": "EmitStatement",
                  "src": "11666:74:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11757:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2053,
                  "id": 2084,
                  "nodeType": "Return",
                  "src": "11750:11:1"
                }
              ]
            },
            "documentation": "@dev Increase the amount of tokens that an owner has allowed to a spender.\nThis method should be used instead of approve() to avoid the double approval vulnerability\ndescribed above.\n@param spender The address which will spend the funds.\n@param addedValue The amount of tokens to increase the allowance by.",
            "id": 2086,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "increaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2047,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2086,
                  "src": "11492:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11492:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2049,
                  "name": "addedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 2086,
                  "src": "11509:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11509:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11491:37:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 2053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2052,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2086,
                  "src": "11545:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2051,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11545:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11544:6:1"
            },
            "scope": 2147,
            "src": "11465:303:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2145,
              "nodeType": "Block",
              "src": "12113:389:1",
              "statements": [
                {
                  "assignments": [
                    2096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2096,
                      "name": "oldValue",
                      "nodeType": "VariableDeclaration",
                      "scope": 2146,
                      "src": "12123:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2095,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12123:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2103,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 2097,
                        "name": "_allowedFragments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1601,
                        "src": "12142:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 2100,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2098,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3057,
                          "src": "12160:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "12160:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12142:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2102,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 2101,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2088,
                      "src": "12172:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12142:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12123:57:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2104,
                      "name": "subtractedValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2090,
                      "src": "12194:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2105,
                      "name": "oldValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2096,
                      "src": "12213:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12194:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2129,
                    "nodeType": "Block",
                    "src": "12296:95:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2117,
                                "name": "_allowedFragments",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1601,
                                "src": "12310:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 2121,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2118,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3057,
                                  "src": "12328:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "12328:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12310:29:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2122,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2120,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2088,
                              "src": "12340:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12310:38:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 2125,
                                "name": "subtractedValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2090,
                                "src": "12364:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 2123,
                                "name": "oldValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2096,
                                "src": "12351:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2450,
                              "src": "12351:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 2126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12351:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12310:70:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2128,
                        "nodeType": "ExpressionStatement",
                        "src": "12310:70:1"
                      }
                    ]
                  },
                  "id": 2130,
                  "nodeType": "IfStatement",
                  "src": "12190:201:1",
                  "trueBody": {
                    "id": 2116,
                    "nodeType": "Block",
                    "src": "12223:67:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 2114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 2107,
                                "name": "_allowedFragments",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1601,
                                "src": "12237:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 2111,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 2108,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3057,
                                  "src": "12255:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "12255:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12237:29:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2112,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 2110,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2088,
                              "src": "12267:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12237:38:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 2113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12278:1:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12237:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2115,
                        "nodeType": "ExpressionStatement",
                        "src": "12237:42:1"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2132,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3057,
                          "src": "12414:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "12414:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2134,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2088,
                        "src": "12426:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 2135,
                            "name": "_allowedFragments",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1601,
                            "src": "12435:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 2138,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2136,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3057,
                              "src": "12453:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "12453:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12435:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 2140,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 2139,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2088,
                          "src": "12465:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12435:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2131,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3041,
                      "src": "12405:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12405:69:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2142,
                  "nodeType": "EmitStatement",
                  "src": "12400:74:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 2143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12491:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2094,
                  "id": 2144,
                  "nodeType": "Return",
                  "src": "12484:11:1"
                }
              ]
            },
            "documentation": "@dev Decrease the amount of tokens that an owner has allowed to a spender.\n     * @param spender The address which will spend the funds.\n@param subtractedValue The amount of tokens to decrease the allowance by.",
            "id": 2146,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "decreaseAllowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2088,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 2146,
                  "src": "12049:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12049:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2090,
                  "name": "subtractedValue",
                  "nodeType": "VariableDeclaration",
                  "scope": 2146,
                  "src": "12066:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12066:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12048:42:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 2094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2093,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2146,
                  "src": "12107:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2092,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12107:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12106:6:1"
            },
            "scope": 2147,
            "src": "12022:480:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2148,
        "src": "835:11669:1"
      }
    ],
    "src": "0:12505:1"
  },
  "bytecode": "608060405234801561001057600080fd5b5061154f806100206000396000f3006080604052600436106101745763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610179578063095ea7b31461020357806313ca42e81461023b5780631624f6c61461026557806318160ddd1461030357806323b872dd14610318578063313ce56714610342578063395093511461036d5780633a98ef39146103915780635d2dde1d146103a65780636f97854c146103be5780636fafb236146103d357806370a08231146103eb578063715018a61461040c5780637a43e23f146104215780638b5a6a081461043c5780638da5cb5b1461045d5780638e27d7d71461048e5780638f32d59b146104a357806395d89b41146104b8578063a457c2d7146104cd578063a9059cbb146104f1578063b8fd8e7314610515578063bc02f3f71461052a578063c4d66de81461053f578063dd62ed3e14610560578063f2fde38b14610587578063f5eb42dc146105a8578063fb334b55146105c9575b600080fd5b34801561018557600080fd5b5061018e6105e1565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101c85781810151838201526020016101b0565b50505050905090810190601f1680156101f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020f57600080fd5b50610227600160a060020a0360043516602435610678565b604080519115158252519081900360200190f35b34801561024757600080fd5b506102536004356106df565b60408051918252519081900360200190f35b34801561027157600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261030194369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497505050923560ff1693506106fe92505050565b005b34801561030f57600080fd5b50610253610837565b34801561032457600080fd5b50610227600160a060020a036004358116906024351660443561083d565b34801561034e57600080fd5b5061035761099c565b6040805160ff9092168252519081900360200190f35b34801561037957600080fd5b50610227600160a060020a03600435166024356109a5565b34801561039d57600080fd5b50610253610a3e565b3480156103b257600080fd5b50610253600435610a49565b3480156103ca57600080fd5b50610253610a6e565b3480156103df57600080fd5b50610253600435610a74565b3480156103f757600080fd5b50610253600160a060020a0360043516610aaf565b34801561041857600080fd5b50610301610add565b34801561042d57600080fd5b50610253600435602435610b47565b34801561044857600080fd5b50610301600160a060020a0360043516610c92565b34801561046957600080fd5b50610472610d06565b60408051600160a060020a039092168252519081900360200190f35b34801561049a57600080fd5b50610472610d15565b3480156104af57600080fd5b50610227610d24565b3480156104c457600080fd5b5061018e610d35565b3480156104d957600080fd5b50610227600160a060020a0360043516602435610d96565b3480156104fd57600080fd5b50610227600160a060020a0360043516602435610e87565b34801561052157600080fd5b50610253610f7f565b34801561053657600080fd5b50610253610f85565b34801561054b57600080fd5b50610301600160a060020a0360043516610f8b565b34801561056c57600080fd5b50610253600160a060020a03600435811690602435166111ad565b34801561059357600080fd5b50610301600160a060020a03600435166111d8565b3480156105b457600080fd5b50610253600160a060020a03600435166111f7565b3480156105d557600080fd5b50610253600435611212565b60338054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561066d5780601f106106425761010080835404028352916020019161066d565b820191906000526020600020905b81548152906001019060200180831161065057829003601f168201915b505050505090505b90565b33600081815260a260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b60006106f6609f548361123190919063ffffffff16565b90505b919050565b60008054610100900460ff16806107185750610718611266565b80610726575060005460ff16155b15156107b957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201527f656e20696e697469616c697a6564000000000000000000000000000000000000606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff191691909117909255845191900460ff16906107f0906033906020870190611495565b508251610804906034906020860190611495565b506035805460ff90931660ff1990931692909217909155600080549115156101000261ff00199092169190911790555050565b609e5490565b60008083600160a060020a038116151561085657600080fd5b600160a060020a03811630141561086c57600080fd5b600160a060020a038616600090815260a2602090815260408083203384529091529020546108a0908563ffffffff61127016565b600160a060020a038716600090815260a260209081526040808320338452909152902055609f546108d890859063ffffffff61123116565b600160a060020a038716600090815260a16020526040902054909250610904908363ffffffff61127016565b600160a060020a03808816600090815260a160205260408082209390935590871681522054610939908363ffffffff61128716565b600160a060020a03808716600081815260a1602090815260409182902094909455805188815290519193928a16927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350600195945050505050565b60355460ff1690565b33600090815260a260209081526040808320600160a060020a03861684529091528120546109d9908363ffffffff61128716565b33600081815260a260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b65038f18b3bfff1990565b6000811515610a5a575060006106f9565b609f546106f690839063ffffffff61129916565b609f5481565b6000811515610a85575060006106f9565b60a0546106f690633b9aca0090610aa390859063ffffffff61129916565b9063ffffffff61123116565b609f54600160a060020a038216600090815260a1602052604081205490916106f6919063ffffffff61129916565b610ae5610d24565b1515610af057600080fd5b606854604051600160a060020a03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a26068805473ffffffffffffffffffffffffffffffffffffffff19169055565b609b54600090600160a060020a03163314610b6157600080fd5b609c54421015610b7057600080fd5b811515610bb857609e54604080519182525184917f72725a3b1e5bd622d6bcd1339bb31279c351abe8f541ac7fd320f24e1b1641f2919081900360200190a250609e546106d9565b6000821215610be457610bdc610bcd836112bc565b609e549063ffffffff61127016565b609e55610bfb565b609e54610bf7908363ffffffff61128716565b609e555b609e546fffffffffffffffffffffffffffffffff1015610c2a576fffffffffffffffffffffffffffffffff609e555b609e54610c4d906503a3529440006000195b06600019039063ffffffff61129916565b609f55609e54604080519182525184917f72725a3b1e5bd622d6bcd1339bb31279c351abe8f541ac7fd320f24e1b1641f2919081900360200190a250609e5492915050565b610c9a610d24565b1515610ca557600080fd5b609b8054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517f0e6961f1a1afb87eaf51fd64f22ddc10062e23aa7838eac5d0bdf140bfd389729181900360200190a150565b606854600160a060020a031690565b609b54600160a060020a031681565b606854600160a060020a0316331490565b60348054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561066d5780601f106106425761010080835404028352916020019161066d565b33600090815260a260209081526040808320600160a060020a0386168452909152812054808310610dea5733600090815260a260209081526040808320600160a060020a0388168452909152812055610e1f565b610dfa818463ffffffff61127016565b33600090815260a260209081526040808320600160a060020a03891684529091529020555b33600081815260a260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3600191505b5092915050565b60008083600160a060020a0381161515610ea057600080fd5b600160a060020a038116301415610eb657600080fd5b609f54610eca90859063ffffffff61123116565b33600090815260a16020526040902054909250610eed908363ffffffff61127016565b33600090815260a1602052604080822092909255600160a060020a03871681522054610f1f908363ffffffff61128716565b600160a060020a038616600081815260a160209081526040918290209390935580518781529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3506001949350505050565b609c5481565b60a05481565b60008054610100900460ff1680610fa55750610fa5611266565b80610fb3575060005460ff16155b151561104657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201527f656e20696e697469616c697a6564000000000000000000000000000000000000606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff19169190911790925560408051808201825260048082527f446967670000000000000000000000000000000000000000000000000000000060208084019190915283518085019094529083527f4449474700000000000000000000000000000000000000000000000000000000908301529290910460ff16916110de9160096106fe565b6110e782611300565b6000609c819055609d805461ffff191690556503a352944000609e818155600160a060020a038516835260a1602052604090922065038f18b3bfff199055905461113391600019610c3c565b609f55609e5461114c906503a352944000600019610c3c565b60a055609e546040805191825251600160a060020a038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3600080549115156101000261ff001990921691909117905550565b600160a060020a03918216600090815260a26020908152604080832093909416825291909152205490565b6111e0610d24565b15156111eb57600080fd5b6111f481611417565b50565b600160a060020a0316600090815260a1602052604090205490565b60006106f66009600a0a610aa360a0548561123190919063ffffffff16565b6000808315156112445760009150610e80565b5082820282848281151561125457fe5b041461125f57600080fd5b9392505050565b303b8015905b5090565b6000808383111561128057600080fd5b5050900390565b60008282018381101561125f57600080fd5b6000808083116112a857600080fd5b82848115156112b357fe5b04949350505050565b60007f80000000000000000000000000000000000000000000000000000000000000008214156112eb57600080fd5b600082126112f957816106f6565b5060000390565b60008054610100900460ff168061131a575061131a611266565b80611328575060005460ff16155b15156113bb57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201527f656e20696e697469616c697a6564000000000000000000000000000000000000606482015290519081900360840190fd5b50600080546068805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03949094169390931790925561ff001980831661010090811760ff19166001179091169281900460ff16151502919091179055565b600160a060020a038116151561142c57600080fd5b606854604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36068805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106114d657805160ff1916838001178555611503565b82800160010185558215611503579182015b828111156115035782518255916020019190600101906114e8565b5061126c926106759250905b8082111561126c576000815560010161150f5600a165627a7a72305820f5b519810c14f50b729ed6ca82437d6e95ace911e1cd34ba208dbe6aec9937c40029",
  "bytecodeSha1": "65d0224b07f45a34ecbc9558f710c5ab0f2b2dc5",
  "compiler": {
    "evm_version": "byzantium",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.4.24+commit.e67f0147"
  },
  "contractName": "UFragments",
  "coverageMap": {
    "branches": {
      "1": {
        "UFragments.decreaseAllowance": {
          "78": [
            12194,
            12221,
            false
          ]
        },
        "UFragments.rebase": {
          "75": [
            2784,
            2806,
            true
          ],
          "76": [
            4596,
            4612,
            false
          ],
          "77": [
            4721,
            4736,
            false
          ]
        },
        "UFragments.sharesToFragments": {
          "73": [
            7899,
            7910,
            false
          ]
        },
        "UFragments.sharesToScaledShares": {
          "74": [
            8353,
            8364,
            false
          ]
        },
        "UFragments.transfer": {
          "79": [
            2653,
            2671,
            true
          ],
          "80": [
            2690,
            2709,
            true
          ]
        }
      },
      "10": {
        "Ownable._transferOwnership": {
          "85": [
            1958,
            1980,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "84": [
            931,
            940,
            true
          ]
        }
      },
      "11": {},
      "12": {},
      "15": {
        "Ownable.initialize": {
          "81": [
            1024,
            1036,
            true
          ],
          "82": [
            1040,
            1055,
            true
          ],
          "83": [
            1060,
            1071,
            true
          ]
        }
      },
      "3": {
        "SafeMathInt.abs": {
          "91": [
            2915,
            2930,
            true
          ],
          "92": [
            2948,
            2953,
            true
          ]
        }
      },
      "9": {
        "SafeMath.add": {
          "89": [
            1377,
            1383,
            true
          ]
        },
        "SafeMath.div": {
          "90": [
            777,
            782,
            true
          ]
        },
        "SafeMath.mul": {
          "86": [
            487,
            493,
            false
          ],
          "87": [
            555,
            565,
            true
          ]
        },
        "SafeMath.sub": {
          "88": [
            1160,
            1166,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {
        "UFragments.allowance": {
          "56": [
            9472,
            9513
          ]
        },
        "UFragments.approve": {
          "1": [
            10976,
            11022
          ],
          "2": [
            11032,
            11073
          ],
          "3": [
            11083,
            11094
          ]
        },
        "UFragments.balanceOf": {
          "22": [
            7093,
            7143
          ]
        },
        "UFragments.decreaseAllowance": {
          "38": [
            12237,
            12279
          ],
          "39": [
            12310,
            12380
          ],
          "40": [
            12400,
            12474
          ],
          "41": [
            12484,
            12495
          ]
        },
        "UFragments.fragmentsToShares": {
          "4": [
            7614,
            7654
          ]
        },
        "UFragments.increaseAllowance": {
          "15": [
            11561,
            11656
          ],
          "16": [
            11666,
            11740
          ],
          "17": [
            11750,
            11761
          ]
        },
        "UFragments.initialize": {
          "46": [
            6093,
            6150
          ],
          "47": [
            6160,
            6186
          ],
          "48": [
            6197,
            6216
          ],
          "49": [
            6226,
            6256
          ],
          "50": [
            6266,
            6295
          ],
          "51": [
            6306,
            6341
          ],
          "52": [
            6351,
            6388
          ],
          "53": [
            6398,
            6449
          ],
          "54": [
            6459,
            6517
          ],
          "55": [
            6528,
            6577
          ]
        },
        "UFragments.rebase": {
          "25": [
            4628,
            4663
          ],
          "26": [
            4677,
            4696
          ],
          "27": [
            4752,
            4811
          ],
          "28": [
            4842,
            4895
          ],
          "29": [
            4961,
            4986
          ],
          "30": [
            5007,
            5058
          ],
          "31": [
            5951,
            5986
          ],
          "32": [
            5996,
            6015
          ]
        },
        "UFragments.scaledSharesToShares": {
          "59": [
            8165,
            8250
          ]
        },
        "UFragments.setMonetaryPolicy": {
          "33": [
            4108,
            4140
          ],
          "34": [
            4150,
            4196
          ]
        },
        "UFragments.sharesOf": {
          "58": [
            7346,
            7372
          ]
        },
        "UFragments.sharesToFragments": {
          "18": [
            7926,
            7934
          ],
          "19": [
            7954,
            7991
          ]
        },
        "UFragments.sharesToScaledShares": {
          "20": [
            8380,
            8388
          ],
          "21": [
            8408,
            8490
          ]
        },
        "UFragments.totalSupply": {
          "8": [
            6715,
            6734
          ]
        },
        "UFragments.transfer": {
          "42": [
            8871,
            8942
          ],
          "43": [
            8952,
            9007
          ],
          "44": [
            9017,
            9053
          ],
          "45": [
            9063,
            9074
          ]
        },
        "UFragments.transferFrom": {
          "9": [
            9918,
            10002
          ],
          "10": [
            10073,
            10132
          ],
          "11": [
            10142,
            10197
          ],
          "12": [
            10207,
            10237
          ],
          "13": [
            10248,
            10259
          ]
        }
      },
      "10": {
        "Ownable._transferOwnership": {
          "70": [
            1950,
            1981
          ],
          "71": [
            1987,
            2030
          ],
          "72": [
            2036,
            2053
          ]
        },
        "Ownable.initialize": {
          "69": [
            671,
            686
          ]
        },
        "Ownable.isOwner": {
          "36": [
            1084,
            1111
          ]
        },
        "Ownable.owner": {
          "35": [
            798,
            811
          ]
        },
        "Ownable.renounceOwnership": {
          "23": [
            1432,
            1463
          ],
          "24": [
            1469,
            1488
          ]
        },
        "Ownable.transferOwnership": {
          "57": [
            1722,
            1750
          ]
        }
      },
      "11": {
        "ERC20Detailed.decimals": {
          "14": [
            982,
            998
          ]
        },
        "ERC20Detailed.initialize": {
          "5": [
            554,
            566
          ],
          "6": [
            572,
            588
          ],
          "7": [
            594,
            614
          ]
        },
        "ERC20Detailed.name": {
          "0": [
            721,
            733
          ]
        },
        "ERC20Detailed.symbol": {
          "37": [
            844,
            858
          ]
        }
      },
      "12": {},
      "15": {
        "Initializable.isConstructor": {
          "63": [
            1797,
            1811
          ]
        }
      },
      "3": {
        "SafeMathInt.abs": {
          "67": [
            2907,
            2931
          ],
          "68": [
            2941,
            2962
          ]
        }
      },
      "9": {
        "SafeMath.add": {
          "65": [
            1369,
            1384
          ]
        },
        "SafeMath.div": {
          "66": [
            769,
            783
          ]
        },
        "SafeMath.mul": {
          "60": [
            503,
            511
          ],
          "61": [
            547,
            566
          ],
          "62": [
            573,
            581
          ]
        },
        "SafeMath.sub": {
          "64": [
            1152,
            1167
          ]
        }
      }
    }
  },
  "dependencies": [
    "ERC20Detailed",
    "IERC20",
    "Initializable",
    "Ownable",
    "SafeMath",
    "SafeMathInt"
  ],
  "deployedBytecode": "6080604052600436106101745763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610179578063095ea7b31461020357806313ca42e81461023b5780631624f6c61461026557806318160ddd1461030357806323b872dd14610318578063313ce56714610342578063395093511461036d5780633a98ef39146103915780635d2dde1d146103a65780636f97854c146103be5780636fafb236146103d357806370a08231146103eb578063715018a61461040c5780637a43e23f146104215780638b5a6a081461043c5780638da5cb5b1461045d5780638e27d7d71461048e5780638f32d59b146104a357806395d89b41146104b8578063a457c2d7146104cd578063a9059cbb146104f1578063b8fd8e7314610515578063bc02f3f71461052a578063c4d66de81461053f578063dd62ed3e14610560578063f2fde38b14610587578063f5eb42dc146105a8578063fb334b55146105c9575b600080fd5b34801561018557600080fd5b5061018e6105e1565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101c85781810151838201526020016101b0565b50505050905090810190601f1680156101f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020f57600080fd5b50610227600160a060020a0360043516602435610678565b604080519115158252519081900360200190f35b34801561024757600080fd5b506102536004356106df565b60408051918252519081900360200190f35b34801561027157600080fd5b506040805160206004803580820135601f810184900484028501840190955284845261030194369492936024939284019190819084018382808284375050604080516020601f89358b018035918201839004830284018301909452808352979a9998810197919650918201945092508291508401838280828437509497505050923560ff1693506106fe92505050565b005b34801561030f57600080fd5b50610253610837565b34801561032457600080fd5b50610227600160a060020a036004358116906024351660443561083d565b34801561034e57600080fd5b5061035761099c565b6040805160ff9092168252519081900360200190f35b34801561037957600080fd5b50610227600160a060020a03600435166024356109a5565b34801561039d57600080fd5b50610253610a3e565b3480156103b257600080fd5b50610253600435610a49565b3480156103ca57600080fd5b50610253610a6e565b3480156103df57600080fd5b50610253600435610a74565b3480156103f757600080fd5b50610253600160a060020a0360043516610aaf565b34801561041857600080fd5b50610301610add565b34801561042d57600080fd5b50610253600435602435610b47565b34801561044857600080fd5b50610301600160a060020a0360043516610c92565b34801561046957600080fd5b50610472610d06565b60408051600160a060020a039092168252519081900360200190f35b34801561049a57600080fd5b50610472610d15565b3480156104af57600080fd5b50610227610d24565b3480156104c457600080fd5b5061018e610d35565b3480156104d957600080fd5b50610227600160a060020a0360043516602435610d96565b3480156104fd57600080fd5b50610227600160a060020a0360043516602435610e87565b34801561052157600080fd5b50610253610f7f565b34801561053657600080fd5b50610253610f85565b34801561054b57600080fd5b50610301600160a060020a0360043516610f8b565b34801561056c57600080fd5b50610253600160a060020a03600435811690602435166111ad565b34801561059357600080fd5b50610301600160a060020a03600435166111d8565b3480156105b457600080fd5b50610253600160a060020a03600435166111f7565b3480156105d557600080fd5b50610253600435611212565b60338054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561066d5780601f106106425761010080835404028352916020019161066d565b820191906000526020600020905b81548152906001019060200180831161065057829003601f168201915b505050505090505b90565b33600081815260a260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b60006106f6609f548361123190919063ffffffff16565b90505b919050565b60008054610100900460ff16806107185750610718611266565b80610726575060005460ff16155b15156107b957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201527f656e20696e697469616c697a6564000000000000000000000000000000000000606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff191691909117909255845191900460ff16906107f0906033906020870190611495565b508251610804906034906020860190611495565b506035805460ff90931660ff1990931692909217909155600080549115156101000261ff00199092169190911790555050565b609e5490565b60008083600160a060020a038116151561085657600080fd5b600160a060020a03811630141561086c57600080fd5b600160a060020a038616600090815260a2602090815260408083203384529091529020546108a0908563ffffffff61127016565b600160a060020a038716600090815260a260209081526040808320338452909152902055609f546108d890859063ffffffff61123116565b600160a060020a038716600090815260a16020526040902054909250610904908363ffffffff61127016565b600160a060020a03808816600090815260a160205260408082209390935590871681522054610939908363ffffffff61128716565b600160a060020a03808716600081815260a1602090815260409182902094909455805188815290519193928a16927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a350600195945050505050565b60355460ff1690565b33600090815260a260209081526040808320600160a060020a03861684529091528120546109d9908363ffffffff61128716565b33600081815260a260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b65038f18b3bfff1990565b6000811515610a5a575060006106f9565b609f546106f690839063ffffffff61129916565b609f5481565b6000811515610a85575060006106f9565b60a0546106f690633b9aca0090610aa390859063ffffffff61129916565b9063ffffffff61123116565b609f54600160a060020a038216600090815260a1602052604081205490916106f6919063ffffffff61129916565b610ae5610d24565b1515610af057600080fd5b606854604051600160a060020a03909116907ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482090600090a26068805473ffffffffffffffffffffffffffffffffffffffff19169055565b609b54600090600160a060020a03163314610b6157600080fd5b609c54421015610b7057600080fd5b811515610bb857609e54604080519182525184917f72725a3b1e5bd622d6bcd1339bb31279c351abe8f541ac7fd320f24e1b1641f2919081900360200190a250609e546106d9565b6000821215610be457610bdc610bcd836112bc565b609e549063ffffffff61127016565b609e55610bfb565b609e54610bf7908363ffffffff61128716565b609e555b609e546fffffffffffffffffffffffffffffffff1015610c2a576fffffffffffffffffffffffffffffffff609e555b609e54610c4d906503a3529440006000195b06600019039063ffffffff61129916565b609f55609e54604080519182525184917f72725a3b1e5bd622d6bcd1339bb31279c351abe8f541ac7fd320f24e1b1641f2919081900360200190a250609e5492915050565b610c9a610d24565b1515610ca557600080fd5b609b8054600160a060020a03831673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517f0e6961f1a1afb87eaf51fd64f22ddc10062e23aa7838eac5d0bdf140bfd389729181900360200190a150565b606854600160a060020a031690565b609b54600160a060020a031681565b606854600160a060020a0316331490565b60348054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561066d5780601f106106425761010080835404028352916020019161066d565b33600090815260a260209081526040808320600160a060020a0386168452909152812054808310610dea5733600090815260a260209081526040808320600160a060020a0388168452909152812055610e1f565b610dfa818463ffffffff61127016565b33600090815260a260209081526040808320600160a060020a03891684529091529020555b33600081815260a260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3600191505b5092915050565b60008083600160a060020a0381161515610ea057600080fd5b600160a060020a038116301415610eb657600080fd5b609f54610eca90859063ffffffff61123116565b33600090815260a16020526040902054909250610eed908363ffffffff61127016565b33600090815260a1602052604080822092909255600160a060020a03871681522054610f1f908363ffffffff61128716565b600160a060020a038616600081815260a160209081526040918290209390935580518781529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3506001949350505050565b609c5481565b60a05481565b60008054610100900460ff1680610fa55750610fa5611266565b80610fb3575060005460ff16155b151561104657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201527f656e20696e697469616c697a6564000000000000000000000000000000000000606482015290519081900360840190fd5b5060008054600161010061ff00198316811760ff19169190911790925560408051808201825260048082527f446967670000000000000000000000000000000000000000000000000000000060208084019190915283518085019094529083527f4449474700000000000000000000000000000000000000000000000000000000908301529290910460ff16916110de9160096106fe565b6110e782611300565b6000609c819055609d805461ffff191690556503a352944000609e818155600160a060020a038516835260a1602052604090922065038f18b3bfff199055905461113391600019610c3c565b609f55609e5461114c906503a352944000600019610c3c565b60a055609e546040805191825251600160a060020a038416916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3600080549115156101000261ff001990921691909117905550565b600160a060020a03918216600090815260a26020908152604080832093909416825291909152205490565b6111e0610d24565b15156111eb57600080fd5b6111f481611417565b50565b600160a060020a0316600090815260a1602052604090205490565b60006106f66009600a0a610aa360a0548561123190919063ffffffff16565b6000808315156112445760009150610e80565b5082820282848281151561125457fe5b041461125f57600080fd5b9392505050565b303b8015905b5090565b6000808383111561128057600080fd5b5050900390565b60008282018381101561125f57600080fd5b6000808083116112a857600080fd5b82848115156112b357fe5b04949350505050565b60007f80000000000000000000000000000000000000000000000000000000000000008214156112eb57600080fd5b600082126112f957816106f6565b5060000390565b60008054610100900460ff168061131a575061131a611266565b80611328575060005460ff16155b15156113bb57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f436f6e747261637420696e7374616e63652068617320616c726561647920626560448201527f656e20696e697469616c697a6564000000000000000000000000000000000000606482015290519081900360840190fd5b50600080546068805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03949094169390931790925561ff001980831661010090811760ff19166001179091169281900460ff16151502919091179055565b600160a060020a038116151561142c57600080fd5b606854604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36068805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106114d657805160ff1916838001178555611503565b82800160010185558215611503579182015b828111156115035782518255916020019190600101906114e8565b5061126c926106759250905b8082111561126c576000815560010161150f5600a165627a7a72305820f5b519810c14f50b729ed6ca82437d6e95ace911e1cd34ba208dbe6aec9937c40029",
  "deployedSourceMap": "835:11669:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:67:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;671:67:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;671:67:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10895:206:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10895:206:1;-1:-1:-1;;;;;10895:206:1;;;;;;;;;;;;;;;;;;;;;;;;;7528:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7528:133:1;;;;;;;;;;;;;;;;;;;;;465:154:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;465:154:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;465:154:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;465:154:11;;;;-1:-1:-1;465:154:11;-1:-1:-1;465:154:11;;-1:-1:-1;465:154:11;;;;;;;;-1:-1:-1;465:154:11;;-1:-1:-1;;;465:154:11;;;;;-1:-1:-1;465:154:11;;-1:-1:-1;;;465:154:11;;;6652:89:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6652:89:1;;;;9774:492;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9774:492:1;-1:-1:-1;;;;;9774:492:1;;;;;;;;;;;;929:74:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;929:74:11;;;;;;;;;;;;;;;;;;;;;;;11465:303:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11465:303:1;-1:-1:-1;;;;;11465:303:1;;;;;;;6817:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6817:89:1;;;;7812:186;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7812:186:1;;;;;3563:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3563:33:1;;;;8263:234;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8263:234:1;;;;;7021:129;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7021:129:1;-1:-1:-1;;;;;7021:129:1;;;;;1380:113:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1380:113:10;;;;4464:1558:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4464:1558:1;;;;;;;4027:176;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4027:176:1;-1:-1:-1;;;;;4027:176:1;;;;;746:70:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;746:70:10;;;;;;;;-1:-1:-1;;;;;746:70:10;;;;;;;;;;;;;;2344:29:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2344:29:1;;;;1033:83:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1033:83:10;;;;792:71:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;792:71:11;;;;12022:480:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12022:480:1;-1:-1:-1;;;;;12022:480:1;;;;;;;8715:366;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8715:366:1;-1:-1:-1;;;;;8715:366:1;;;;;;;2379:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2379:30:1;;;;3602:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3602:40:1;;;;6028:556;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6028:556:1;-1:-1:-1;;;;;6028:556:1;;;;;9380:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;9380:140:1;-1:-1:-1;;;;;9380:140:1;;;;;;;;;;1654:101:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1654:101:10;-1:-1:-1;;;;;1654:101:10;;;;;7275:104:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7275:104:1;-1:-1:-1;;;;;7275:104:1;;;;;8076:181;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8076:181:1;;;;;671:67:11;728:5;721:12;;;;;;;;-1:-1:-1;;721:12:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;707:6;;721:12;;728:5;;721:12;;728:5;721:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:67;;:::o;10895:206:1:-;10994:10;10960:4;10976:29;;;:17;:29;;;;;;;;-1:-1:-1;;;;;10976:38:1;;;;;;;;;;;:46;;;11037:36;;;;;;;10960:4;;10976:38;;10994:10;;11037:36;;;;;;;;-1:-1:-1;11090:4:1;10895:206;;;;;:::o;7528:133::-;7595:7;7621:33;7635:18;;7621:9;:13;;:33;;;;:::i;:::-;7614:40;;7528:133;;;;:::o;465:154:11:-;1129:20:15;1024:12;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:15;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1152:12:15;;;;;-1:-1:-1;;1170:19:15;;;;-1:-1:-1;;1195:18:15;;;;;;;;554:12:11;;1152::15;;;;;;554::11;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;572:16:11;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;594:9:11;:20;;;;;;-1:-1:-1;;594:20:11;;;;;;;;;;:9;1228:30:15;;;;;594:20:11;1228:30:15;-1:-1:-1;;1228:30:15;;;;;;;;;-1:-1:-1;;465:154:11:o;6652:89:1:-;6722:12;;6652:89;:::o;9774:492::-;9902:4;;9889:2;-1:-1:-1;;;;;2653:18:1;;;;2645:27;;;;;;-1:-1:-1;;;;;2690:19:1;;2704:4;2690:19;;2682:28;;;;;;-1:-1:-1;;;;;9956:23:1;;;;;;:17;:23;;;;;;;;9980:10;9956:35;;;;;;;;:46;;9996:5;9956:46;:39;:46;:::i;:::-;-1:-1:-1;;;;;9918:23:1;;;;;;:17;:23;;;;;;;;9942:10;9918:35;;;;;;;:84;10044:18;;10034:29;;:5;;:29;:9;:29;:::i;:::-;-1:-1:-1;;;;;10096:20:1;;;;;;:14;:20;;;;;;10013:50;;-1:-1:-1;10096:36:1;;10013:50;10096:36;:24;:36;:::i;:::-;-1:-1:-1;;;;;10073:20:1;;;;;;;:14;:20;;;;;;:59;;;;10163:18;;;;;;;:34;;10186:10;10163:34;:22;:34;:::i;:::-;-1:-1:-1;;;;;10142:18:1;;;;;;;:14;:18;;;;;;;;;:55;;;;10212:25;;;;;;;10142:18;;10212:25;;;;;;;;;;;;;-1:-1:-1;10255:4:1;;9774:492;-1:-1:-1;;;;;9774:492:1:o;929:74:11:-;989:9;;;;929:74;:::o;11465:303:1:-;11620:10;11545:4;11602:29;;;:17;:29;;;;;;;;-1:-1:-1;;;;;11602:38:1;;;;;;;;;;:54;;11645:10;11602:54;:42;:54;:::i;:::-;11579:10;11561:29;;;;:17;:29;;;;;;;;-1:-1:-1;;;;;11561:38:1;;;;;;;;;;;;:95;;;11671:69;;;;;;11561:38;;11671:69;;;;;;;;;;;-1:-1:-1;11757:4:1;11465:303;;;;:::o;6817:89::-;-1:-1:-1;;3343:50:1;6817:89::o;7812:186::-;7876:7;7899:11;;7895:50;;;-1:-1:-1;7933:1:1;7926:8;;7895:50;7972:18;;7961:30;;:6;;:30;:10;:30;:::i;3563:33::-;;;;:::o;8263:234::-;8330:7;8353:11;;8349:50;;;-1:-1:-1;8387:1:1;8380:8;;8349:50;8426:25;;8415:75;;8457:32;;8415:37;;:6;;:37;:10;:37;:::i;:::-;:41;:75;:41;:75;:::i;7021:129::-;7124:18;;-1:-1:-1;;;;;7100:19:1;;7074:7;7100:19;;;:14;:19;;;;;;7074:7;;7100:43;;:19;:43;:23;:43;:::i;1380:113:10:-;931:9;:7;:9::i;:::-;923:18;;;;;;;;1456:6;;1437:26;;-1:-1:-1;;;;;1456:6:10;;;;1437:26;;1456:6;;1437:26;1469:6;:19;;-1:-1:-1;;1469:19:10;;;1380:113::o;4464:1558:1:-;2478:14;;4573:7;;-1:-1:-1;;;;;2478:14:1;2464:10;:28;2456:37;;;;;;2791:15;;2784:3;:22;;2776:31;;;;;;4596:16;;4592:115;;;4650:12;;4633:30;;;;;;;4643:5;;4633:30;;;;;;;;;;-1:-1:-1;4684:12:1;;4677:19;;4592:115;4735:1;4721:11;:15;4717:189;;;4767:44;4792:17;:11;:15;:17::i;:::-;4767:12;;;:44;:16;:44;:::i;:::-;4752:12;:59;4717:189;;;4857:12;;:38;;4882:11;4857:38;:16;:38;:::i;:::-;4842:12;:53;4717:189;4920:12;;3511:11;-1:-1:-1;4916:81:1;;;3511:11;4961:12;:25;4916:81;5045:12;;5028:30;;3097:19;-1:-1:-1;;3358:34:1;;-1:-1:-1;;3343:50:1;;5028:30;:16;:30;:::i;:::-;5007:18;:51;5973:12;;5956:30;;;;;;;5966:5;;5956:30;;;;;;;;;;-1:-1:-1;6003:12:1;;4464:1558;;;;:::o;4027:176::-;931:9:10;:7;:9::i;:::-;923:18;;;;;;;;4108:14:1;:32;;-1:-1:-1;;;;;4108:32:1;;-1:-1:-1;;4108:32:1;;;;;;;;4155:41;;;;;;;;;;;;;;;;4027:176;:::o;746:70:10:-;805:6;;-1:-1:-1;;;;;805:6:10;746:70;:::o;2344:29:1:-;;;-1:-1:-1;;;;;2344:29:1;;:::o;1033:83:10:-;1105:6;;-1:-1:-1;;;;;1105:6:10;1091:10;:20;;1033:83::o;792:71:11:-;851:7;844:14;;;;;;;;-1:-1:-1;;844:14:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;830:6;;844:14;;851:7;;844:14;;851:7;844:14;;;;;;;;;;;;;;;;;;;;;;;;12022:480:1;12160:10;12107:4;12142:29;;;:17;:29;;;;;;;;-1:-1:-1;;;;;12142:38:1;;;;;;;;;;12194:27;;;12190:201;;12255:10;12278:1;12237:29;;;:17;:29;;;;;;;;-1:-1:-1;;;;;12237:38:1;;;;;;;;;:42;12190:201;;;12351:29;:8;12364:15;12351:29;:12;:29;:::i;:::-;12328:10;12310:29;;;;:17;:29;;;;;;;;-1:-1:-1;;;;;12310:38:1;;;;;;;;;:70;12190:201;12414:10;12435:29;;;;:17;:29;;;;;;;;-1:-1:-1;;;;;12405:69:1;;12435:38;;;;;;;;;;;12405:69;;;;;;;;;12414:10;12405:69;;;;;;;;;;;12491:4;12484:11;;12022:480;;;;;;:::o;8715:366::-;8795:4;;8782:2;-1:-1:-1;;;;;2653:18:1;;;;2645:27;;;;;;-1:-1:-1;;;;;2690:19:1;;2704:4;2690:19;;2682:28;;;;;;8842:18;;8832:29;;:5;;:29;:9;:29;:::i;:::-;8915:10;8900:26;;;;:14;:26;;;;;;8811:50;;-1:-1:-1;8900:42:1;;8811:50;8900:42;:30;:42;:::i;:::-;8886:10;8871:26;;;;:14;:26;;;;;;:71;;;;-1:-1:-1;;;;;8973:18:1;;;;;;:34;;8996:10;8973:34;:22;:34;:::i;:::-;-1:-1:-1;;;;;8952:18:1;;;;;;:14;:18;;;;;;;;;:55;;;;9022:31;;;;;;;8952:18;;9031:10;;9022:31;;;;;;;;;;-1:-1:-1;9070:4:1;;8715:366;-1:-1:-1;;;;8715:366:1:o;2379:30::-;;;;:::o;3602:40::-;;;;:::o;6028:556::-;1129:20:15;1024:12;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:15;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1152:12:15;;;;;-1:-1:-1;;1170:19:15;;;;-1:-1:-1;;1195:18:15;;;;;;;;6093:57:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1152:12:15;;;;;;;6093:57:1;;2867:1;6093:24;:57::i;:::-;6160:26;6179:6;6160:18;:26::i;:::-;6215:1;6197:15;:19;;;6226:22;:30;;-1:-1:-1;;6266:29:1;;;3097:19;6306:12;:35;;;-1:-1:-1;;;;;6351:22:1;;;;:14;:22;;;;;;-1:-1:-1;;6351:37:1;;6436:12;;6419:30;;-1:-1:-1;;3358:34:1;;6419:30;6398:18;:51;6504:12;;6487:30;;3097:19;-1:-1:-1;;3358:34:1;;6487:30;6459:25;:58;6564:12;;6533:44;;;;;;;-1:-1:-1;;;;;6533:44:1;;;6550:3;;6533:44;;;;;;;;;1228:12:15;:30;;;;;;;-1:-1:-1;;1228:30:15;;;;;;;;;-1:-1:-1;6028:556:1:o;9380:140::-;-1:-1:-1;;;;;9479:25:1;;;9453:7;9479:25;;;:17;:25;;;;;;;;:34;;;;;;;;;;;;;9380:140::o;1654:101:10:-;931:9;:7;:9::i;:::-;923:18;;;;;;;;1722:28;1741:8;1722:18;:28::i;:::-;1654:101;:::o;7275:104:1:-;-1:-1:-1;;;;;7353:19:1;7327:7;7353:19;;;:14;:19;;;;;;;7275:104::o;8076:181::-;8146:7;8172:78;2930:1;8217:2;:32;8172:40;8186:25;;8172:9;:13;;:40;;;;:::i;205:381:9:-;263:7;;487:6;;483:35;;;510:1;503:8;;;;483:35;-1:-1:-1;536:5:9;;;540:1;536;:5;555;;;;;;;;:10;547:19;;;;;;580:1;205:381;-1:-1:-1;;;205:381:9:o;1349:467:15:-;1782:7;1770:20;1804:7;;;1349:467;;;:::o;1079:131:9:-;1137:7;;1160:6;;;;1152:15;;;;;;-1:-1:-1;;1185:5:9;;;1079:131::o;1273:::-;1331:7;1358:5;;;1377:6;;;;1369:15;;;;;696:270;754:7;;777:5;;;769:14;;;;;;863:1;859;:5;;;;;;;;;696:270;-1:-1:-1;;;;696:270:9:o;2815:154:3:-;2885:6;1296:16;2915:15;;;2907:24;;;;;;2952:1;2948;:5;:14;;2961:1;2948:14;;;-1:-1:-1;2956:2:3;;;2815:154::o;610:81:10:-;1129:20:15;1024:12;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:15;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1152:12:15;;;671:6:10;:15;;-1:-1:-1;;671:15:10;-1:-1:-1;;;;;671:15:10;;;;;;;;;;;-1:-1:-1;;1170:19:15;;;1152:12;1170:19;;;-1:-1:-1;;1195:18:15;-1:-1:-1;1195:18:15;1228:30;;;1152:12;;;;;;1228:30;;;;;;;;;610:81:10:o;1889:169::-;-1:-1:-1;;;;;1958:22:10;;;;1950:31;;;;;;2013:6;;1992:38;;-1:-1:-1;;;;;1992:38:10;;;;2013:6;;1992:38;;2013:6;;1992:38;2036:6;:17;;-1:-1:-1;;2036:17:10;-1:-1:-1;;;;;2036:17:10;;;;;;;;;;1889:169::o;835:11669:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;835:11669:1;;;;-1:-1:-1;835:11669:1;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner has allowed to a spender.",
        "params": {
          "owner_": "The address which owns the funds.",
          "spender": "The address which will spend the funds."
        },
        "return": "The number of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. This method is included for ERC20 compatibility. increaseAllowance and decreaseAllowance should be used instead. Changing an allowance with this method brings the risk that someone may transfer both the old and the new allowance - if they are both greater than zero - if a transfer transaction is mined before the later approve() call is mined.",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "params": {
          "who": "The address to query."
        },
        "return": "The balance of the specified address."
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner has allowed to a spender.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "fragmentsToShares(uint256)": {
        "params": {
          "fragments": "Fragment value to convert."
        },
        "return": "The underlying share value of the specified fragment amount."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner has allowed to a spender. This method should be used instead of approve() to avoid the double approval vulnerability described above.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "name()": {
        "return": "the name of the token."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "rebase(uint256,int256)": {
        "details": "Notifies Fragments contract about a new rebase cycle.",
        "params": {
          "supplyDelta": "The number of new fragment tokens to add into circulation via expansion."
        },
        "return": "The total number of fragments after the supply adjustment."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.",
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "scaledSharesToShares(uint256)": {
        "details": "Scaled Shares are a user-friendly representation of shares"
      },
      "setMonetaryPolicy(address)": {
        "params": {
          "monetaryPolicy_": "The address of the monetary policy contract to use for authentication."
        }
      },
      "sharesOf(address)": {
        "params": {
          "who": "The address to query."
        },
        "return": "The underlying shares of the specified address."
      },
      "sharesToFragments(uint256)": {
        "params": {
          "shares": "Share value to convert."
        },
        "return": "The current fragment value of the specified underlying share amount."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalShares()": {
        "return": "The total number of underlying shares."
      },
      "totalSupply()": {
        "return": "The total number of fragments."
      },
      "transfer(address,uint256)": {
        "details": "Transfer tokens to a specified address.",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        },
        "return": "True on success, false otherwise."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another.",
        "params": {
          "from": "The address you want to send tokens from.",
          "to": "The address you want to transfer to.",
          "value": "The amount of tokens to be transferred."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "uFragments ERC20 token"
  },
  "offset": [
    835,
    12504
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x174 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6FDDE03 DUP2 EQ PUSH2 0x179 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x13CA42E8 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x1624F6C6 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0x5D2DDE1D EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0x6F97854C EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x6FAFB236 EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40C JUMPI DUP1 PUSH4 0x7A43E23F EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0x8B5A6A08 EQ PUSH2 0x43C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0x8E27D7D7 EQ PUSH2 0x48E JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0xB8FD8E73 EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xBC02F3F7 EQ PUSH2 0x52A JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x587 JUMPI DUP1 PUSH4 0xF5EB42DC EQ PUSH2 0x5A8 JUMPI DUP1 PUSH4 0xFB334B55 EQ PUSH2 0x5C9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1F5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x678 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x4 CALLDATALOAD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 DUP1 CALLDATALOAD DUP1 DUP3 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x301 SWAP5 CALLDATASIZE SWAP5 SWAP3 SWAP4 PUSH1 0x24 SWAP4 SWAP3 DUP5 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 CALLDATALOAD DUP12 ADD DUP1 CALLDATALOAD SWAP2 DUP3 ADD DUP4 SWAP1 DIV DUP4 MUL DUP5 ADD DUP4 ADD SWAP1 SWAP5 MSTORE DUP1 DUP4 MSTORE SWAP8 SWAP11 SWAP10 SWAP9 DUP2 ADD SWAP8 SWAP2 SWAP7 POP SWAP2 DUP3 ADD SWAP5 POP SWAP3 POP DUP3 SWAP2 POP DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP POP POP SWAP3 CALLDATALOAD PUSH1 0xFF AND SWAP4 POP PUSH2 0x6FE SWAP3 POP POP POP JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x837 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x83D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x357 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x9A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0xA3E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x4 CALLDATALOAD PUSH2 0xA49 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0xA6E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x4 CALLDATALOAD PUSH2 0xA74 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xAAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH2 0xADD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0xB47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xC92 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x472 PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x472 PUSH2 0xD15 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0xD24 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18E PUSH2 0xD35 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xD96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xE87 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0xF7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x536 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0xF85 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xF8B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x11AD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x301 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x11D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x11F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x253 PUSH1 0x4 CALLDATALOAD PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x66D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x642 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x66D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x650 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F6 PUSH1 0x9F SLOAD DUP4 PUSH2 0x1231 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x718 JUMPI POP PUSH2 0x718 PUSH2 0x1266 JUMP JUMPDEST DUP1 PUSH2 0x726 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x7B9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420696E7374616E63652068617320616C7265616479206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E20696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH2 0x100 PUSH2 0xFF00 NOT DUP4 AND DUP2 OR PUSH1 0xFF NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE DUP5 MLOAD SWAP2 SWAP1 DIV PUSH1 0xFF AND SWAP1 PUSH2 0x7F0 SWAP1 PUSH1 0x33 SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 PUSH2 0x1495 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x804 SWAP1 PUSH1 0x34 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x1495 JUMP JUMPDEST POP PUSH1 0x35 DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP4 AND PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9E SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ADDRESS EQ ISZERO PUSH2 0x86C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x8A0 SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x1270 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE PUSH1 0x9F SLOAD PUSH2 0x8D8 SWAP1 DUP6 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1231 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x904 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1270 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x939 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1287 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP9 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP11 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x35 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH2 0x9D9 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1287 AND JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP1 MLOAD SWAP5 DUP6 MSTORE MLOAD SWAP2 SWAP4 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH6 0x38F18B3BFFF NOT SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO PUSH2 0xA5A JUMPI POP PUSH1 0x0 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH2 0x6F6 SWAP1 DUP4 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1299 AND JUMP JUMPDEST PUSH1 0x9F SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO PUSH2 0xA85 JUMPI POP PUSH1 0x0 PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0xA0 SLOAD PUSH2 0x6F6 SWAP1 PUSH4 0x3B9ACA00 SWAP1 PUSH2 0xAA3 SWAP1 DUP6 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1299 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1231 AND JUMP JUMPDEST PUSH1 0x9F SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x6F6 SWAP2 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1299 AND JUMP JUMPDEST PUSH2 0xAE5 PUSH2 0xD24 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xAF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820 SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x68 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9B SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xB61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9C SLOAD TIMESTAMP LT ISZERO PUSH2 0xB70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO ISZERO PUSH2 0xBB8 JUMPI PUSH1 0x9E SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD DUP5 SWAP2 PUSH32 0x72725A3B1E5BD622D6BCD1339BB31279C351ABE8F541AC7FD320F24E1B1641F2 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP PUSH1 0x9E SLOAD PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x0 DUP3 SLT ISZERO PUSH2 0xBE4 JUMPI PUSH2 0xBDC PUSH2 0xBCD DUP4 PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x9E SLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1270 AND JUMP JUMPDEST PUSH1 0x9E SSTORE PUSH2 0xBFB JUMP JUMPDEST PUSH1 0x9E SLOAD PUSH2 0xBF7 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1287 AND JUMP JUMPDEST PUSH1 0x9E SSTORE JUMPDEST PUSH1 0x9E SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF LT ISZERO PUSH2 0xC2A JUMPI PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x9E SSTORE JUMPDEST PUSH1 0x9E SLOAD PUSH2 0xC4D SWAP1 PUSH6 0x3A352944000 PUSH1 0x0 NOT JUMPDEST MOD PUSH1 0x0 NOT SUB SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1299 AND JUMP JUMPDEST PUSH1 0x9F SSTORE PUSH1 0x9E SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD DUP5 SWAP2 PUSH32 0x72725A3B1E5BD622D6BCD1339BB31279C351ABE8F541AC7FD320F24E1B1641F2 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 POP PUSH1 0x9E SLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC9A PUSH2 0xD24 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xCA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9B DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0xE6961F1A1AFB87EAF51FD64F22DDC10062E23AA7838EAC5D0BDF140BFD38972 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x9B SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x34 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x66D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x642 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x66D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP1 DUP4 LT PUSH2 0xDEA JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE PUSH2 0xE1F JUMP JUMPDEST PUSH2 0xDFA DUP2 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x1270 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 SLOAD DUP2 MLOAD SWAP1 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH1 0x1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0xEA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ADDRESS EQ ISZERO PUSH2 0xEB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9F SLOAD PUSH2 0xECA SWAP1 DUP6 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1231 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0xEED SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1270 AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0xF1F SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x1287 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE DUP1 MLOAD DUP8 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 CALLER SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x9C SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xFA5 JUMPI POP PUSH2 0xFA5 PUSH2 0x1266 JUMP JUMPDEST DUP1 PUSH2 0xFB3 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x1046 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420696E7374616E63652068617320616C7265616479206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E20696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH2 0x100 PUSH2 0xFF00 NOT DUP4 AND DUP2 OR PUSH1 0xFF NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH32 0x4469676700000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP6 ADD SWAP1 SWAP5 MSTORE SWAP1 DUP4 MSTORE PUSH32 0x4449474700000000000000000000000000000000000000000000000000000000 SWAP1 DUP4 ADD MSTORE SWAP3 SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP2 PUSH2 0x10DE SWAP2 PUSH1 0x9 PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x10E7 DUP3 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9C DUP2 SWAP1 SSTORE PUSH1 0x9D DUP1 SLOAD PUSH2 0xFFFF NOT AND SWAP1 SSTORE PUSH6 0x3A352944000 PUSH1 0x9E DUP2 DUP2 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND DUP4 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 PUSH6 0x38F18B3BFFF NOT SWAP1 SSTORE SWAP1 SLOAD PUSH2 0x1133 SWAP2 PUSH1 0x0 NOT PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x9F SSTORE PUSH1 0x9E SLOAD PUSH2 0x114C SWAP1 PUSH6 0x3A352944000 PUSH1 0x0 NOT PUSH2 0xC3C JUMP JUMPDEST PUSH1 0xA0 SSTORE PUSH1 0x9E SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP2 PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x11E0 PUSH2 0xD24 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x11EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F4 DUP2 PUSH2 0x1417 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F6 PUSH1 0x9 PUSH1 0xA EXP PUSH2 0xAA3 PUSH1 0xA0 SLOAD DUP6 PUSH2 0x1231 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO ISZERO PUSH2 0x1244 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0xE80 JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x1254 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x125F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST ADDRESS EXTCODESIZE DUP1 ISZERO SWAP1 JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0x1280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x125F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP4 GT PUSH2 0x12A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x12B3 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP3 EQ ISZERO PUSH2 0x12EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SLT PUSH2 0x12F9 JUMPI DUP2 PUSH2 0x6F6 JUMP JUMPDEST POP PUSH1 0x0 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x131A JUMPI POP PUSH2 0x131A PUSH2 0x1266 JUMP JUMPDEST DUP1 PUSH2 0x1328 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x13BB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E747261637420696E7374616E63652068617320616C7265616479206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x656E20696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x84 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x68 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH2 0xFF00 NOT DUP1 DUP4 AND PUSH2 0x100 SWAP1 DUP2 OR PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SWAP2 AND SWAP3 DUP2 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0x142C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x68 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x68 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x14D6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1503 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1503 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1503 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x14E8 JUMP JUMPDEST POP PUSH2 0x126C SWAP3 PUSH2 0x675 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x126C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x150F JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xf5 0xb5 NOT DUP2 0xc EQ 0xf5 SIGNEXTEND PUSH19 0x9ED6CA82437D6E95ACE911E1CD34BA208DBE6A 0xec SWAP10 CALLDATACOPY 0xc4 STOP 0x29 ",
  "pcMap": {
    "0": {
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "LT",
      "path": "1"
    },
    "9": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x174"
    },
    "12": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "18": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH29",
      "path": "1",
      "value": "0x100000000000000000000000000000000000000000000000000000000"
    },
    "48": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "50": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "51": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DIV",
      "path": "1"
    },
    "52": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "AND",
      "path": "1"
    },
    "53": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6FDDE03"
    },
    "58": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP2",
      "path": "1"
    },
    "59": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "60": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x179"
    },
    "63": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "64": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "70": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "71": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x203"
    },
    "74": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "75": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x13CA42E8"
    },
    "81": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "82": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23B"
    },
    "85": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "86": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1624F6C6"
    },
    "92": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "93": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x265"
    },
    "96": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "97": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x18160DDD"
    },
    "103": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "104": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x303"
    },
    "107": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "108": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "109": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "114": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x318"
    },
    "118": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "119": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "120": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x313CE567"
    },
    "125": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x342"
    },
    "129": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "130": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "131": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x39509351"
    },
    "136": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "137": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36D"
    },
    "140": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "141": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "142": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3A98EF39"
    },
    "147": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "148": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x391"
    },
    "151": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "152": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "153": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x5D2DDE1D"
    },
    "158": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "159": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A6"
    },
    "162": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "163": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "164": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6F97854C"
    },
    "169": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3BE"
    },
    "173": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "174": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "175": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6FAFB236"
    },
    "180": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "181": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D3"
    },
    "184": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "185": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "186": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "191": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "192": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3EB"
    },
    "195": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "196": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "197": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x715018A6"
    },
    "202": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "203": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x40C"
    },
    "206": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "207": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "208": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x7A43E23F"
    },
    "213": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "214": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x421"
    },
    "217": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "218": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "219": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8B5A6A08"
    },
    "224": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "225": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x43C"
    },
    "228": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "229": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "230": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8DA5CB5B"
    },
    "235": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "236": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x45D"
    },
    "239": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "240": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "241": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8E27D7D7"
    },
    "246": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "247": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x48E"
    },
    "250": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "251": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "252": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8F32D59B"
    },
    "257": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "258": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4A3"
    },
    "261": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "262": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "263": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "268": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "269": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4B8"
    },
    "272": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "273": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "274": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA457C2D7"
    },
    "279": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "280": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4CD"
    },
    "283": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "284": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "285": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA9059CBB"
    },
    "290": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "291": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4F1"
    },
    "294": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "295": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "296": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB8FD8E73"
    },
    "301": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "302": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x515"
    },
    "305": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "306": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "307": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xBC02F3F7"
    },
    "312": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "313": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x52A"
    },
    "316": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "317": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "318": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC4D66DE8"
    },
    "323": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "324": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x53F"
    },
    "327": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "328": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "329": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDD62ED3E"
    },
    "334": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "335": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x560"
    },
    "338": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "339": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "340": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF2FDE38B"
    },
    "345": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "346": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x587"
    },
    "349": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "350": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "351": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF5EB42DC"
    },
    "356": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "357": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A8"
    },
    "360": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "361": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "362": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFB334B55"
    },
    "367": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "EQ",
      "path": "1"
    },
    "368": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5C9"
    },
    "371": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "372": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "373": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "375": {
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "376": {
      "first_revert": true,
      "fn": null,
      "offset": [
        835,
        12504
      ],
      "op": "REVERT",
      "path": "1"
    },
    "377": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "378": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "379": {
      "op": "DUP1"
    },
    "380": {
      "op": "ISZERO"
    },
    "381": {
      "op": "PUSH2",
      "value": "0x185"
    },
    "384": {
      "op": "JUMPI"
    },
    "385": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "387": {
      "op": "DUP1"
    },
    "388": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "REVERT",
      "path": "11"
    },
    "389": {
      "op": "JUMPDEST"
    },
    "390": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "POP",
      "path": "11"
    },
    "391": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x18E"
    },
    "394": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x5E1"
    },
    "397": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "JUMP",
      "path": "11"
    },
    "398": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "399": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "401": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP1",
      "path": "11"
    },
    "402": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "403": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "405": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP1",
      "path": "11"
    },
    "406": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP3",
      "path": "11"
    },
    "407": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "408": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP4",
      "path": "11"
    },
    "409": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "410": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP2",
      "path": "11"
    },
    "411": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP4",
      "path": "11"
    },
    "412": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "ADD",
      "path": "11"
    },
    "413": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "414": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP4",
      "path": "11"
    },
    "415": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "416": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "417": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "418": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP4",
      "path": "11"
    },
    "419": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "420": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "421": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP4",
      "path": "11"
    },
    "422": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "ADD",
      "path": "11"
    },
    "423": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "424": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP6",
      "path": "11"
    },
    "425": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "ADD",
      "path": "11"
    },
    "426": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "427": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP1",
      "path": "11"
    },
    "428": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP4",
      "path": "11"
    },
    "429": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP4",
      "path": "11"
    },
    "430": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "432": {
      "op": "JUMPDEST"
    },
    "433": {
      "op": "DUP4"
    },
    "434": {
      "op": "DUP2"
    },
    "435": {
      "op": "LT"
    },
    "436": {
      "op": "ISZERO"
    },
    "437": {
      "op": "PUSH2",
      "value": "0x1C8"
    },
    "440": {
      "op": "JUMPI"
    },
    "441": {
      "op": "DUP2"
    },
    "442": {
      "op": "DUP2"
    },
    "443": {
      "op": "ADD"
    },
    "444": {
      "op": "MLOAD"
    },
    "445": {
      "op": "DUP4"
    },
    "446": {
      "op": "DUP3"
    },
    "447": {
      "op": "ADD"
    },
    "448": {
      "op": "MSTORE"
    },
    "449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "451": {
      "op": "ADD"
    },
    "452": {
      "op": "PUSH2",
      "value": "0x1B0"
    },
    "455": {
      "op": "JUMP"
    },
    "456": {
      "op": "JUMPDEST"
    },
    "457": {
      "op": "POP"
    },
    "458": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "POP",
      "path": "11"
    },
    "459": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "POP",
      "path": "11"
    },
    "460": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "POP",
      "path": "11"
    },
    "461": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "462": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "POP",
      "path": "11"
    },
    "463": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "464": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP2",
      "path": "11"
    },
    "465": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "ADD",
      "path": "11"
    },
    "466": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "467": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "469": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "AND",
      "path": "11"
    },
    "470": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP1",
      "path": "11"
    },
    "471": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "472": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1F5"
    },
    "475": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "476": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP1",
      "path": "11"
    },
    "477": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP3",
      "path": "11"
    },
    "478": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "SUB",
      "path": "11"
    },
    "479": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP1",
      "path": "11"
    },
    "480": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "481": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "483": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP4",
      "path": "11"
    },
    "484": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "486": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "SUB",
      "path": "11"
    },
    "487": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "490": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "EXP",
      "path": "11"
    },
    "491": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "SUB",
      "path": "11"
    },
    "492": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "NOT",
      "path": "11"
    },
    "493": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "AND",
      "path": "11"
    },
    "494": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP2",
      "path": "11"
    },
    "495": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "496": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "498": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "ADD",
      "path": "11"
    },
    "499": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "500": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "POP",
      "path": "11"
    },
    "501": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "502": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "POP",
      "path": "11"
    },
    "503": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "504": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "POP",
      "path": "11"
    },
    "505": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "POP",
      "path": "11"
    },
    "506": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "POP",
      "path": "11"
    },
    "507": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "509": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "510": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "DUP1",
      "path": "11"
    },
    "511": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "512": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "SUB",
      "path": "11"
    },
    "513": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "514": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "RETURN",
      "path": "11"
    },
    "515": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "516": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "517": {
      "op": "DUP1"
    },
    "518": {
      "op": "ISZERO"
    },
    "519": {
      "op": "PUSH2",
      "value": "0x20F"
    },
    "522": {
      "op": "JUMPI"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "525": {
      "op": "DUP1"
    },
    "526": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "REVERT",
      "path": "1"
    },
    "527": {
      "op": "JUMPDEST"
    },
    "528": {
      "op": "POP"
    },
    "529": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x227"
    },
    "532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "534": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "538": {
      "op": "EXP"
    },
    "539": {
      "op": "SUB"
    },
    "540": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "542": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "543": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "AND",
      "path": "1"
    },
    "544": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "546": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "547": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x678"
    },
    "550": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "JUMP",
      "path": "1"
    },
    "551": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "552": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "554": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "DUP1",
      "path": "1"
    },
    "555": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "556": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "557": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "558": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "559": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "DUP3",
      "path": "1"
    },
    "560": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "561": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "562": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "563": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "DUP2",
      "path": "1"
    },
    "564": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "565": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "SUB",
      "path": "1"
    },
    "566": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "568": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "ADD",
      "path": "1"
    },
    "569": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "570": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "RETURN",
      "path": "1"
    },
    "571": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "572": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "573": {
      "op": "DUP1"
    },
    "574": {
      "op": "ISZERO"
    },
    "575": {
      "op": "PUSH2",
      "value": "0x247"
    },
    "578": {
      "op": "JUMPI"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "581": {
      "op": "DUP1"
    },
    "582": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "REVERT",
      "path": "1"
    },
    "583": {
      "op": "JUMPDEST"
    },
    "584": {
      "op": "POP"
    },
    "585": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x253"
    },
    "588": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "590": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "591": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6DF"
    },
    "594": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "JUMP",
      "path": "1"
    },
    "595": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "596": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "598": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "DUP1",
      "path": "1"
    },
    "599": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "600": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "601": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "DUP3",
      "path": "1"
    },
    "602": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "603": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "604": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "605": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "DUP2",
      "path": "1"
    },
    "606": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "607": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "SUB",
      "path": "1"
    },
    "608": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "610": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "ADD",
      "path": "1"
    },
    "611": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "612": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "RETURN",
      "path": "1"
    },
    "613": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "614": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "615": {
      "op": "DUP1"
    },
    "616": {
      "op": "ISZERO"
    },
    "617": {
      "op": "PUSH2",
      "value": "0x271"
    },
    "620": {
      "op": "JUMPI"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "623": {
      "op": "DUP1"
    },
    "624": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "REVERT",
      "path": "11"
    },
    "625": {
      "op": "JUMPDEST"
    },
    "626": {
      "op": "POP"
    },
    "627": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "629": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP1",
      "path": "11"
    },
    "630": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "631": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "633": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x4"
    },
    "635": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP1",
      "path": "11"
    },
    "636": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "637": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP1",
      "path": "11"
    },
    "638": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP3",
      "path": "11"
    },
    "639": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "ADD",
      "path": "11"
    },
    "640": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "641": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "643": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP2",
      "path": "11"
    },
    "644": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "ADD",
      "path": "11"
    },
    "645": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP5",
      "path": "11"
    },
    "646": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "647": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DIV",
      "path": "11"
    },
    "648": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP5",
      "path": "11"
    },
    "649": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "MUL",
      "path": "11"
    },
    "650": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP6",
      "path": "11"
    },
    "651": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "ADD",
      "path": "11"
    },
    "652": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP5",
      "path": "11"
    },
    "653": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "ADD",
      "path": "11"
    },
    "654": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "655": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "656": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "657": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP5",
      "path": "11"
    },
    "658": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP5",
      "path": "11"
    },
    "659": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "660": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x301"
    },
    "663": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "664": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "CALLDATASIZE",
      "path": "11"
    },
    "665": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "666": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "667": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "668": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x24"
    },
    "670": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "671": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "672": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP5",
      "path": "11"
    },
    "673": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "ADD",
      "path": "11"
    },
    "674": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "675": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "676": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP2",
      "path": "11"
    },
    "677": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "678": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP5",
      "path": "11"
    },
    "679": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "ADD",
      "path": "11"
    },
    "680": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP4",
      "path": "11"
    },
    "681": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP3",
      "path": "11"
    },
    "682": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP1",
      "path": "11"
    },
    "683": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP3",
      "path": "11"
    },
    "684": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP5",
      "path": "11"
    },
    "685": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "CALLDATACOPY",
      "path": "11"
    },
    "686": {
      "op": "POP"
    },
    "687": {
      "op": "POP"
    },
    "688": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "690": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP1",
      "path": "11"
    },
    "691": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "692": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "694": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "696": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP10",
      "path": "11"
    },
    "697": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "698": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP12",
      "path": "11"
    },
    "699": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "ADD",
      "path": "11"
    },
    "700": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP1",
      "path": "11"
    },
    "701": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "702": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "703": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP3",
      "path": "11"
    },
    "704": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "ADD",
      "path": "11"
    },
    "705": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP4",
      "path": "11"
    },
    "706": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "707": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DIV",
      "path": "11"
    },
    "708": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP4",
      "path": "11"
    },
    "709": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "MUL",
      "path": "11"
    },
    "710": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP5",
      "path": "11"
    },
    "711": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "ADD",
      "path": "11"
    },
    "712": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP4",
      "path": "11"
    },
    "713": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "ADD",
      "path": "11"
    },
    "714": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "715": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "716": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "717": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP1",
      "path": "11"
    },
    "718": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP4",
      "path": "11"
    },
    "719": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "720": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "721": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP11",
      "path": "11"
    },
    "722": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP10",
      "path": "11"
    },
    "723": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP9",
      "path": "11"
    },
    "724": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP2",
      "path": "11"
    },
    "725": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "ADD",
      "path": "11"
    },
    "726": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "727": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "728": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP7",
      "path": "11"
    },
    "729": {
      "op": "POP"
    },
    "730": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "731": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP3",
      "path": "11"
    },
    "732": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "ADD",
      "path": "11"
    },
    "733": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "734": {
      "op": "POP"
    },
    "735": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP3",
      "path": "11"
    },
    "738": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "739": {
      "op": "POP"
    },
    "740": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP5",
      "path": "11"
    },
    "741": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "ADD",
      "path": "11"
    },
    "742": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP4",
      "path": "11"
    },
    "743": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP3",
      "path": "11"
    },
    "744": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP1",
      "path": "11"
    },
    "745": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP3",
      "path": "11"
    },
    "746": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "DUP5",
      "path": "11"
    },
    "747": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "CALLDATACOPY",
      "path": "11"
    },
    "748": {
      "op": "POP"
    },
    "749": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "750": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP8",
      "path": "11"
    },
    "751": {
      "op": "POP"
    },
    "752": {
      "op": "POP"
    },
    "753": {
      "op": "POP"
    },
    "754": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "755": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "CALLDATALOAD",
      "path": "11"
    },
    "756": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "758": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "AND",
      "path": "11"
    },
    "759": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "760": {
      "op": "POP"
    },
    "761": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x6FE"
    },
    "764": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "765": {
      "op": "POP"
    },
    "766": {
      "op": "POP"
    },
    "767": {
      "op": "POP"
    },
    "768": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "JUMP",
      "path": "11"
    },
    "769": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "770": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "STOP",
      "path": "11"
    },
    "771": {
      "fn": "UFragments.totalSupply",
      "offset": [
        6652,
        6741
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "772": {
      "fn": "UFragments.totalSupply",
      "offset": [
        6652,
        6741
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "773": {
      "op": "DUP1"
    },
    "774": {
      "op": "ISZERO"
    },
    "775": {
      "op": "PUSH2",
      "value": "0x30F"
    },
    "778": {
      "op": "JUMPI"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "781": {
      "op": "DUP1"
    },
    "782": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.totalSupply",
      "offset": [
        6652,
        6741
      ],
      "op": "REVERT",
      "path": "1"
    },
    "783": {
      "op": "JUMPDEST"
    },
    "784": {
      "fn": "UFragments.totalSupply",
      "offset": [
        6652,
        6741
      ],
      "op": "POP",
      "path": "1"
    },
    "785": {
      "fn": "UFragments.totalSupply",
      "offset": [
        6652,
        6741
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x253"
    },
    "788": {
      "fn": "UFragments.totalSupply",
      "offset": [
        6652,
        6741
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x837"
    },
    "791": {
      "fn": "UFragments.totalSupply",
      "offset": [
        6652,
        6741
      ],
      "op": "JUMP",
      "path": "1"
    },
    "792": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9774,
        10266
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "793": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9774,
        10266
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "794": {
      "op": "DUP1"
    },
    "795": {
      "op": "ISZERO"
    },
    "796": {
      "op": "PUSH2",
      "value": "0x324"
    },
    "799": {
      "op": "JUMPI"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "802": {
      "op": "DUP1"
    },
    "803": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.transferFrom",
      "offset": [
        9774,
        10266
      ],
      "op": "REVERT",
      "path": "1"
    },
    "804": {
      "op": "JUMPDEST"
    },
    "805": {
      "op": "POP"
    },
    "806": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9774,
        10266
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x227"
    },
    "809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "815": {
      "op": "EXP"
    },
    "816": {
      "op": "SUB"
    },
    "817": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9774,
        10266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "819": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9774,
        10266
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "820": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9774,
        10266
      ],
      "op": "DUP2",
      "path": "1"
    },
    "821": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9774,
        10266
      ],
      "op": "AND",
      "path": "1"
    },
    "822": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9774,
        10266
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "823": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9774,
        10266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "825": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9774,
        10266
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "826": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9774,
        10266
      ],
      "op": "AND",
      "path": "1"
    },
    "827": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9774,
        10266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "829": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9774,
        10266
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "830": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9774,
        10266
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x83D"
    },
    "833": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9774,
        10266
      ],
      "op": "JUMP",
      "path": "1"
    },
    "834": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "835": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "836": {
      "op": "DUP1"
    },
    "837": {
      "op": "ISZERO"
    },
    "838": {
      "op": "PUSH2",
      "value": "0x34E"
    },
    "841": {
      "op": "JUMPI"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "844": {
      "op": "DUP1"
    },
    "845": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "REVERT",
      "path": "11"
    },
    "846": {
      "op": "JUMPDEST"
    },
    "847": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "POP",
      "path": "11"
    },
    "848": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x357"
    },
    "851": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x99C"
    },
    "854": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "JUMP",
      "path": "11"
    },
    "855": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "856": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "858": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "DUP1",
      "path": "11"
    },
    "859": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "860": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "862": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "863": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "864": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "AND",
      "path": "11"
    },
    "865": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "DUP3",
      "path": "11"
    },
    "866": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "867": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "868": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "869": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "DUP2",
      "path": "11"
    },
    "870": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "871": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "SUB",
      "path": "11"
    },
    "872": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "874": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "ADD",
      "path": "11"
    },
    "875": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "876": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "RETURN",
      "path": "11"
    },
    "877": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11465,
        11768
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "878": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11465,
        11768
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "879": {
      "op": "DUP1"
    },
    "880": {
      "op": "ISZERO"
    },
    "881": {
      "op": "PUSH2",
      "value": "0x379"
    },
    "884": {
      "op": "JUMPI"
    },
    "885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "887": {
      "op": "DUP1"
    },
    "888": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11465,
        11768
      ],
      "op": "REVERT",
      "path": "1"
    },
    "889": {
      "op": "JUMPDEST"
    },
    "890": {
      "op": "POP"
    },
    "891": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11465,
        11768
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x227"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "900": {
      "op": "EXP"
    },
    "901": {
      "op": "SUB"
    },
    "902": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11465,
        11768
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "904": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11465,
        11768
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "905": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11465,
        11768
      ],
      "op": "AND",
      "path": "1"
    },
    "906": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11465,
        11768
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "908": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11465,
        11768
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "909": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11465,
        11768
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9A5"
    },
    "912": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11465,
        11768
      ],
      "op": "JUMP",
      "path": "1"
    },
    "913": {
      "fn": "UFragments.totalShares",
      "offset": [
        6817,
        6906
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "914": {
      "fn": "UFragments.totalShares",
      "offset": [
        6817,
        6906
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "915": {
      "op": "DUP1"
    },
    "916": {
      "op": "ISZERO"
    },
    "917": {
      "op": "PUSH2",
      "value": "0x39D"
    },
    "920": {
      "op": "JUMPI"
    },
    "921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "923": {
      "op": "DUP1"
    },
    "924": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.totalShares",
      "offset": [
        6817,
        6906
      ],
      "op": "REVERT",
      "path": "1"
    },
    "925": {
      "op": "JUMPDEST"
    },
    "926": {
      "fn": "UFragments.totalShares",
      "offset": [
        6817,
        6906
      ],
      "op": "POP",
      "path": "1"
    },
    "927": {
      "fn": "UFragments.totalShares",
      "offset": [
        6817,
        6906
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x253"
    },
    "930": {
      "fn": "UFragments.totalShares",
      "offset": [
        6817,
        6906
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA3E"
    },
    "933": {
      "fn": "UFragments.totalShares",
      "offset": [
        6817,
        6906
      ],
      "op": "JUMP",
      "path": "1"
    },
    "934": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7812,
        7998
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "935": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7812,
        7998
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "936": {
      "op": "DUP1"
    },
    "937": {
      "op": "ISZERO"
    },
    "938": {
      "op": "PUSH2",
      "value": "0x3B2"
    },
    "941": {
      "op": "JUMPI"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "944": {
      "op": "DUP1"
    },
    "945": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7812,
        7998
      ],
      "op": "REVERT",
      "path": "1"
    },
    "946": {
      "op": "JUMPDEST"
    },
    "947": {
      "op": "POP"
    },
    "948": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7812,
        7998
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x253"
    },
    "951": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7812,
        7998
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "953": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7812,
        7998
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "954": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7812,
        7998
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA49"
    },
    "957": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7812,
        7998
      ],
      "op": "JUMP",
      "path": "1"
    },
    "958": {
      "offset": [
        3563,
        3596
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "959": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        3563,
        3596
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "960": {
      "op": "DUP1"
    },
    "961": {
      "op": "ISZERO"
    },
    "962": {
      "op": "PUSH2",
      "value": "0x3CA"
    },
    "965": {
      "op": "JUMPI"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "968": {
      "op": "DUP1"
    },
    "969": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.sharesToFragments",
      "offset": [
        3563,
        3596
      ],
      "op": "REVERT",
      "path": "1"
    },
    "970": {
      "op": "JUMPDEST"
    },
    "971": {
      "offset": [
        3563,
        3596
      ],
      "op": "POP",
      "path": "1"
    },
    "972": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        3563,
        3596
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x253"
    },
    "975": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        3563,
        3596
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA6E"
    },
    "978": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        3563,
        3596
      ],
      "op": "JUMP",
      "path": "1"
    },
    "979": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8263,
        8497
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "980": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8263,
        8497
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "981": {
      "op": "DUP1"
    },
    "982": {
      "op": "ISZERO"
    },
    "983": {
      "op": "PUSH2",
      "value": "0x3DF"
    },
    "986": {
      "op": "JUMPI"
    },
    "987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "989": {
      "op": "DUP1"
    },
    "990": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8263,
        8497
      ],
      "op": "REVERT",
      "path": "1"
    },
    "991": {
      "op": "JUMPDEST"
    },
    "992": {
      "op": "POP"
    },
    "993": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8263,
        8497
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x253"
    },
    "996": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8263,
        8497
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "998": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8263,
        8497
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "999": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8263,
        8497
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA74"
    },
    "1002": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8263,
        8497
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1003": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7021,
        7150
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1004": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7021,
        7150
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1005": {
      "op": "DUP1"
    },
    "1006": {
      "op": "ISZERO"
    },
    "1007": {
      "op": "PUSH2",
      "value": "0x3F7"
    },
    "1010": {
      "op": "JUMPI"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1013": {
      "op": "DUP1"
    },
    "1014": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.balanceOf",
      "offset": [
        7021,
        7150
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1015": {
      "op": "JUMPDEST"
    },
    "1016": {
      "op": "POP"
    },
    "1017": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7021,
        7150
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x253"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1026": {
      "op": "EXP"
    },
    "1027": {
      "op": "SUB"
    },
    "1028": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7021,
        7150
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1030": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7021,
        7150
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1031": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7021,
        7150
      ],
      "op": "AND",
      "path": "1"
    },
    "1032": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7021,
        7150
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAAF"
    },
    "1035": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7021,
        7150
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1036": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1380,
        1493
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1037": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1380,
        1493
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1038": {
      "op": "DUP1"
    },
    "1039": {
      "op": "ISZERO"
    },
    "1040": {
      "op": "PUSH2",
      "value": "0x418"
    },
    "1043": {
      "op": "JUMPI"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1046": {
      "op": "DUP1"
    },
    "1047": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1380,
        1493
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1048": {
      "op": "JUMPDEST"
    },
    "1049": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1380,
        1493
      ],
      "op": "POP",
      "path": "10"
    },
    "1050": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1380,
        1493
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x301"
    },
    "1053": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1380,
        1493
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xADD"
    },
    "1056": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1380,
        1493
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1057": {
      "fn": "UFragments.rebase",
      "offset": [
        4464,
        6022
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1058": {
      "fn": "UFragments.rebase",
      "offset": [
        4464,
        6022
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1059": {
      "op": "DUP1"
    },
    "1060": {
      "op": "ISZERO"
    },
    "1061": {
      "op": "PUSH2",
      "value": "0x42D"
    },
    "1064": {
      "op": "JUMPI"
    },
    "1065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1067": {
      "op": "DUP1"
    },
    "1068": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.rebase",
      "offset": [
        4464,
        6022
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1069": {
      "op": "JUMPDEST"
    },
    "1070": {
      "op": "POP"
    },
    "1071": {
      "fn": "UFragments.rebase",
      "offset": [
        4464,
        6022
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x253"
    },
    "1074": {
      "fn": "UFragments.rebase",
      "offset": [
        4464,
        6022
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1076": {
      "fn": "UFragments.rebase",
      "offset": [
        4464,
        6022
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1077": {
      "fn": "UFragments.rebase",
      "offset": [
        4464,
        6022
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1079": {
      "fn": "UFragments.rebase",
      "offset": [
        4464,
        6022
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1080": {
      "fn": "UFragments.rebase",
      "offset": [
        4464,
        6022
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB47"
    },
    "1083": {
      "fn": "UFragments.rebase",
      "offset": [
        4464,
        6022
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1084": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4027,
        4203
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1085": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4027,
        4203
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1086": {
      "op": "DUP1"
    },
    "1087": {
      "op": "ISZERO"
    },
    "1088": {
      "op": "PUSH2",
      "value": "0x448"
    },
    "1091": {
      "op": "JUMPI"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1094": {
      "op": "DUP1"
    },
    "1095": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4027,
        4203
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1096": {
      "op": "JUMPDEST"
    },
    "1097": {
      "op": "POP"
    },
    "1098": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4027,
        4203
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x301"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1107": {
      "op": "EXP"
    },
    "1108": {
      "op": "SUB"
    },
    "1109": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4027,
        4203
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1111": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4027,
        4203
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1112": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4027,
        4203
      ],
      "op": "AND",
      "path": "1"
    },
    "1113": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4027,
        4203
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC92"
    },
    "1116": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4027,
        4203
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1117": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1118": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1119": {
      "op": "DUP1"
    },
    "1120": {
      "op": "ISZERO"
    },
    "1121": {
      "op": "PUSH2",
      "value": "0x469"
    },
    "1124": {
      "op": "JUMPI"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1127": {
      "op": "DUP1"
    },
    "1128": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1129": {
      "op": "JUMPDEST"
    },
    "1130": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "POP",
      "path": "10"
    },
    "1131": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x472"
    },
    "1134": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD06"
    },
    "1137": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1138": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1139": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1141": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1142": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1149": {
      "op": "EXP"
    },
    "1150": {
      "op": "SUB"
    },
    "1151": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1152": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1153": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "AND",
      "path": "10"
    },
    "1154": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1155": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1156": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1157": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1158": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1159": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1160": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "SUB",
      "path": "10"
    },
    "1161": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1163": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "ADD",
      "path": "10"
    },
    "1164": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1165": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "RETURN",
      "path": "10"
    },
    "1166": {
      "offset": [
        2344,
        2373
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1167": {
      "fn": "Ownable.owner",
      "offset": [
        2344,
        2373
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1168": {
      "op": "DUP1"
    },
    "1169": {
      "op": "ISZERO"
    },
    "1170": {
      "op": "PUSH2",
      "value": "0x49A"
    },
    "1173": {
      "op": "JUMPI"
    },
    "1174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1176": {
      "op": "DUP1"
    },
    "1177": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.owner",
      "offset": [
        2344,
        2373
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1178": {
      "op": "JUMPDEST"
    },
    "1179": {
      "offset": [
        2344,
        2373
      ],
      "op": "POP",
      "path": "1"
    },
    "1180": {
      "fn": "Ownable.owner",
      "offset": [
        2344,
        2373
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x472"
    },
    "1183": {
      "fn": "Ownable.owner",
      "offset": [
        2344,
        2373
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD15"
    },
    "1186": {
      "fn": "Ownable.owner",
      "offset": [
        2344,
        2373
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1187": {
      "fn": "Ownable.isOwner",
      "offset": [
        1033,
        1116
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1188": {
      "fn": "Ownable.isOwner",
      "offset": [
        1033,
        1116
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1189": {
      "op": "DUP1"
    },
    "1190": {
      "op": "ISZERO"
    },
    "1191": {
      "op": "PUSH2",
      "value": "0x4AF"
    },
    "1194": {
      "op": "JUMPI"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1197": {
      "op": "DUP1"
    },
    "1198": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.isOwner",
      "offset": [
        1033,
        1116
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1199": {
      "op": "JUMPDEST"
    },
    "1200": {
      "fn": "Ownable.isOwner",
      "offset": [
        1033,
        1116
      ],
      "op": "POP",
      "path": "10"
    },
    "1201": {
      "fn": "Ownable.isOwner",
      "offset": [
        1033,
        1116
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x227"
    },
    "1204": {
      "fn": "Ownable.isOwner",
      "offset": [
        1033,
        1116
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD24"
    },
    "1207": {
      "fn": "Ownable.isOwner",
      "offset": [
        1033,
        1116
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1208": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        792,
        863
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1209": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        792,
        863
      ],
      "op": "CALLVALUE",
      "path": "11"
    },
    "1210": {
      "op": "DUP1"
    },
    "1211": {
      "op": "ISZERO"
    },
    "1212": {
      "op": "PUSH2",
      "value": "0x4C4"
    },
    "1215": {
      "op": "JUMPI"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1218": {
      "op": "DUP1"
    },
    "1219": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "ERC20Detailed.symbol",
      "offset": [
        792,
        863
      ],
      "op": "REVERT",
      "path": "11"
    },
    "1220": {
      "op": "JUMPDEST"
    },
    "1221": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        792,
        863
      ],
      "op": "POP",
      "path": "11"
    },
    "1222": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        792,
        863
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x18E"
    },
    "1225": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        792,
        863
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0xD35"
    },
    "1228": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        792,
        863
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1229": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12022,
        12502
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1230": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12022,
        12502
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1231": {
      "op": "DUP1"
    },
    "1232": {
      "op": "ISZERO"
    },
    "1233": {
      "op": "PUSH2",
      "value": "0x4D9"
    },
    "1236": {
      "op": "JUMPI"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1239": {
      "op": "DUP1"
    },
    "1240": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12022,
        12502
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1241": {
      "op": "JUMPDEST"
    },
    "1242": {
      "op": "POP"
    },
    "1243": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12022,
        12502
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x227"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1252": {
      "op": "EXP"
    },
    "1253": {
      "op": "SUB"
    },
    "1254": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12022,
        12502
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1256": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12022,
        12502
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1257": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12022,
        12502
      ],
      "op": "AND",
      "path": "1"
    },
    "1258": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12022,
        12502
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1260": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12022,
        12502
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1261": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12022,
        12502
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD96"
    },
    "1264": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12022,
        12502
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1265": {
      "fn": "UFragments.transfer",
      "offset": [
        8715,
        9081
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1266": {
      "fn": "UFragments.transfer",
      "offset": [
        8715,
        9081
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1267": {
      "op": "DUP1"
    },
    "1268": {
      "op": "ISZERO"
    },
    "1269": {
      "op": "PUSH2",
      "value": "0x4FD"
    },
    "1272": {
      "op": "JUMPI"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1275": {
      "op": "DUP1"
    },
    "1276": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.transfer",
      "offset": [
        8715,
        9081
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1277": {
      "op": "JUMPDEST"
    },
    "1278": {
      "op": "POP"
    },
    "1279": {
      "fn": "UFragments.transfer",
      "offset": [
        8715,
        9081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x227"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1288": {
      "op": "EXP"
    },
    "1289": {
      "op": "SUB"
    },
    "1290": {
      "fn": "UFragments.transfer",
      "offset": [
        8715,
        9081
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1292": {
      "fn": "UFragments.transfer",
      "offset": [
        8715,
        9081
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1293": {
      "fn": "UFragments.transfer",
      "offset": [
        8715,
        9081
      ],
      "op": "AND",
      "path": "1"
    },
    "1294": {
      "fn": "UFragments.transfer",
      "offset": [
        8715,
        9081
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1296": {
      "fn": "UFragments.transfer",
      "offset": [
        8715,
        9081
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1297": {
      "fn": "UFragments.transfer",
      "offset": [
        8715,
        9081
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE87"
    },
    "1300": {
      "fn": "UFragments.transfer",
      "offset": [
        8715,
        9081
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1301": {
      "offset": [
        2379,
        2409
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1302": {
      "fn": "UFragments.transfer",
      "offset": [
        2379,
        2409
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1303": {
      "op": "DUP1"
    },
    "1304": {
      "op": "ISZERO"
    },
    "1305": {
      "op": "PUSH2",
      "value": "0x521"
    },
    "1308": {
      "op": "JUMPI"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1311": {
      "op": "DUP1"
    },
    "1312": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.transfer",
      "offset": [
        2379,
        2409
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1313": {
      "op": "JUMPDEST"
    },
    "1314": {
      "offset": [
        2379,
        2409
      ],
      "op": "POP",
      "path": "1"
    },
    "1315": {
      "fn": "UFragments.transfer",
      "offset": [
        2379,
        2409
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x253"
    },
    "1318": {
      "fn": "UFragments.transfer",
      "offset": [
        2379,
        2409
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF7F"
    },
    "1321": {
      "fn": "UFragments.transfer",
      "offset": [
        2379,
        2409
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1322": {
      "offset": [
        3602,
        3642
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1323": {
      "fn": "UFragments.transfer",
      "offset": [
        3602,
        3642
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1324": {
      "op": "DUP1"
    },
    "1325": {
      "op": "ISZERO"
    },
    "1326": {
      "op": "PUSH2",
      "value": "0x536"
    },
    "1329": {
      "op": "JUMPI"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1332": {
      "op": "DUP1"
    },
    "1333": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.transfer",
      "offset": [
        3602,
        3642
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1334": {
      "op": "JUMPDEST"
    },
    "1335": {
      "offset": [
        3602,
        3642
      ],
      "op": "POP",
      "path": "1"
    },
    "1336": {
      "fn": "UFragments.transfer",
      "offset": [
        3602,
        3642
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x253"
    },
    "1339": {
      "fn": "UFragments.transfer",
      "offset": [
        3602,
        3642
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF85"
    },
    "1342": {
      "fn": "UFragments.transfer",
      "offset": [
        3602,
        3642
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1343": {
      "fn": "UFragments.initialize",
      "offset": [
        6028,
        6584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1344": {
      "fn": "UFragments.initialize",
      "offset": [
        6028,
        6584
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1345": {
      "op": "DUP1"
    },
    "1346": {
      "op": "ISZERO"
    },
    "1347": {
      "op": "PUSH2",
      "value": "0x54B"
    },
    "1350": {
      "op": "JUMPI"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1353": {
      "op": "DUP1"
    },
    "1354": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.initialize",
      "offset": [
        6028,
        6584
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1355": {
      "op": "JUMPDEST"
    },
    "1356": {
      "op": "POP"
    },
    "1357": {
      "fn": "UFragments.initialize",
      "offset": [
        6028,
        6584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x301"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1366": {
      "op": "EXP"
    },
    "1367": {
      "op": "SUB"
    },
    "1368": {
      "fn": "UFragments.initialize",
      "offset": [
        6028,
        6584
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1370": {
      "fn": "UFragments.initialize",
      "offset": [
        6028,
        6584
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1371": {
      "fn": "UFragments.initialize",
      "offset": [
        6028,
        6584
      ],
      "op": "AND",
      "path": "1"
    },
    "1372": {
      "fn": "UFragments.initialize",
      "offset": [
        6028,
        6584
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF8B"
    },
    "1375": {
      "fn": "UFragments.initialize",
      "offset": [
        6028,
        6584
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1376": {
      "fn": "UFragments.allowance",
      "offset": [
        9380,
        9520
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1377": {
      "fn": "UFragments.allowance",
      "offset": [
        9380,
        9520
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1378": {
      "op": "DUP1"
    },
    "1379": {
      "op": "ISZERO"
    },
    "1380": {
      "op": "PUSH2",
      "value": "0x56C"
    },
    "1383": {
      "op": "JUMPI"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1386": {
      "op": "DUP1"
    },
    "1387": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.allowance",
      "offset": [
        9380,
        9520
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1388": {
      "op": "JUMPDEST"
    },
    "1389": {
      "op": "POP"
    },
    "1390": {
      "fn": "UFragments.allowance",
      "offset": [
        9380,
        9520
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x253"
    },
    "1393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1399": {
      "op": "EXP"
    },
    "1400": {
      "op": "SUB"
    },
    "1401": {
      "fn": "UFragments.allowance",
      "offset": [
        9380,
        9520
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1403": {
      "fn": "UFragments.allowance",
      "offset": [
        9380,
        9520
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1404": {
      "fn": "UFragments.allowance",
      "offset": [
        9380,
        9520
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1405": {
      "fn": "UFragments.allowance",
      "offset": [
        9380,
        9520
      ],
      "op": "AND",
      "path": "1"
    },
    "1406": {
      "fn": "UFragments.allowance",
      "offset": [
        9380,
        9520
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1407": {
      "fn": "UFragments.allowance",
      "offset": [
        9380,
        9520
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1409": {
      "fn": "UFragments.allowance",
      "offset": [
        9380,
        9520
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1410": {
      "fn": "UFragments.allowance",
      "offset": [
        9380,
        9520
      ],
      "op": "AND",
      "path": "1"
    },
    "1411": {
      "fn": "UFragments.allowance",
      "offset": [
        9380,
        9520
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11AD"
    },
    "1414": {
      "fn": "UFragments.allowance",
      "offset": [
        9380,
        9520
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1415": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1654,
        1755
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1416": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1654,
        1755
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "1417": {
      "op": "DUP1"
    },
    "1418": {
      "op": "ISZERO"
    },
    "1419": {
      "op": "PUSH2",
      "value": "0x593"
    },
    "1422": {
      "op": "JUMPI"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1425": {
      "op": "DUP1"
    },
    "1426": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.transferOwnership",
      "offset": [
        1654,
        1755
      ],
      "op": "REVERT",
      "path": "10"
    },
    "1427": {
      "op": "JUMPDEST"
    },
    "1428": {
      "op": "POP"
    },
    "1429": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1654,
        1755
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x301"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1438": {
      "op": "EXP"
    },
    "1439": {
      "op": "SUB"
    },
    "1440": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1654,
        1755
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1442": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1654,
        1755
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "1443": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1654,
        1755
      ],
      "op": "AND",
      "path": "10"
    },
    "1444": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1654,
        1755
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11D8"
    },
    "1447": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1654,
        1755
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1448": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7275,
        7379
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1449": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7275,
        7379
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1450": {
      "op": "DUP1"
    },
    "1451": {
      "op": "ISZERO"
    },
    "1452": {
      "op": "PUSH2",
      "value": "0x5B4"
    },
    "1455": {
      "op": "JUMPI"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1458": {
      "op": "DUP1"
    },
    "1459": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.sharesOf",
      "offset": [
        7275,
        7379
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1460": {
      "op": "JUMPDEST"
    },
    "1461": {
      "op": "POP"
    },
    "1462": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7275,
        7379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x253"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1471": {
      "op": "EXP"
    },
    "1472": {
      "op": "SUB"
    },
    "1473": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7275,
        7379
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1475": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7275,
        7379
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1476": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7275,
        7379
      ],
      "op": "AND",
      "path": "1"
    },
    "1477": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7275,
        7379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11F7"
    },
    "1480": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7275,
        7379
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1481": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8076,
        8257
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1482": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8076,
        8257
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1483": {
      "op": "DUP1"
    },
    "1484": {
      "op": "ISZERO"
    },
    "1485": {
      "op": "PUSH2",
      "value": "0x5D5"
    },
    "1488": {
      "op": "JUMPI"
    },
    "1489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1491": {
      "op": "DUP1"
    },
    "1492": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8076,
        8257
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1493": {
      "op": "JUMPDEST"
    },
    "1494": {
      "op": "POP"
    },
    "1495": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8076,
        8257
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x253"
    },
    "1498": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8076,
        8257
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1500": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8076,
        8257
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "1501": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8076,
        8257
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1212"
    },
    "1504": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8076,
        8257
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1505": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1506": {
      "fn": "ERC20Detailed.name",
      "offset": [
        728,
        733
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 0,
      "value": "0x33"
    },
    "1508": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1509": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1510": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "1512": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1513": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "1514": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1516": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1518": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1522": {
      "op": "NOT"
    },
    "1523": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "1526": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1528": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP9",
      "path": "11"
    },
    "1529": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "AND",
      "path": "11"
    },
    "1530": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1531": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "MUL",
      "path": "11"
    },
    "1532": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "ADD",
      "path": "11"
    },
    "1533": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1534": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "1535": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "AND",
      "path": "11"
    },
    "1536": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "1537": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1538": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "1539": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DIV",
      "path": "11"
    },
    "1540": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1541": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP5",
      "path": "11"
    },
    "1542": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "ADD",
      "path": "11"
    },
    "1543": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1544": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1545": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DIV",
      "path": "11"
    },
    "1546": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1547": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "MUL",
      "path": "11"
    },
    "1548": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1549": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "ADD",
      "path": "11"
    },
    "1550": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1551": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "ADD",
      "path": "11"
    },
    "1552": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1553": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1554": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1555": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1556": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1557": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1558": {
      "fn": "ERC20Detailed.name",
      "offset": [
        707,
        713
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "1560": {
      "fn": "ERC20Detailed.name",
      "offset": [
        707,
        713
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "1561": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1562": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "1563": {
      "fn": "ERC20Detailed.name",
      "offset": [
        728,
        733
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1564": {
      "fn": "ERC20Detailed.name",
      "offset": [
        728,
        733
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1565": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1566": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "ADD",
      "path": "11"
    },
    "1567": {
      "fn": "ERC20Detailed.name",
      "offset": [
        728,
        733
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1568": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1569": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1570": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "1571": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x66D"
    },
    "1574": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1575": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1576": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1578": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "LT",
      "path": "11"
    },
    "1579": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x642"
    },
    "1582": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1583": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "1586": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1587": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1588": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1589": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DIV",
      "path": "11"
    },
    "1590": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "MUL",
      "path": "11"
    },
    "1591": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1592": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1593": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1594": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1596": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "ADD",
      "path": "11"
    },
    "1597": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1598": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x66D"
    },
    "1601": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1602": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1603": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1604": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "ADD",
      "path": "11"
    },
    "1605": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1606": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1607": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1609": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1610": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1612": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "1614": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "KECCAK256",
      "path": "11"
    },
    "1615": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1616": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1617": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1618": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "1619": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1620": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "1621": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1622": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "1624": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "ADD",
      "path": "11"
    },
    "1625": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1626": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "1628": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "ADD",
      "path": "11"
    },
    "1629": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP1",
      "path": "11"
    },
    "1630": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP4",
      "path": "11"
    },
    "1631": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "GT",
      "path": "11"
    },
    "1632": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x650"
    },
    "1635": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "1636": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1637": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1638": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SUB",
      "path": "11"
    },
    "1639": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "1641": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "AND",
      "path": "11"
    },
    "1642": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1643": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "ADD",
      "path": "11"
    },
    "1644": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "1645": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1646": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "POP",
      "path": "11"
    },
    "1647": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "POP",
      "path": "11"
    },
    "1648": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "POP",
      "path": "11"
    },
    "1649": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "POP",
      "path": "11"
    },
    "1650": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "POP",
      "path": "11"
    },
    "1651": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1652": {
      "fn": "ERC20Detailed.name",
      "offset": [
        721,
        733
      ],
      "op": "POP",
      "path": "11"
    },
    "1653": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1654": {
      "fn": "ERC20Detailed.name",
      "offset": [
        671,
        738
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1655": {
      "fn": "ERC20Detailed.name",
      "jump": "o",
      "offset": [
        671,
        738
      ],
      "op": "JUMP",
      "path": "11"
    },
    "1656": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1657": {
      "fn": "UFragments.approve",
      "offset": [
        10994,
        11004
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 1
    },
    "1658": {
      "fn": "UFragments.approve",
      "offset": [
        10960,
        10964
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1660": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11005
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1661": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11005
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1662": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11005
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1663": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        10993
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "1665": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11005
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1667": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11005
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1668": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11005
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1669": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11005
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1670": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11005
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1672": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11005
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1673": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11005
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1674": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11005
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1681": {
      "op": "EXP"
    },
    "1682": {
      "op": "SUB"
    },
    "1683": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11014
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1684": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11014
      ],
      "op": "AND",
      "path": "1"
    },
    "1685": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11014
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1686": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11014
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1687": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11014
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1688": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11014
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1689": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11014
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1690": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11014
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1691": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11014
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1692": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11014
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1693": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11014
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1694": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11022
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1695": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11022
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1696": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11022
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1697": {
      "fn": "UFragments.approve",
      "offset": [
        11037,
        11073
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 2
    },
    "1698": {
      "fn": "UFragments.approve",
      "offset": [
        11037,
        11073
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1699": {
      "fn": "UFragments.approve",
      "offset": [
        11037,
        11073
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1700": {
      "fn": "UFragments.approve",
      "offset": [
        11037,
        11073
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1701": {
      "fn": "UFragments.approve",
      "offset": [
        11037,
        11073
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1702": {
      "fn": "UFragments.approve",
      "offset": [
        11037,
        11073
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1703": {
      "fn": "UFragments.approve",
      "offset": [
        11037,
        11073
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1704": {
      "fn": "UFragments.approve",
      "offset": [
        10960,
        10964
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1705": {
      "fn": "UFragments.approve",
      "offset": [
        10960,
        10964
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1706": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11014
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1707": {
      "fn": "UFragments.approve",
      "offset": [
        10976,
        11014
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1708": {
      "fn": "UFragments.approve",
      "offset": [
        10994,
        11004
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1709": {
      "fn": "UFragments.approve",
      "offset": [
        10994,
        11004
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1710": {
      "fn": "UFragments.approve",
      "offset": [
        11037,
        11073
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1743": {
      "fn": "UFragments.approve",
      "offset": [
        11037,
        11073
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1744": {
      "fn": "UFragments.approve",
      "offset": [
        11037,
        11073
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1745": {
      "fn": "UFragments.approve",
      "offset": [
        11037,
        11073
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1746": {
      "fn": "UFragments.approve",
      "offset": [
        11037,
        11073
      ],
      "op": "SUB",
      "path": "1"
    },
    "1747": {
      "fn": "UFragments.approve",
      "offset": [
        11037,
        11073
      ],
      "op": "ADD",
      "path": "1"
    },
    "1748": {
      "fn": "UFragments.approve",
      "offset": [
        11037,
        11073
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1749": {
      "fn": "UFragments.approve",
      "offset": [
        11037,
        11073
      ],
      "op": "LOG3",
      "path": "1"
    },
    "1750": {
      "op": "POP"
    },
    "1751": {
      "fn": "UFragments.approve",
      "offset": [
        11090,
        11094
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x1"
    },
    "1753": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1754": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1755": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1756": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "POP",
      "path": "1"
    },
    "1757": {
      "fn": "UFragments.approve",
      "offset": [
        10895,
        11101
      ],
      "op": "POP",
      "path": "1"
    },
    "1758": {
      "fn": "UFragments.approve",
      "jump": "o",
      "offset": [
        10895,
        11101
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1759": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1760": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7595,
        7602
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1762": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7621,
        7654
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 4,
      "value": "0x6F6"
    },
    "1765": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7635,
        7653
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9F"
    },
    "1767": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7635,
        7653
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1768": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7621,
        7630
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1769": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7621,
        7634
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1231"
    },
    "1772": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7621,
        7634
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1773": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7621,
        7654
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1774": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7621,
        7654
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1775": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7621,
        7654
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1780": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7621,
        7654
      ],
      "op": "AND",
      "path": "1"
    },
    "1781": {
      "fn": "UFragments.fragmentsToShares",
      "jump": "i",
      "offset": [
        7621,
        7654
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1782": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7621,
        7654
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1783": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7614,
        7654
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1784": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7614,
        7654
      ],
      "op": "POP",
      "path": "1"
    },
    "1785": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1786": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1787": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1788": {
      "fn": "UFragments.fragmentsToShares",
      "offset": [
        7528,
        7661
      ],
      "op": "POP",
      "path": "1"
    },
    "1789": {
      "fn": "UFragments.fragmentsToShares",
      "jump": "o",
      "offset": [
        7528,
        7661
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1790": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        465,
        619
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "1791": {
      "offset": [
        1129,
        1149
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1793": {
      "offset": [
        1024,
        1036
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1794": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1795": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "1798": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1799": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "DIV",
      "path": "15"
    },
    "1800": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1802": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "AND",
      "path": "15"
    },
    "1803": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1804": {
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x718"
    },
    "1807": {
      "offset": [
        1024,
        1055
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1808": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1024,
        1055
      ],
      "op": "POP",
      "path": "15"
    },
    "1809": {
      "offset": [
        1040,
        1055
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x718"
    },
    "1812": {
      "offset": [
        1040,
        1053
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1266"
    },
    "1815": {
      "jump": "i",
      "offset": [
        1040,
        1055
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1816": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1040,
        1055
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1817": {
      "offset": [
        1024,
        1071
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1818": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1024,
        1071
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x726"
    },
    "1821": {
      "offset": [
        1024,
        1071
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1822": {
      "op": "POP"
    },
    "1823": {
      "offset": [
        1060,
        1071
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1825": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1060,
        1071
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1826": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1060,
        1071
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "1828": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1060,
        1071
      ],
      "op": "AND",
      "path": "15"
    },
    "1829": {
      "offset": [
        1059,
        1071
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1830": {
      "offset": [
        1024,
        1071
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1831": {
      "offset": [
        1016,
        1122
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1832": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1833": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x7B9"
    },
    "1836": {
      "offset": [
        1016,
        1122
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1837": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1839": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1840": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1841": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "1874": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1875": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1876": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1878": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1880": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1881": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "ADD",
      "path": "15"
    },
    "1882": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1883": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2E"
    },
    "1885": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "1887": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1888": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "ADD",
      "path": "15"
    },
    "1889": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1890": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x436F6E747261637420696E7374616E63652068617320616C7265616479206265"
    },
    "1923": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "1925": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1926": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "ADD",
      "path": "15"
    },
    "1927": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1928": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x656E20696E697469616C697A6564000000000000000000000000000000000000"
    },
    "1961": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "1963": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1964": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "ADD",
      "path": "15"
    },
    "1965": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1966": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1967": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1968": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1969": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1970": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1971": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "SUB",
      "path": "15"
    },
    "1972": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x84"
    },
    "1974": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "ADD",
      "path": "15"
    },
    "1975": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1976": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1977": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1978": {
      "op": "POP"
    },
    "1979": {
      "offset": [
        1152,
        1164
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1981": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1982": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1983": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1985": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "1988": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "1991": {
      "op": "NOT"
    },
    "1992": {
      "offset": [
        1170,
        1189
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1993": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1170,
        1189
      ],
      "op": "AND",
      "path": "15"
    },
    "1994": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1170,
        1189
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1995": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1170,
        1189
      ],
      "op": "OR",
      "path": "15"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1998": {
      "op": "NOT"
    },
    "1999": {
      "offset": [
        1195,
        1213
      ],
      "op": "AND",
      "path": "15"
    },
    "2000": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1195,
        1213
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2001": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1195,
        1213
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2002": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1195,
        1213
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2003": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1195,
        1213
      ],
      "op": "OR",
      "path": "15"
    },
    "2004": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1195,
        1213
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2005": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1195,
        1213
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2006": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1195,
        1213
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2007": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        554,
        566
      ],
      "op": "DUP5",
      "path": "11",
      "statement": 5
    },
    "2008": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        554,
        566
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2009": {
      "offset": [
        1152,
        1164
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2010": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2011": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "DIV",
      "path": "15"
    },
    "2012": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "2014": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "AND",
      "path": "15"
    },
    "2015": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2016": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        554,
        566
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x7F0"
    },
    "2019": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        554,
        566
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2020": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        554,
        559
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x33"
    },
    "2022": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        554,
        559
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2023": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        554,
        566
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2025": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        554,
        566
      ],
      "op": "DUP8",
      "path": "11"
    },
    "2026": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        554,
        566
      ],
      "op": "ADD",
      "path": "11"
    },
    "2027": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        554,
        566
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2028": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        554,
        566
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1495"
    },
    "2031": {
      "fn": "ERC20Detailed.initialize",
      "jump": "i",
      "offset": [
        554,
        566
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2032": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        554,
        566
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2033": {
      "op": "POP"
    },
    "2034": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        572,
        588
      ],
      "op": "DUP3",
      "path": "11",
      "statement": 6
    },
    "2035": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        572,
        588
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "2036": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        572,
        588
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x804"
    },
    "2039": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        572,
        588
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2040": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        572,
        579
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x34"
    },
    "2042": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        572,
        579
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2043": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        572,
        588
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "2045": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        572,
        588
      ],
      "op": "DUP7",
      "path": "11"
    },
    "2046": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        572,
        588
      ],
      "op": "ADD",
      "path": "11"
    },
    "2047": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        572,
        588
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2048": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        572,
        588
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x1495"
    },
    "2051": {
      "fn": "ERC20Detailed.initialize",
      "jump": "i",
      "offset": [
        572,
        588
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2052": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        572,
        588
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2053": {
      "op": "POP"
    },
    "2054": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        603
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 7,
      "value": "0x35"
    },
    "2056": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        614
      ],
      "op": "DUP1",
      "path": "11"
    },
    "2057": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        614
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2058": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        614
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "2060": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        614
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2061": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        614
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2062": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        614
      ],
      "op": "AND",
      "path": "11"
    },
    "2063": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2065": {
      "op": "NOT"
    },
    "2066": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        614
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2067": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        614
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "2068": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        614
      ],
      "op": "AND",
      "path": "11"
    },
    "2069": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        614
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2070": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        614
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2071": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        614
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "2072": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        614
      ],
      "op": "OR",
      "path": "11"
    },
    "2073": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        614
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2074": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        614
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "2075": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        614
      ],
      "op": "SSTORE",
      "path": "11"
    },
    "2076": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        603
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x0"
    },
    "2078": {
      "offset": [
        1228,
        1258
      ],
      "op": "DUP1",
      "path": "15"
    },
    "2079": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "2080": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2081": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2082": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "2083": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        594,
        614
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "2086": {
      "offset": [
        1228,
        1258
      ],
      "op": "MUL",
      "path": "15"
    },
    "2087": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "2090": {
      "op": "NOT"
    },
    "2091": {
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2092": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "2093": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "AND",
      "path": "15"
    },
    "2094": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2095": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2096": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "2097": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "OR",
      "path": "15"
    },
    "2098": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "2099": {
      "fn": "ERC20Detailed.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "2100": {
      "op": "POP"
    },
    "2101": {
      "op": "POP"
    },
    "2102": {
      "fn": "ERC20Detailed.initialize",
      "jump": "o",
      "offset": [
        465,
        619
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2103": {
      "fn": "UFragments.totalSupply",
      "offset": [
        6652,
        6741
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2104": {
      "fn": "UFragments.totalSupply",
      "offset": [
        6722,
        6734
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 8,
      "value": "0x9E"
    },
    "2106": {
      "fn": "UFragments.totalSupply",
      "offset": [
        6722,
        6734
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2107": {
      "fn": "UFragments.totalSupply",
      "offset": [
        6652,
        6741
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2108": {
      "fn": "UFragments.totalSupply",
      "jump": "o",
      "offset": [
        6652,
        6741
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2109": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9774,
        10266
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2110": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9902,
        9906
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2112": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9902,
        9906
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2113": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9889,
        9891
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2120": {
      "op": "EXP"
    },
    "2121": {
      "op": "SUB"
    },
    "2122": {
      "offset": [
        2653,
        2671
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2123": {
      "fn": "UFragments.transferFrom",
      "offset": [
        2653,
        2671
      ],
      "op": "AND",
      "path": "1"
    },
    "2124": {
      "fn": "UFragments.transferFrom",
      "offset": [
        2653,
        2671
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2125": {
      "fn": "UFragments.transferFrom",
      "offset": [
        2653,
        2671
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2126": {
      "offset": [
        2645,
        2672
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x856"
    },
    "2129": {
      "offset": [
        2645,
        2672
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2130": {
      "fn": "UFragments.transferFrom",
      "offset": [
        2645,
        2672
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2132": {
      "fn": "UFragments.transferFrom",
      "offset": [
        2645,
        2672
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2133": {
      "fn": "UFragments.transferFrom",
      "offset": [
        2645,
        2672
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2134": {
      "fn": "UFragments.transferFrom",
      "offset": [
        2645,
        2672
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2141": {
      "op": "EXP"
    },
    "2142": {
      "op": "SUB"
    },
    "2143": {
      "offset": [
        2690,
        2709
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2144": {
      "fn": "UFragments.transferFrom",
      "offset": [
        2690,
        2709
      ],
      "op": "AND",
      "path": "1"
    },
    "2145": {
      "offset": [
        2704,
        2708
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "2146": {
      "offset": [
        2690,
        2709
      ],
      "op": "EQ",
      "path": "1"
    },
    "2147": {
      "fn": "UFragments.transferFrom",
      "offset": [
        2690,
        2709
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2148": {
      "offset": [
        2682,
        2710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x86C"
    },
    "2151": {
      "offset": [
        2682,
        2710
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2152": {
      "fn": "UFragments.transferFrom",
      "offset": [
        2682,
        2710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2154": {
      "fn": "UFragments.transferFrom",
      "offset": [
        2682,
        2710
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2155": {
      "fn": "UFragments.transferFrom",
      "offset": [
        2682,
        2710
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2156": {
      "fn": "UFragments.transferFrom",
      "offset": [
        2682,
        2710
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2163": {
      "op": "EXP"
    },
    "2164": {
      "op": "SUB"
    },
    "2165": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9979
      ],
      "op": "DUP7",
      "path": "1",
      "statement": 9
    },
    "2166": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9979
      ],
      "op": "AND",
      "path": "1"
    },
    "2167": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9979
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2169": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9979
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2170": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9979
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2171": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9979
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2172": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9973
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "2174": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9979
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2176": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9979
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2177": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9979
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2178": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9979
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2179": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9979
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2181": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9979
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2182": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9979
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2183": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9979
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2184": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9980,
        9990
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2185": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9991
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2186": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9991
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2187": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9991
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2188": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9991
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2189": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9991
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2190": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9991
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2191": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9991
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2192": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9991
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2193": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        10002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A0"
    },
    "2196": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        10002
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2197": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9996,
        10001
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2198": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        10002
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2203": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        9995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1270"
    },
    "2206": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        10002
      ],
      "op": "AND",
      "path": "1"
    },
    "2207": {
      "fn": "UFragments.transferFrom",
      "jump": "i",
      "offset": [
        9956,
        10002
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2208": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9956,
        10002
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2211": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2215": {
      "op": "EXP"
    },
    "2216": {
      "op": "SUB"
    },
    "2217": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9941
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2218": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9941
      ],
      "op": "AND",
      "path": "1"
    },
    "2219": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9941
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2221": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9941
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2222": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9941
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2223": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9941
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2224": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "2226": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9941
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2228": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9941
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2229": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9941
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2230": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9941
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2231": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9941
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2233": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9941
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2234": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9941
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2235": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9941
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2236": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9942,
        9952
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2237": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9953
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2238": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9953
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2239": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9953
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2240": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9953
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2241": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9953
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2242": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9953
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2243": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        9953
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2244": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9918,
        10002
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2245": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10044,
        10062
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9F"
    },
    "2247": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10044,
        10062
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2248": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10034,
        10063
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8D8"
    },
    "2251": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10034,
        10063
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2252": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10034,
        10039
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2253": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10034,
        10039
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2254": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10034,
        10063
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2259": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10034,
        10043
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1231"
    },
    "2262": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10034,
        10063
      ],
      "op": "AND",
      "path": "1"
    },
    "2263": {
      "fn": "UFragments.transferFrom",
      "jump": "i",
      "offset": [
        10034,
        10063
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2264": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10034,
        10063
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2271": {
      "op": "EXP"
    },
    "2272": {
      "op": "SUB"
    },
    "2273": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10116
      ],
      "op": "DUP8",
      "path": "1",
      "statement": 10
    },
    "2274": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10116
      ],
      "op": "AND",
      "path": "1"
    },
    "2275": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2277": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10116
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2278": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10116
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2279": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10116
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2280": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA1"
    },
    "2282": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2284": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10116
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2285": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10116
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2287": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10116
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2288": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10116
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2289": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10116
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2290": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10013,
        10063
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2291": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10013,
        10063
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2292": {
      "op": "POP"
    },
    "2293": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10132
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x904"
    },
    "2296": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10132
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2297": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10013,
        10063
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2298": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10132
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2303": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10120
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1270"
    },
    "2306": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10132
      ],
      "op": "AND",
      "path": "1"
    },
    "2307": {
      "fn": "UFragments.transferFrom",
      "jump": "i",
      "offset": [
        10096,
        10132
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2308": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10096,
        10132
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2315": {
      "op": "EXP"
    },
    "2316": {
      "op": "SUB"
    },
    "2317": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10073,
        10093
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2318": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10073,
        10093
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2319": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10073,
        10093
      ],
      "op": "AND",
      "path": "1"
    },
    "2320": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10073,
        10093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2322": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10073,
        10093
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2323": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10073,
        10093
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2324": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10073,
        10093
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2325": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10073,
        10087
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA1"
    },
    "2327": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10073,
        10093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2329": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10073,
        10093
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2330": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10073,
        10093
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2332": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10073,
        10093
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2333": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10073,
        10093
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2334": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10073,
        10093
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2335": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10073,
        10132
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2336": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10073,
        10132
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2337": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10073,
        10132
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2338": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10073,
        10132
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2339": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10163,
        10181
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 11
    },
    "2340": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10163,
        10181
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2341": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10163,
        10181
      ],
      "op": "AND",
      "path": "1"
    },
    "2342": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10163,
        10181
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2343": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10163,
        10181
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2344": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10163,
        10181
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2345": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10163,
        10181
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2346": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10163,
        10197
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x939"
    },
    "2349": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10163,
        10197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2350": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10186,
        10196
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2351": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10163,
        10197
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2356": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10163,
        10185
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1287"
    },
    "2359": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10163,
        10197
      ],
      "op": "AND",
      "path": "1"
    },
    "2360": {
      "fn": "UFragments.transferFrom",
      "jump": "i",
      "offset": [
        10163,
        10197
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2361": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10163,
        10197
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2368": {
      "op": "EXP"
    },
    "2369": {
      "op": "SUB"
    },
    "2370": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10160
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2371": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10160
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2372": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10160
      ],
      "op": "AND",
      "path": "1"
    },
    "2373": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10160
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2375": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10160
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2376": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10160
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2377": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10160
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2378": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10156
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA1"
    },
    "2380": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10160
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2382": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10160
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2383": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10160
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2384": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10160
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2385": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10160
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2387": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10160
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2388": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10160
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2389": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10160
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2390": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10160
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2391": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10197
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2392": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10197
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2393": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10197
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2394": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10197
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2395": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 12
    },
    "2396": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2397": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2398": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2399": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2400": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2401": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2402": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10160
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2403": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10142,
        10160
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2404": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2405": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "DUP11",
      "path": "1"
    },
    "2406": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "AND",
      "path": "1"
    },
    "2407": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2408": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2441": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2442": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2443": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2444": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2445": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "SUB",
      "path": "1"
    },
    "2446": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "ADD",
      "path": "1"
    },
    "2447": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2448": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10212,
        10237
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2449": {
      "op": "POP"
    },
    "2450": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10255,
        10259
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 13,
      "value": "0x1"
    },
    "2452": {
      "fn": "UFragments.transferFrom",
      "offset": [
        10255,
        10259
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "2453": {
      "fn": "UFragments.transferFrom",
      "offset": [
        9774,
        10266
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2454": {
      "op": "POP"
    },
    "2455": {
      "op": "POP"
    },
    "2456": {
      "op": "POP"
    },
    "2457": {
      "op": "POP"
    },
    "2458": {
      "op": "POP"
    },
    "2459": {
      "fn": "UFragments.transferFrom",
      "jump": "o",
      "offset": [
        9774,
        10266
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2460": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "2461": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        989,
        998
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 14,
      "value": "0x35"
    },
    "2463": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        989,
        998
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "2464": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        989,
        998
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0xFF"
    },
    "2466": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        989,
        998
      ],
      "op": "AND",
      "path": "11"
    },
    "2467": {
      "fn": "ERC20Detailed.decimals",
      "offset": [
        929,
        1003
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2468": {
      "fn": "ERC20Detailed.decimals",
      "jump": "o",
      "offset": [
        929,
        1003
      ],
      "op": "JUMP",
      "path": "11"
    },
    "2469": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11465,
        11768
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2470": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11620,
        11630
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 15
    },
    "2471": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11545,
        11549
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2473": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11631
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2474": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11631
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2475": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11631
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2476": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11619
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "2478": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11631
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2480": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11631
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2481": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11631
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2482": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11631
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2483": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11631
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2485": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11631
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2486": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11631
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2487": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11631
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2490": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2494": {
      "op": "EXP"
    },
    "2495": {
      "op": "SUB"
    },
    "2496": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11640
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2497": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11640
      ],
      "op": "AND",
      "path": "1"
    },
    "2498": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11640
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2499": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11640
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2500": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11640
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2501": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11640
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2502": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11640
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2503": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11640
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2504": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11640
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2505": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11640
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2506": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11656
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9D9"
    },
    "2509": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11656
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2510": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11645,
        11655
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2511": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11656
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2516": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11644
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1287"
    },
    "2519": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11656
      ],
      "op": "AND",
      "path": "1"
    },
    "2520": {
      "fn": "UFragments.increaseAllowance",
      "jump": "i",
      "offset": [
        11602,
        11656
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2521": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11602,
        11656
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2522": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11579,
        11589
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2523": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11590
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2525": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11590
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2526": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11590
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2527": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11590
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2528": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11578
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "2530": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11590
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2532": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11590
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2533": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11590
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2534": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11590
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2535": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11590
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2537": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11590
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2538": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11590
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2539": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11590
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2546": {
      "op": "EXP"
    },
    "2547": {
      "op": "SUB"
    },
    "2548": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11599
      ],
      "op": "DUP10",
      "path": "1"
    },
    "2549": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11599
      ],
      "op": "AND",
      "path": "1"
    },
    "2550": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11599
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2551": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11599
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2552": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11599
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2553": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11599
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2554": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11599
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2555": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11599
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2556": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11599
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2557": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11599
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2558": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11599
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2559": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11599
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2560": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11656
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2561": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11656
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2562": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11656
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2563": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11671,
        11740
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 16
    },
    "2564": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11671,
        11740
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2565": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11671,
        11740
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2566": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11671,
        11740
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2567": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11671,
        11740
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2568": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11671,
        11740
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2569": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11599
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2570": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11561,
        11599
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2571": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11671,
        11740
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2604": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11671,
        11740
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2605": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11671,
        11740
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2606": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11671,
        11740
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2607": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11671,
        11740
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2608": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11671,
        11740
      ],
      "op": "SUB",
      "path": "1"
    },
    "2609": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11671,
        11740
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2610": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11671,
        11740
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2611": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11671,
        11740
      ],
      "op": "ADD",
      "path": "1"
    },
    "2612": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11671,
        11740
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2613": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11671,
        11740
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2614": {
      "op": "POP"
    },
    "2615": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11757,
        11761
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x1"
    },
    "2617": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11465,
        11768
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2618": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11465,
        11768
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2619": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11465,
        11768
      ],
      "op": "POP",
      "path": "1"
    },
    "2620": {
      "fn": "UFragments.increaseAllowance",
      "offset": [
        11465,
        11768
      ],
      "op": "POP",
      "path": "1"
    },
    "2621": {
      "fn": "UFragments.increaseAllowance",
      "jump": "o",
      "offset": [
        11465,
        11768
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2622": {
      "fn": "UFragments.totalShares",
      "offset": [
        6817,
        6906
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2623": {
      "op": "PUSH6",
      "value": "0x38F18B3BFFF"
    },
    "2630": {
      "op": "NOT"
    },
    "2631": {
      "offset": [
        3343,
        3393
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2632": {
      "fn": "UFragments.totalShares",
      "jump": "o",
      "offset": [
        6817,
        6906
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2633": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7812,
        7998
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2634": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7876,
        7883
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2636": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7899,
        7910
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2637": {
      "branch": 73,
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7899,
        7910
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2638": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7895,
        7945
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2639": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7895,
        7945
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA5A"
    },
    "2642": {
      "branch": 73,
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7895,
        7945
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2643": {
      "op": "POP"
    },
    "2644": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7933,
        7934
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 18,
      "value": "0x0"
    },
    "2646": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7926,
        7934
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F9"
    },
    "2649": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7926,
        7934
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2650": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7895,
        7945
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2651": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7972,
        7990
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 19,
      "value": "0x9F"
    },
    "2653": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7972,
        7990
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2654": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7961,
        7991
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F6"
    },
    "2657": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7961,
        7991
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2658": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7961,
        7967
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2659": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7961,
        7967
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2660": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7961,
        7991
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2665": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7961,
        7971
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1299"
    },
    "2668": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        7961,
        7991
      ],
      "op": "AND",
      "path": "1"
    },
    "2669": {
      "fn": "UFragments.sharesToFragments",
      "jump": "i",
      "offset": [
        7961,
        7991
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2670": {
      "offset": [
        3563,
        3596
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2671": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        3563,
        3596
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9F"
    },
    "2673": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        3563,
        3596
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2674": {
      "fn": "UFragments.sharesToFragments",
      "offset": [
        3563,
        3596
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2675": {
      "fn": "UFragments.sharesToFragments",
      "jump": "o",
      "offset": [
        3563,
        3596
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2676": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8263,
        8497
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2677": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8330,
        8337
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2679": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8353,
        8364
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2680": {
      "branch": 74,
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8353,
        8364
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2681": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8349,
        8399
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2682": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8349,
        8399
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA85"
    },
    "2685": {
      "branch": 74,
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8349,
        8399
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2686": {
      "op": "POP"
    },
    "2687": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8387,
        8388
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 20,
      "value": "0x0"
    },
    "2689": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8380,
        8388
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F9"
    },
    "2692": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8380,
        8388
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2693": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8349,
        8399
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2694": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8426,
        8451
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 21,
      "value": "0xA0"
    },
    "2696": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8426,
        8451
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2697": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8415,
        8490
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F6"
    },
    "2700": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8415,
        8490
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2701": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8457,
        8489
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3B9ACA00"
    },
    "2706": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8457,
        8489
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2707": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8415,
        8452
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAA3"
    },
    "2710": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8415,
        8452
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2711": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8415,
        8421
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2712": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8415,
        8421
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2713": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8415,
        8452
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2718": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8415,
        8425
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1299"
    },
    "2721": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8415,
        8452
      ],
      "op": "AND",
      "path": "1"
    },
    "2722": {
      "fn": "UFragments.sharesToScaledShares",
      "jump": "i",
      "offset": [
        8415,
        8452
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2723": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8415,
        8452
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2724": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8415,
        8456
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2725": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8415,
        8490
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2730": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8415,
        8456
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1231"
    },
    "2733": {
      "fn": "UFragments.sharesToScaledShares",
      "offset": [
        8415,
        8490
      ],
      "op": "AND",
      "path": "1"
    },
    "2734": {
      "fn": "UFragments.sharesToScaledShares",
      "jump": "i",
      "offset": [
        8415,
        8490
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2735": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7021,
        7150
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2736": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7124,
        7142
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 22,
      "value": "0x9F"
    },
    "2738": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7124,
        7142
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2745": {
      "op": "EXP"
    },
    "2746": {
      "op": "SUB"
    },
    "2747": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7100,
        7119
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2748": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7100,
        7119
      ],
      "op": "AND",
      "path": "1"
    },
    "2749": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7074,
        7081
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2751": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7100,
        7119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2752": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7100,
        7119
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2753": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7100,
        7119
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2754": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7100,
        7114
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA1"
    },
    "2756": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7100,
        7119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2758": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7100,
        7119
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2759": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7100,
        7119
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2761": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7100,
        7119
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2762": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7100,
        7119
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2763": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7100,
        7119
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2764": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7074,
        7081
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2765": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7074,
        7081
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2766": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7100,
        7143
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F6"
    },
    "2769": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7100,
        7143
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2770": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7100,
        7119
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2771": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7100,
        7143
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2776": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7100,
        7123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1299"
    },
    "2779": {
      "fn": "UFragments.balanceOf",
      "offset": [
        7100,
        7143
      ],
      "op": "AND",
      "path": "1"
    },
    "2780": {
      "fn": "UFragments.balanceOf",
      "jump": "i",
      "offset": [
        7100,
        7143
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2781": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1380,
        1493
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2782": {
      "offset": [
        931,
        940
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAE5"
    },
    "2785": {
      "offset": [
        931,
        938
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD24"
    },
    "2788": {
      "jump": "i",
      "offset": [
        931,
        940
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2789": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        931,
        940
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2790": {
      "offset": [
        923,
        941
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2791": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        923,
        941
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2792": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        923,
        941
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xAF0"
    },
    "2795": {
      "offset": [
        923,
        941
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2796": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        923,
        941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2798": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        923,
        941
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2799": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        923,
        941
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2800": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        923,
        941
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2801": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1456,
        1462
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 23,
      "value": "0x68"
    },
    "2803": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1456,
        1462
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2804": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1437,
        1463
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2806": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1437,
        1463
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2811": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2813": {
      "op": "EXP"
    },
    "2814": {
      "op": "SUB"
    },
    "2815": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1456,
        1462
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2816": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1456,
        1462
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2817": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1456,
        1462
      ],
      "op": "AND",
      "path": "10"
    },
    "2818": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1456,
        1462
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2819": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1437,
        1463
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0xF8DF31144D9C2F0F6B59D69B8B98ABD5459D07F2742C4DF920B25AAE33C64820"
    },
    "2852": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1437,
        1463
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2853": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1456,
        1462
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2855": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1456,
        1462
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2856": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1437,
        1463
      ],
      "op": "LOG2",
      "path": "10"
    },
    "2857": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1469,
        1475
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 24,
      "value": "0x68"
    },
    "2859": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1469,
        1488
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2860": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1469,
        1488
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2861": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2882": {
      "op": "NOT"
    },
    "2883": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1469,
        1488
      ],
      "op": "AND",
      "path": "10"
    },
    "2884": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1469,
        1488
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2885": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1469,
        1488
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2886": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1380,
        1493
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2887": {
      "fn": "UFragments.rebase",
      "offset": [
        4464,
        6022
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2888": {
      "offset": [
        2478,
        2492
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9B"
    },
    "2890": {
      "fn": "UFragments.rebase",
      "offset": [
        2478,
        2492
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2891": {
      "fn": "UFragments.rebase",
      "offset": [
        4573,
        4580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2893": {
      "fn": "UFragments.rebase",
      "offset": [
        4573,
        4580
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2900": {
      "op": "EXP"
    },
    "2901": {
      "op": "SUB"
    },
    "2902": {
      "offset": [
        2478,
        2492
      ],
      "op": "AND",
      "path": "1"
    },
    "2903": {
      "offset": [
        2464,
        2474
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2904": {
      "offset": [
        2464,
        2492
      ],
      "op": "EQ",
      "path": "1"
    },
    "2905": {
      "offset": [
        2456,
        2493
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB61"
    },
    "2908": {
      "offset": [
        2456,
        2493
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2909": {
      "fn": "UFragments.rebase",
      "offset": [
        2456,
        2493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2911": {
      "fn": "UFragments.rebase",
      "offset": [
        2456,
        2493
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2912": {
      "fn": "UFragments.rebase",
      "offset": [
        2456,
        2493
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2913": {
      "fn": "UFragments.rebase",
      "offset": [
        2456,
        2493
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2914": {
      "offset": [
        2791,
        2806
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9C"
    },
    "2916": {
      "fn": "UFragments.rebase",
      "offset": [
        2791,
        2806
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2917": {
      "offset": [
        2784,
        2787
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "2918": {
      "offset": [
        2784,
        2806
      ],
      "op": "LT",
      "path": "1"
    },
    "2919": {
      "branch": 75,
      "fn": "UFragments.rebase",
      "offset": [
        2784,
        2806
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2920": {
      "offset": [
        2776,
        2807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB70"
    },
    "2923": {
      "branch": 75,
      "offset": [
        2776,
        2807
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2924": {
      "fn": "UFragments.rebase",
      "offset": [
        2776,
        2807
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2926": {
      "fn": "UFragments.rebase",
      "offset": [
        2776,
        2807
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2927": {
      "fn": "UFragments.rebase",
      "offset": [
        2776,
        2807
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2928": {
      "fn": "UFragments.rebase",
      "offset": [
        2776,
        2807
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2929": {
      "fn": "UFragments.rebase",
      "offset": [
        4596,
        4612
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2930": {
      "branch": 76,
      "fn": "UFragments.rebase",
      "offset": [
        4596,
        4612
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2931": {
      "fn": "UFragments.rebase",
      "offset": [
        4592,
        4707
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2932": {
      "fn": "UFragments.rebase",
      "offset": [
        4592,
        4707
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB8"
    },
    "2935": {
      "branch": 76,
      "fn": "UFragments.rebase",
      "offset": [
        4592,
        4707
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2936": {
      "fn": "UFragments.rebase",
      "offset": [
        4650,
        4662
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 25,
      "value": "0x9E"
    },
    "2938": {
      "fn": "UFragments.rebase",
      "offset": [
        4650,
        4662
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2939": {
      "fn": "UFragments.rebase",
      "offset": [
        4633,
        4663
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2941": {
      "fn": "UFragments.rebase",
      "offset": [
        4633,
        4663
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2942": {
      "fn": "UFragments.rebase",
      "offset": [
        4633,
        4663
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2943": {
      "fn": "UFragments.rebase",
      "offset": [
        4633,
        4663
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2944": {
      "fn": "UFragments.rebase",
      "offset": [
        4633,
        4663
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2945": {
      "fn": "UFragments.rebase",
      "offset": [
        4633,
        4663
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2946": {
      "fn": "UFragments.rebase",
      "offset": [
        4633,
        4663
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2947": {
      "fn": "UFragments.rebase",
      "offset": [
        4643,
        4648
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2948": {
      "fn": "UFragments.rebase",
      "offset": [
        4643,
        4648
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2949": {
      "fn": "UFragments.rebase",
      "offset": [
        4633,
        4663
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x72725A3B1E5BD622D6BCD1339BB31279C351ABE8F541AC7FD320F24E1B1641F2"
    },
    "2982": {
      "fn": "UFragments.rebase",
      "offset": [
        4633,
        4663
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2983": {
      "fn": "UFragments.rebase",
      "offset": [
        4633,
        4663
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2984": {
      "fn": "UFragments.rebase",
      "offset": [
        4633,
        4663
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2985": {
      "fn": "UFragments.rebase",
      "offset": [
        4633,
        4663
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2986": {
      "fn": "UFragments.rebase",
      "offset": [
        4633,
        4663
      ],
      "op": "SUB",
      "path": "1"
    },
    "2987": {
      "fn": "UFragments.rebase",
      "offset": [
        4633,
        4663
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2989": {
      "fn": "UFragments.rebase",
      "offset": [
        4633,
        4663
      ],
      "op": "ADD",
      "path": "1"
    },
    "2990": {
      "fn": "UFragments.rebase",
      "offset": [
        4633,
        4663
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2991": {
      "fn": "UFragments.rebase",
      "offset": [
        4633,
        4663
      ],
      "op": "LOG2",
      "path": "1"
    },
    "2992": {
      "op": "POP"
    },
    "2993": {
      "fn": "UFragments.rebase",
      "offset": [
        4684,
        4696
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 26,
      "value": "0x9E"
    },
    "2995": {
      "fn": "UFragments.rebase",
      "offset": [
        4684,
        4696
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2996": {
      "fn": "UFragments.rebase",
      "offset": [
        4677,
        4696
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6D9"
    },
    "2999": {
      "fn": "UFragments.rebase",
      "offset": [
        4677,
        4696
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3000": {
      "fn": "UFragments.rebase",
      "offset": [
        4592,
        4707
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3001": {
      "fn": "UFragments.rebase",
      "offset": [
        4735,
        4736
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3003": {
      "fn": "UFragments.rebase",
      "offset": [
        4721,
        4732
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3004": {
      "branch": 77,
      "fn": "UFragments.rebase",
      "offset": [
        4721,
        4736
      ],
      "op": "SLT",
      "path": "1"
    },
    "3005": {
      "fn": "UFragments.rebase",
      "offset": [
        4717,
        4906
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3006": {
      "fn": "UFragments.rebase",
      "offset": [
        4717,
        4906
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBE4"
    },
    "3009": {
      "branch": 77,
      "fn": "UFragments.rebase",
      "offset": [
        4717,
        4906
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3010": {
      "fn": "UFragments.rebase",
      "offset": [
        4767,
        4811
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 27,
      "value": "0xBDC"
    },
    "3013": {
      "fn": "UFragments.rebase",
      "offset": [
        4792,
        4809
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBCD"
    },
    "3016": {
      "fn": "UFragments.rebase",
      "offset": [
        4792,
        4803
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3017": {
      "fn": "UFragments.rebase",
      "offset": [
        4792,
        4807
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12BC"
    },
    "3020": {
      "fn": "UFragments.rebase",
      "jump": "i",
      "offset": [
        4792,
        4809
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3021": {
      "fn": "UFragments.rebase",
      "offset": [
        4792,
        4809
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3022": {
      "fn": "UFragments.rebase",
      "offset": [
        4767,
        4779
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9E"
    },
    "3024": {
      "fn": "UFragments.rebase",
      "offset": [
        4767,
        4779
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3025": {
      "fn": "UFragments.rebase",
      "offset": [
        4767,
        4779
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3026": {
      "fn": "UFragments.rebase",
      "offset": [
        4767,
        4811
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "3031": {
      "fn": "UFragments.rebase",
      "offset": [
        4767,
        4783
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1270"
    },
    "3034": {
      "fn": "UFragments.rebase",
      "offset": [
        4767,
        4811
      ],
      "op": "AND",
      "path": "1"
    },
    "3035": {
      "fn": "UFragments.rebase",
      "jump": "i",
      "offset": [
        4767,
        4811
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3036": {
      "fn": "UFragments.rebase",
      "offset": [
        4767,
        4811
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3037": {
      "fn": "UFragments.rebase",
      "offset": [
        4752,
        4764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9E"
    },
    "3039": {
      "fn": "UFragments.rebase",
      "offset": [
        4752,
        4811
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3040": {
      "fn": "UFragments.rebase",
      "offset": [
        4717,
        4906
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBFB"
    },
    "3043": {
      "fn": "UFragments.rebase",
      "offset": [
        4717,
        4906
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3044": {
      "fn": "UFragments.rebase",
      "offset": [
        4717,
        4906
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3045": {
      "fn": "UFragments.rebase",
      "offset": [
        4857,
        4869
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 28,
      "value": "0x9E"
    },
    "3047": {
      "fn": "UFragments.rebase",
      "offset": [
        4857,
        4869
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3048": {
      "fn": "UFragments.rebase",
      "offset": [
        4857,
        4895
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBF7"
    },
    "3051": {
      "fn": "UFragments.rebase",
      "offset": [
        4857,
        4895
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3052": {
      "fn": "UFragments.rebase",
      "offset": [
        4882,
        4893
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3053": {
      "fn": "UFragments.rebase",
      "offset": [
        4857,
        4895
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "3058": {
      "fn": "UFragments.rebase",
      "offset": [
        4857,
        4873
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1287"
    },
    "3061": {
      "fn": "UFragments.rebase",
      "offset": [
        4857,
        4895
      ],
      "op": "AND",
      "path": "1"
    },
    "3062": {
      "fn": "UFragments.rebase",
      "jump": "i",
      "offset": [
        4857,
        4895
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3063": {
      "fn": "UFragments.rebase",
      "offset": [
        4857,
        4895
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3064": {
      "fn": "UFragments.rebase",
      "offset": [
        4842,
        4854
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9E"
    },
    "3066": {
      "fn": "UFragments.rebase",
      "offset": [
        4842,
        4895
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3067": {
      "fn": "UFragments.rebase",
      "offset": [
        4717,
        4906
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3068": {
      "fn": "UFragments.rebase",
      "offset": [
        4920,
        4932
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9E"
    },
    "3070": {
      "fn": "UFragments.rebase",
      "offset": [
        4920,
        4932
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3071": {
      "offset": [
        3511,
        3522
      ],
      "op": "PUSH16",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3088": {
      "op": "LT"
    },
    "3089": {
      "fn": "UFragments.rebase",
      "offset": [
        4916,
        4997
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3090": {
      "fn": "UFragments.rebase",
      "offset": [
        4916,
        4997
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC2A"
    },
    "3093": {
      "fn": "UFragments.rebase",
      "offset": [
        4916,
        4997
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3094": {
      "offset": [
        3511,
        3522
      ],
      "op": "PUSH16",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3111": {
      "fn": "UFragments.rebase",
      "offset": [
        4961,
        4973
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 29,
      "value": "0x9E"
    },
    "3113": {
      "fn": "UFragments.rebase",
      "offset": [
        4961,
        4986
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3114": {
      "fn": "UFragments.rebase",
      "offset": [
        4916,
        4997
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3115": {
      "fn": "UFragments.rebase",
      "offset": [
        5045,
        5057
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 30,
      "value": "0x9E"
    },
    "3117": {
      "fn": "UFragments.rebase",
      "offset": [
        5045,
        5057
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3118": {
      "fn": "UFragments.rebase",
      "offset": [
        5028,
        5058
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC4D"
    },
    "3121": {
      "fn": "UFragments.rebase",
      "offset": [
        5028,
        5058
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3122": {
      "offset": [
        3097,
        3116
      ],
      "op": "PUSH6",
      "path": "1",
      "value": "0x3A352944000"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3131": {
      "op": "NOT"
    },
    "3132": {
      "offset": [
        3358,
        3392
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3133": {
      "fn": "UFragments.rebase",
      "offset": [
        3358,
        3392
      ],
      "op": "MOD",
      "path": "1"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3136": {
      "op": "NOT"
    },
    "3137": {
      "offset": [
        3343,
        3393
      ],
      "op": "SUB",
      "path": "1"
    },
    "3138": {
      "fn": "UFragments.rebase",
      "offset": [
        3343,
        3393
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3139": {
      "fn": "UFragments.rebase",
      "offset": [
        5028,
        5058
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "3144": {
      "fn": "UFragments.rebase",
      "offset": [
        5028,
        5044
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1299"
    },
    "3147": {
      "fn": "UFragments.rebase",
      "offset": [
        5028,
        5058
      ],
      "op": "AND",
      "path": "1"
    },
    "3148": {
      "fn": "UFragments.rebase",
      "jump": "i",
      "offset": [
        5028,
        5058
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3149": {
      "fn": "UFragments.rebase",
      "offset": [
        5028,
        5058
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3150": {
      "fn": "UFragments.rebase",
      "offset": [
        5007,
        5025
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9F"
    },
    "3152": {
      "fn": "UFragments.rebase",
      "offset": [
        5007,
        5058
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3153": {
      "fn": "UFragments.rebase",
      "offset": [
        5973,
        5985
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 31,
      "value": "0x9E"
    },
    "3155": {
      "fn": "UFragments.rebase",
      "offset": [
        5973,
        5985
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3156": {
      "fn": "UFragments.rebase",
      "offset": [
        5956,
        5986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3158": {
      "fn": "UFragments.rebase",
      "offset": [
        5956,
        5986
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3159": {
      "fn": "UFragments.rebase",
      "offset": [
        5956,
        5986
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3160": {
      "fn": "UFragments.rebase",
      "offset": [
        5956,
        5986
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3161": {
      "fn": "UFragments.rebase",
      "offset": [
        5956,
        5986
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3162": {
      "fn": "UFragments.rebase",
      "offset": [
        5956,
        5986
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3163": {
      "fn": "UFragments.rebase",
      "offset": [
        5956,
        5986
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3164": {
      "fn": "UFragments.rebase",
      "offset": [
        5966,
        5971
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3165": {
      "fn": "UFragments.rebase",
      "offset": [
        5966,
        5971
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3166": {
      "fn": "UFragments.rebase",
      "offset": [
        5956,
        5986
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x72725A3B1E5BD622D6BCD1339BB31279C351ABE8F541AC7FD320F24E1B1641F2"
    },
    "3199": {
      "fn": "UFragments.rebase",
      "offset": [
        5956,
        5986
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3200": {
      "fn": "UFragments.rebase",
      "offset": [
        5956,
        5986
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3201": {
      "fn": "UFragments.rebase",
      "offset": [
        5956,
        5986
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3202": {
      "fn": "UFragments.rebase",
      "offset": [
        5956,
        5986
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3203": {
      "fn": "UFragments.rebase",
      "offset": [
        5956,
        5986
      ],
      "op": "SUB",
      "path": "1"
    },
    "3204": {
      "fn": "UFragments.rebase",
      "offset": [
        5956,
        5986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3206": {
      "fn": "UFragments.rebase",
      "offset": [
        5956,
        5986
      ],
      "op": "ADD",
      "path": "1"
    },
    "3207": {
      "fn": "UFragments.rebase",
      "offset": [
        5956,
        5986
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3208": {
      "fn": "UFragments.rebase",
      "offset": [
        5956,
        5986
      ],
      "op": "LOG2",
      "path": "1"
    },
    "3209": {
      "op": "POP"
    },
    "3210": {
      "fn": "UFragments.rebase",
      "offset": [
        6003,
        6015
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 32,
      "value": "0x9E"
    },
    "3212": {
      "fn": "UFragments.rebase",
      "offset": [
        6003,
        6015
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3213": {
      "fn": "UFragments.rebase",
      "offset": [
        4464,
        6022
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3214": {
      "fn": "UFragments.rebase",
      "offset": [
        4464,
        6022
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3215": {
      "fn": "UFragments.rebase",
      "offset": [
        4464,
        6022
      ],
      "op": "POP",
      "path": "1"
    },
    "3216": {
      "fn": "UFragments.rebase",
      "offset": [
        4464,
        6022
      ],
      "op": "POP",
      "path": "1"
    },
    "3217": {
      "fn": "UFragments.rebase",
      "jump": "o",
      "offset": [
        4464,
        6022
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3218": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4027,
        4203
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3219": {
      "offset": [
        931,
        940
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC9A"
    },
    "3222": {
      "offset": [
        931,
        938
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD24"
    },
    "3225": {
      "jump": "i",
      "offset": [
        931,
        940
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3226": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        931,
        940
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3227": {
      "offset": [
        923,
        941
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3228": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        923,
        941
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "3229": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        923,
        941
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCA5"
    },
    "3232": {
      "offset": [
        923,
        941
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3233": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        923,
        941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3235": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        923,
        941
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3236": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        923,
        941
      ],
      "op": "REVERT",
      "path": "10"
    },
    "3237": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        923,
        941
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3238": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4108,
        4122
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 33,
      "value": "0x9B"
    },
    "3240": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4108,
        4140
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3241": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4108,
        4140
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3248": {
      "op": "EXP"
    },
    "3249": {
      "op": "SUB"
    },
    "3250": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4108,
        4140
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3251": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4108,
        4140
      ],
      "op": "AND",
      "path": "1"
    },
    "3252": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3273": {
      "op": "NOT"
    },
    "3274": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4108,
        4140
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3275": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4108,
        4140
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3276": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4108,
        4140
      ],
      "op": "AND",
      "path": "1"
    },
    "3277": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4108,
        4140
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3278": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4108,
        4140
      ],
      "op": "OR",
      "path": "1"
    },
    "3279": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4108,
        4140
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3280": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4108,
        4140
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3281": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4108,
        4140
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3282": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4155,
        4196
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 34,
      "value": "0x40"
    },
    "3284": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4155,
        4196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3285": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4155,
        4196
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3286": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4155,
        4196
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3287": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4155,
        4196
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3288": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4155,
        4196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3289": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4155,
        4196
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3290": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4155,
        4196
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xE6961F1A1AFB87EAF51FD64F22DDC10062E23AA7838EAC5D0BDF140BFD38972"
    },
    "3323": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4155,
        4196
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3324": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4155,
        4196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3325": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4155,
        4196
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3326": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4155,
        4196
      ],
      "op": "SUB",
      "path": "1"
    },
    "3327": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4155,
        4196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3329": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4155,
        4196
      ],
      "op": "ADD",
      "path": "1"
    },
    "3330": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4155,
        4196
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3331": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4155,
        4196
      ],
      "op": "LOG1",
      "path": "1"
    },
    "3332": {
      "fn": "UFragments.setMonetaryPolicy",
      "offset": [
        4027,
        4203
      ],
      "op": "POP",
      "path": "1"
    },
    "3333": {
      "fn": "UFragments.setMonetaryPolicy",
      "jump": "o",
      "offset": [
        4027,
        4203
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3334": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3335": {
      "fn": "Ownable.owner",
      "offset": [
        805,
        811
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 35,
      "value": "0x68"
    },
    "3337": {
      "fn": "Ownable.owner",
      "offset": [
        805,
        811
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3344": {
      "op": "EXP"
    },
    "3345": {
      "op": "SUB"
    },
    "3346": {
      "fn": "Ownable.owner",
      "offset": [
        805,
        811
      ],
      "op": "AND",
      "path": "10"
    },
    "3347": {
      "fn": "Ownable.owner",
      "offset": [
        746,
        816
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3348": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        746,
        816
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3349": {
      "offset": [
        2344,
        2373
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3350": {
      "fn": "Ownable.owner",
      "offset": [
        2344,
        2373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9B"
    },
    "3352": {
      "fn": "Ownable.owner",
      "offset": [
        2344,
        2373
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3359": {
      "op": "EXP"
    },
    "3360": {
      "op": "SUB"
    },
    "3361": {
      "offset": [
        2344,
        2373
      ],
      "op": "AND",
      "path": "1"
    },
    "3362": {
      "fn": "Ownable.owner",
      "offset": [
        2344,
        2373
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3363": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        2344,
        2373
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3364": {
      "fn": "Ownable.isOwner",
      "offset": [
        1033,
        1116
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3365": {
      "fn": "Ownable.isOwner",
      "offset": [
        1105,
        1111
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 36,
      "value": "0x68"
    },
    "3367": {
      "fn": "Ownable.isOwner",
      "offset": [
        1105,
        1111
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3370": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3372": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3374": {
      "op": "EXP"
    },
    "3375": {
      "op": "SUB"
    },
    "3376": {
      "fn": "Ownable.isOwner",
      "offset": [
        1105,
        1111
      ],
      "op": "AND",
      "path": "10"
    },
    "3377": {
      "fn": "Ownable.isOwner",
      "offset": [
        1091,
        1101
      ],
      "op": "CALLER",
      "path": "10"
    },
    "3378": {
      "fn": "Ownable.isOwner",
      "offset": [
        1091,
        1111
      ],
      "op": "EQ",
      "path": "10"
    },
    "3379": {
      "fn": "Ownable.isOwner",
      "offset": [
        1091,
        1111
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3380": {
      "fn": "Ownable.isOwner",
      "jump": "o",
      "offset": [
        1033,
        1116
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3381": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        792,
        863
      ],
      "op": "JUMPDEST",
      "path": "11"
    },
    "3382": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        851,
        858
      ],
      "op": "PUSH1",
      "path": "11",
      "statement": 37,
      "value": "0x34"
    },
    "3384": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3385": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3386": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x40"
    },
    "3388": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3389": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "MLOAD",
      "path": "11"
    },
    "3390": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3392": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "3394": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x2"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3398": {
      "op": "NOT"
    },
    "3399": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "3402": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1"
    },
    "3404": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DUP9",
      "path": "11"
    },
    "3405": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "AND",
      "path": "11"
    },
    "3406": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3407": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "MUL",
      "path": "11"
    },
    "3408": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "ADD",
      "path": "11"
    },
    "3409": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3410": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "SWAP6",
      "path": "11"
    },
    "3411": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "AND",
      "path": "11"
    },
    "3412": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "3413": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3414": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "SWAP5",
      "path": "11"
    },
    "3415": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DIV",
      "path": "11"
    },
    "3416": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "3417": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DUP5",
      "path": "11"
    },
    "3418": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "ADD",
      "path": "11"
    },
    "3419": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3420": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3421": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DIV",
      "path": "11"
    },
    "3422": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3423": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "MUL",
      "path": "11"
    },
    "3424": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3425": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "ADD",
      "path": "11"
    },
    "3426": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3427": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "ADD",
      "path": "11"
    },
    "3428": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3429": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3430": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3431": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3432": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DUP2",
      "path": "11"
    },
    "3433": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3434": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        830,
        836
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x60"
    },
    "3436": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        830,
        836
      ],
      "op": "SWAP4",
      "path": "11"
    },
    "3437": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3438": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "SWAP3",
      "path": "11"
    },
    "3439": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        851,
        858
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "3440": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        851,
        858
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3441": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3442": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "ADD",
      "path": "11"
    },
    "3443": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        851,
        858
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3444": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DUP3",
      "path": "11"
    },
    "3445": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3446": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "ISZERO",
      "path": "11"
    },
    "3447": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x66D"
    },
    "3450": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3451": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3452": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x1F"
    },
    "3454": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "LT",
      "path": "11"
    },
    "3455": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x642"
    },
    "3458": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "JUMPI",
      "path": "11"
    },
    "3459": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x100"
    },
    "3462": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DUP1",
      "path": "11"
    },
    "3463": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3464": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "SLOAD",
      "path": "11"
    },
    "3465": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DIV",
      "path": "11"
    },
    "3466": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "MUL",
      "path": "11"
    },
    "3467": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "DUP4",
      "path": "11"
    },
    "3468": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "MSTORE",
      "path": "11"
    },
    "3469": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3470": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "PUSH1",
      "path": "11",
      "value": "0x20"
    },
    "3472": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "ADD",
      "path": "11"
    },
    "3473": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "SWAP2",
      "path": "11"
    },
    "3474": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "PUSH2",
      "path": "11",
      "value": "0x66D"
    },
    "3477": {
      "fn": "ERC20Detailed.symbol",
      "offset": [
        844,
        858
      ],
      "op": "JUMP",
      "path": "11"
    },
    "3478": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12022,
        12502
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3479": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12160,
        12170
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3480": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12107,
        12111
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3482": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12171
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3483": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12171
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3484": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12171
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3485": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12159
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "3487": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12171
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3489": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12171
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3490": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12171
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3491": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12171
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3492": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12171
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3494": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12171
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3495": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12171
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3496": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12171
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3503": {
      "op": "EXP"
    },
    "3504": {
      "op": "SUB"
    },
    "3505": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12180
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3506": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12180
      ],
      "op": "AND",
      "path": "1"
    },
    "3507": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12180
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3508": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12180
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3509": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12180
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3510": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12180
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3511": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12180
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3512": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12180
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3513": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12180
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3514": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12142,
        12180
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3515": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12194,
        12221
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3516": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12194,
        12221
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3517": {
      "branch": 78,
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12194,
        12221
      ],
      "op": "LT",
      "path": "1"
    },
    "3518": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12190,
        12391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDEA"
    },
    "3521": {
      "branch": 78,
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12190,
        12391
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3522": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12255,
        12265
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 38
    },
    "3523": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12278,
        12279
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3525": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12266
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3526": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12266
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3527": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12266
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3528": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12254
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "3530": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3532": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12266
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3533": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12266
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3534": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12266
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3535": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3537": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12266
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3538": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12266
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3539": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12266
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3544": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3546": {
      "op": "EXP"
    },
    "3547": {
      "op": "SUB"
    },
    "3548": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12275
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3549": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12275
      ],
      "op": "AND",
      "path": "1"
    },
    "3550": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12275
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3551": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12275
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3552": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12275
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3553": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12275
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3554": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12275
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3555": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12275
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3556": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12275
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3557": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12237,
        12279
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3558": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12190,
        12391
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE1F"
    },
    "3561": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12190,
        12391
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3562": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12190,
        12391
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3563": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12351,
        12380
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 39,
      "value": "0xDFA"
    },
    "3566": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12351,
        12359
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3567": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12364,
        12379
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3568": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12351,
        12380
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "3573": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12351,
        12363
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1270"
    },
    "3576": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12351,
        12380
      ],
      "op": "AND",
      "path": "1"
    },
    "3577": {
      "fn": "UFragments.decreaseAllowance",
      "jump": "i",
      "offset": [
        12351,
        12380
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3578": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12351,
        12380
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3579": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12328,
        12338
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3580": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12339
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3582": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12339
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3583": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12339
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3584": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12339
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3585": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12327
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "3587": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12339
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3589": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12339
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3590": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12339
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3591": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12339
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3592": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12339
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3594": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12339
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3595": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12339
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3596": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12339
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3599": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3603": {
      "op": "EXP"
    },
    "3604": {
      "op": "SUB"
    },
    "3605": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12348
      ],
      "op": "DUP10",
      "path": "1"
    },
    "3606": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12348
      ],
      "op": "AND",
      "path": "1"
    },
    "3607": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12348
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3608": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12348
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3609": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12348
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3610": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12348
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3611": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12348
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3612": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12348
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3613": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12348
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3614": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12310,
        12380
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3615": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12190,
        12391
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3616": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12414,
        12424
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 40
    },
    "3617": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12464
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3619": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12464
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3620": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12464
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3621": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12464
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3622": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12452
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "3624": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12464
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3626": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12464
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3627": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12464
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3628": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12464
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3629": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12464
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3631": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12464
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3632": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12464
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3633": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12464
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3640": {
      "op": "EXP"
    },
    "3641": {
      "op": "SUB"
    },
    "3642": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "DUP10",
      "path": "1"
    },
    "3643": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "AND",
      "path": "1"
    },
    "3644": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12473
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3645": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12473
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3646": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12473
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3647": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12473
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3648": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12473
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3649": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12473
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3650": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12473
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3651": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12473
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3652": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12473
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3653": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12473
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3654": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12435,
        12473
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3655": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3656": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3657": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3658": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3659": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3660": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3661": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3662": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3663": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3664": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12414,
        12424
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3665": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "3698": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3699": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3700": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3701": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3702": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "SUB",
      "path": "1"
    },
    "3703": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3704": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3705": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "ADD",
      "path": "1"
    },
    "3706": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3707": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12405,
        12474
      ],
      "op": "LOG3",
      "path": "1"
    },
    "3708": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12491,
        12495
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 41,
      "value": "0x1"
    },
    "3710": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12484,
        12495
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3711": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12484,
        12495
      ],
      "op": "POP",
      "path": "1"
    },
    "3712": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12022,
        12502
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3713": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12022,
        12502
      ],
      "op": "POP",
      "path": "1"
    },
    "3714": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12022,
        12502
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3715": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12022,
        12502
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3716": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12022,
        12502
      ],
      "op": "POP",
      "path": "1"
    },
    "3717": {
      "fn": "UFragments.decreaseAllowance",
      "offset": [
        12022,
        12502
      ],
      "op": "POP",
      "path": "1"
    },
    "3718": {
      "fn": "UFragments.decreaseAllowance",
      "jump": "o",
      "offset": [
        12022,
        12502
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3719": {
      "fn": "UFragments.transfer",
      "offset": [
        8715,
        9081
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3720": {
      "fn": "UFragments.transfer",
      "offset": [
        8795,
        8799
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3722": {
      "fn": "UFragments.transfer",
      "offset": [
        8795,
        8799
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3723": {
      "fn": "UFragments.transfer",
      "offset": [
        8782,
        8784
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3730": {
      "op": "EXP"
    },
    "3731": {
      "op": "SUB"
    },
    "3732": {
      "offset": [
        2653,
        2671
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3733": {
      "fn": "UFragments.transfer",
      "offset": [
        2653,
        2671
      ],
      "op": "AND",
      "path": "1"
    },
    "3734": {
      "fn": "UFragments.transfer",
      "offset": [
        2653,
        2671
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3735": {
      "branch": 79,
      "fn": "UFragments.transfer",
      "offset": [
        2653,
        2671
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3736": {
      "offset": [
        2645,
        2672
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEA0"
    },
    "3739": {
      "branch": 79,
      "offset": [
        2645,
        2672
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3740": {
      "fn": "UFragments.transfer",
      "offset": [
        2645,
        2672
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3742": {
      "fn": "UFragments.transfer",
      "offset": [
        2645,
        2672
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3743": {
      "fn": "UFragments.transfer",
      "offset": [
        2645,
        2672
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3744": {
      "fn": "UFragments.transfer",
      "offset": [
        2645,
        2672
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3751": {
      "op": "EXP"
    },
    "3752": {
      "op": "SUB"
    },
    "3753": {
      "offset": [
        2690,
        2709
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3754": {
      "fn": "UFragments.transfer",
      "offset": [
        2690,
        2709
      ],
      "op": "AND",
      "path": "1"
    },
    "3755": {
      "offset": [
        2704,
        2708
      ],
      "op": "ADDRESS",
      "path": "1"
    },
    "3756": {
      "offset": [
        2690,
        2709
      ],
      "op": "EQ",
      "path": "1"
    },
    "3757": {
      "branch": 80,
      "fn": "UFragments.transfer",
      "offset": [
        2690,
        2709
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3758": {
      "offset": [
        2682,
        2710
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEB6"
    },
    "3761": {
      "branch": 80,
      "offset": [
        2682,
        2710
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3762": {
      "fn": "UFragments.transfer",
      "offset": [
        2682,
        2710
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3764": {
      "fn": "UFragments.transfer",
      "offset": [
        2682,
        2710
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3765": {
      "fn": "UFragments.transfer",
      "offset": [
        2682,
        2710
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3766": {
      "fn": "UFragments.transfer",
      "offset": [
        2682,
        2710
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3767": {
      "fn": "UFragments.transfer",
      "offset": [
        8842,
        8860
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9F"
    },
    "3769": {
      "fn": "UFragments.transfer",
      "offset": [
        8842,
        8860
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3770": {
      "fn": "UFragments.transfer",
      "offset": [
        8832,
        8861
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xECA"
    },
    "3773": {
      "fn": "UFragments.transfer",
      "offset": [
        8832,
        8861
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3774": {
      "fn": "UFragments.transfer",
      "offset": [
        8832,
        8837
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3775": {
      "fn": "UFragments.transfer",
      "offset": [
        8832,
        8837
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3776": {
      "fn": "UFragments.transfer",
      "offset": [
        8832,
        8861
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "3781": {
      "fn": "UFragments.transfer",
      "offset": [
        8832,
        8841
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1231"
    },
    "3784": {
      "fn": "UFragments.transfer",
      "offset": [
        8832,
        8861
      ],
      "op": "AND",
      "path": "1"
    },
    "3785": {
      "fn": "UFragments.transfer",
      "jump": "i",
      "offset": [
        8832,
        8861
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3786": {
      "fn": "UFragments.transfer",
      "offset": [
        8832,
        8861
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3787": {
      "fn": "UFragments.transfer",
      "offset": [
        8915,
        8925
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 42
    },
    "3788": {
      "fn": "UFragments.transfer",
      "offset": [
        8900,
        8926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3790": {
      "fn": "UFragments.transfer",
      "offset": [
        8900,
        8926
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3791": {
      "fn": "UFragments.transfer",
      "offset": [
        8900,
        8926
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3792": {
      "fn": "UFragments.transfer",
      "offset": [
        8900,
        8926
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3793": {
      "fn": "UFragments.transfer",
      "offset": [
        8900,
        8914
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA1"
    },
    "3795": {
      "fn": "UFragments.transfer",
      "offset": [
        8900,
        8926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3797": {
      "fn": "UFragments.transfer",
      "offset": [
        8900,
        8926
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3798": {
      "fn": "UFragments.transfer",
      "offset": [
        8900,
        8926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3800": {
      "fn": "UFragments.transfer",
      "offset": [
        8900,
        8926
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3801": {
      "fn": "UFragments.transfer",
      "offset": [
        8900,
        8926
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3802": {
      "fn": "UFragments.transfer",
      "offset": [
        8900,
        8926
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3803": {
      "fn": "UFragments.transfer",
      "offset": [
        8811,
        8861
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3804": {
      "fn": "UFragments.transfer",
      "offset": [
        8811,
        8861
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3805": {
      "op": "POP"
    },
    "3806": {
      "fn": "UFragments.transfer",
      "offset": [
        8900,
        8942
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEED"
    },
    "3809": {
      "fn": "UFragments.transfer",
      "offset": [
        8900,
        8942
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3810": {
      "fn": "UFragments.transfer",
      "offset": [
        8811,
        8861
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3811": {
      "fn": "UFragments.transfer",
      "offset": [
        8900,
        8942
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "3816": {
      "fn": "UFragments.transfer",
      "offset": [
        8900,
        8930
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1270"
    },
    "3819": {
      "fn": "UFragments.transfer",
      "offset": [
        8900,
        8942
      ],
      "op": "AND",
      "path": "1"
    },
    "3820": {
      "fn": "UFragments.transfer",
      "jump": "i",
      "offset": [
        8900,
        8942
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3821": {
      "fn": "UFragments.transfer",
      "offset": [
        8900,
        8942
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3822": {
      "fn": "UFragments.transfer",
      "offset": [
        8886,
        8896
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3823": {
      "fn": "UFragments.transfer",
      "offset": [
        8871,
        8897
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3825": {
      "fn": "UFragments.transfer",
      "offset": [
        8871,
        8897
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3826": {
      "fn": "UFragments.transfer",
      "offset": [
        8871,
        8897
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3827": {
      "fn": "UFragments.transfer",
      "offset": [
        8871,
        8897
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3828": {
      "fn": "UFragments.transfer",
      "offset": [
        8871,
        8885
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA1"
    },
    "3830": {
      "fn": "UFragments.transfer",
      "offset": [
        8871,
        8897
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3832": {
      "fn": "UFragments.transfer",
      "offset": [
        8871,
        8897
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3833": {
      "fn": "UFragments.transfer",
      "offset": [
        8871,
        8897
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3835": {
      "fn": "UFragments.transfer",
      "offset": [
        8871,
        8897
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3836": {
      "fn": "UFragments.transfer",
      "offset": [
        8871,
        8897
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3837": {
      "fn": "UFragments.transfer",
      "offset": [
        8871,
        8897
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3838": {
      "fn": "UFragments.transfer",
      "offset": [
        8871,
        8942
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3839": {
      "fn": "UFragments.transfer",
      "offset": [
        8871,
        8942
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3840": {
      "fn": "UFragments.transfer",
      "offset": [
        8871,
        8942
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3841": {
      "fn": "UFragments.transfer",
      "offset": [
        8871,
        8942
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3844": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3848": {
      "op": "EXP"
    },
    "3849": {
      "op": "SUB"
    },
    "3850": {
      "fn": "UFragments.transfer",
      "offset": [
        8973,
        8991
      ],
      "op": "DUP8",
      "path": "1",
      "statement": 43
    },
    "3851": {
      "fn": "UFragments.transfer",
      "offset": [
        8973,
        8991
      ],
      "op": "AND",
      "path": "1"
    },
    "3852": {
      "fn": "UFragments.transfer",
      "offset": [
        8973,
        8991
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3853": {
      "fn": "UFragments.transfer",
      "offset": [
        8973,
        8991
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3854": {
      "fn": "UFragments.transfer",
      "offset": [
        8973,
        8991
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3855": {
      "fn": "UFragments.transfer",
      "offset": [
        8973,
        8991
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3856": {
      "fn": "UFragments.transfer",
      "offset": [
        8973,
        9007
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF1F"
    },
    "3859": {
      "fn": "UFragments.transfer",
      "offset": [
        8973,
        9007
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3860": {
      "fn": "UFragments.transfer",
      "offset": [
        8996,
        9006
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3861": {
      "fn": "UFragments.transfer",
      "offset": [
        8973,
        9007
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "3866": {
      "fn": "UFragments.transfer",
      "offset": [
        8973,
        8995
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1287"
    },
    "3869": {
      "fn": "UFragments.transfer",
      "offset": [
        8973,
        9007
      ],
      "op": "AND",
      "path": "1"
    },
    "3870": {
      "fn": "UFragments.transfer",
      "jump": "i",
      "offset": [
        8973,
        9007
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3871": {
      "fn": "UFragments.transfer",
      "offset": [
        8973,
        9007
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3878": {
      "op": "EXP"
    },
    "3879": {
      "op": "SUB"
    },
    "3880": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        8970
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3881": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        8970
      ],
      "op": "AND",
      "path": "1"
    },
    "3882": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        8970
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3884": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        8970
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3885": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        8970
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3886": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        8970
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3887": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        8966
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA1"
    },
    "3889": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        8970
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3891": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        8970
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3892": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        8970
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3893": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        8970
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3894": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        8970
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3896": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        8970
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3897": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        8970
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3898": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        8970
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3899": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        8970
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3900": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        9007
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3901": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        9007
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3902": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        9007
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3903": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        9007
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3904": {
      "fn": "UFragments.transfer",
      "offset": [
        9022,
        9053
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 44
    },
    "3905": {
      "fn": "UFragments.transfer",
      "offset": [
        9022,
        9053
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3906": {
      "fn": "UFragments.transfer",
      "offset": [
        9022,
        9053
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3907": {
      "fn": "UFragments.transfer",
      "offset": [
        9022,
        9053
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3908": {
      "fn": "UFragments.transfer",
      "offset": [
        9022,
        9053
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3909": {
      "fn": "UFragments.transfer",
      "offset": [
        9022,
        9053
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3910": {
      "fn": "UFragments.transfer",
      "offset": [
        9022,
        9053
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3911": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        8970
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3912": {
      "fn": "UFragments.transfer",
      "offset": [
        8952,
        8970
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3913": {
      "fn": "UFragments.transfer",
      "offset": [
        9031,
        9041
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3914": {
      "fn": "UFragments.transfer",
      "offset": [
        9031,
        9041
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3915": {
      "fn": "UFragments.transfer",
      "offset": [
        9022,
        9053
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3948": {
      "fn": "UFragments.transfer",
      "offset": [
        9022,
        9053
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3949": {
      "fn": "UFragments.transfer",
      "offset": [
        9022,
        9053
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3950": {
      "fn": "UFragments.transfer",
      "offset": [
        9022,
        9053
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3951": {
      "fn": "UFragments.transfer",
      "offset": [
        9022,
        9053
      ],
      "op": "SUB",
      "path": "1"
    },
    "3952": {
      "fn": "UFragments.transfer",
      "offset": [
        9022,
        9053
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3953": {
      "fn": "UFragments.transfer",
      "offset": [
        9022,
        9053
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3954": {
      "fn": "UFragments.transfer",
      "offset": [
        9022,
        9053
      ],
      "op": "ADD",
      "path": "1"
    },
    "3955": {
      "fn": "UFragments.transfer",
      "offset": [
        9022,
        9053
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3956": {
      "fn": "UFragments.transfer",
      "offset": [
        9022,
        9053
      ],
      "op": "LOG3",
      "path": "1"
    },
    "3957": {
      "op": "POP"
    },
    "3958": {
      "fn": "UFragments.transfer",
      "offset": [
        9070,
        9074
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 45,
      "value": "0x1"
    },
    "3960": {
      "fn": "UFragments.transfer",
      "offset": [
        9070,
        9074
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3961": {
      "fn": "UFragments.transfer",
      "offset": [
        8715,
        9081
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3962": {
      "op": "POP"
    },
    "3963": {
      "op": "POP"
    },
    "3964": {
      "op": "POP"
    },
    "3965": {
      "op": "POP"
    },
    "3966": {
      "fn": "UFragments.transfer",
      "jump": "o",
      "offset": [
        8715,
        9081
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3967": {
      "offset": [
        2379,
        2409
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3968": {
      "fn": "UFragments.transfer",
      "offset": [
        2379,
        2409
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9C"
    },
    "3970": {
      "fn": "UFragments.transfer",
      "offset": [
        2379,
        2409
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3971": {
      "fn": "UFragments.transfer",
      "offset": [
        2379,
        2409
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3972": {
      "fn": "UFragments.transfer",
      "jump": "o",
      "offset": [
        2379,
        2409
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3973": {
      "offset": [
        3602,
        3642
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3974": {
      "fn": "UFragments.transfer",
      "offset": [
        3602,
        3642
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "3976": {
      "fn": "UFragments.transfer",
      "offset": [
        3602,
        3642
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3977": {
      "fn": "UFragments.transfer",
      "offset": [
        3602,
        3642
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3978": {
      "fn": "UFragments.transfer",
      "jump": "o",
      "offset": [
        3602,
        3642
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3979": {
      "fn": "UFragments.initialize",
      "offset": [
        6028,
        6584
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3980": {
      "offset": [
        1129,
        1149
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "3982": {
      "offset": [
        1024,
        1036
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3983": {
      "fn": "UFragments.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "3984": {
      "fn": "UFragments.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "3987": {
      "fn": "UFragments.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "3988": {
      "fn": "UFragments.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "DIV",
      "path": "15"
    },
    "3989": {
      "fn": "UFragments.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "3991": {
      "fn": "UFragments.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "AND",
      "path": "15"
    },
    "3992": {
      "fn": "UFragments.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "DUP1",
      "path": "15"
    },
    "3993": {
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFA5"
    },
    "3996": {
      "offset": [
        1024,
        1055
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "3997": {
      "fn": "UFragments.initialize",
      "offset": [
        1024,
        1055
      ],
      "op": "POP",
      "path": "15"
    },
    "3998": {
      "offset": [
        1040,
        1055
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFA5"
    },
    "4001": {
      "offset": [
        1040,
        1053
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1266"
    },
    "4004": {
      "jump": "i",
      "offset": [
        1040,
        1055
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4005": {
      "fn": "UFragments.initialize",
      "offset": [
        1040,
        1055
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4006": {
      "offset": [
        1024,
        1071
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4007": {
      "fn": "UFragments.initialize",
      "offset": [
        1024,
        1071
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xFB3"
    },
    "4010": {
      "offset": [
        1024,
        1071
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4011": {
      "op": "POP"
    },
    "4012": {
      "offset": [
        1060,
        1071
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4014": {
      "fn": "UFragments.initialize",
      "offset": [
        1060,
        1071
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4015": {
      "fn": "UFragments.initialize",
      "offset": [
        1060,
        1071
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4017": {
      "fn": "UFragments.initialize",
      "offset": [
        1060,
        1071
      ],
      "op": "AND",
      "path": "15"
    },
    "4018": {
      "offset": [
        1059,
        1071
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4019": {
      "offset": [
        1024,
        1071
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4020": {
      "offset": [
        1016,
        1122
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4021": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4022": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1046"
    },
    "4025": {
      "offset": [
        1016,
        1122
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4026": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4028": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4029": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4030": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "4063": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4064": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4065": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4067": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4069": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4070": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "ADD",
      "path": "15"
    },
    "4071": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4072": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2E"
    },
    "4074": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "4076": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4077": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "ADD",
      "path": "15"
    },
    "4078": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4079": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x436F6E747261637420696E7374616E63652068617320616C7265616479206265"
    },
    "4112": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "4114": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4115": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "ADD",
      "path": "15"
    },
    "4116": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4117": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x656E20696E697469616C697A6564000000000000000000000000000000000000"
    },
    "4150": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "4152": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4153": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "ADD",
      "path": "15"
    },
    "4154": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4155": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4156": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4157": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4158": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4159": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4160": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "SUB",
      "path": "15"
    },
    "4161": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x84"
    },
    "4163": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "ADD",
      "path": "15"
    },
    "4164": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4165": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "REVERT",
      "path": "15"
    },
    "4166": {
      "fn": "UFragments.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4167": {
      "op": "POP"
    },
    "4168": {
      "offset": [
        1152,
        1164
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4170": {
      "fn": "UFragments.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4171": {
      "fn": "UFragments.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4172": {
      "fn": "UFragments.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "4174": {
      "fn": "UFragments.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "4177": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "4180": {
      "op": "NOT"
    },
    "4181": {
      "offset": [
        1170,
        1189
      ],
      "op": "DUP4",
      "path": "15"
    },
    "4182": {
      "fn": "UFragments.initialize",
      "offset": [
        1170,
        1189
      ],
      "op": "AND",
      "path": "15"
    },
    "4183": {
      "fn": "UFragments.initialize",
      "offset": [
        1170,
        1189
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4184": {
      "fn": "UFragments.initialize",
      "offset": [
        1170,
        1189
      ],
      "op": "OR",
      "path": "15"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4187": {
      "op": "NOT"
    },
    "4188": {
      "offset": [
        1195,
        1213
      ],
      "op": "AND",
      "path": "15"
    },
    "4189": {
      "fn": "UFragments.initialize",
      "offset": [
        1195,
        1213
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4190": {
      "fn": "UFragments.initialize",
      "offset": [
        1195,
        1213
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4191": {
      "fn": "UFragments.initialize",
      "offset": [
        1195,
        1213
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4192": {
      "fn": "UFragments.initialize",
      "offset": [
        1195,
        1213
      ],
      "op": "OR",
      "path": "15"
    },
    "4193": {
      "fn": "UFragments.initialize",
      "offset": [
        1195,
        1213
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4194": {
      "fn": "UFragments.initialize",
      "offset": [
        1195,
        1213
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4195": {
      "fn": "UFragments.initialize",
      "offset": [
        1195,
        1213
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4196": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 46,
      "value": "0x40"
    },
    "4198": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4199": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4200": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4201": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4202": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "ADD",
      "path": "1"
    },
    "4203": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4204": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4205": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4207": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4208": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4209": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4210": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x4469676700000000000000000000000000000000000000000000000000000000"
    },
    "4243": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4245": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4246": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4247": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "ADD",
      "path": "1"
    },
    "4248": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4249": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4250": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4251": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4252": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4253": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4254": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4255": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4256": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "ADD",
      "path": "1"
    },
    "4257": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4258": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "4259": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4260": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4261": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4262": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4263": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x4449474700000000000000000000000000000000000000000000000000000000"
    },
    "4296": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4297": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4298": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "ADD",
      "path": "1"
    },
    "4299": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4300": {
      "offset": [
        1152,
        1164
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4301": {
      "fn": "UFragments.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4302": {
      "fn": "UFragments.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4303": {
      "fn": "UFragments.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "DIV",
      "path": "15"
    },
    "4304": {
      "fn": "UFragments.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4306": {
      "fn": "UFragments.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "AND",
      "path": "15"
    },
    "4307": {
      "fn": "UFragments.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4308": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10DE"
    },
    "4311": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4312": {
      "offset": [
        2867,
        2868
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "4314": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6117
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6FE"
    },
    "4317": {
      "fn": "UFragments.initialize",
      "jump": "i",
      "offset": [
        6093,
        6150
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4318": {
      "fn": "UFragments.initialize",
      "offset": [
        6093,
        6150
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4319": {
      "fn": "UFragments.initialize",
      "offset": [
        6160,
        6186
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 47,
      "value": "0x10E7"
    },
    "4322": {
      "fn": "UFragments.initialize",
      "offset": [
        6179,
        6185
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4323": {
      "fn": "UFragments.initialize",
      "offset": [
        6160,
        6178
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1300"
    },
    "4326": {
      "fn": "UFragments.initialize",
      "jump": "i",
      "offset": [
        6160,
        6186
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4327": {
      "fn": "UFragments.initialize",
      "offset": [
        6160,
        6186
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4328": {
      "fn": "UFragments.initialize",
      "offset": [
        6215,
        6216
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 48,
      "value": "0x0"
    },
    "4330": {
      "fn": "UFragments.initialize",
      "offset": [
        6197,
        6212
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9C"
    },
    "4332": {
      "fn": "UFragments.initialize",
      "offset": [
        6197,
        6216
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4333": {
      "fn": "UFragments.initialize",
      "offset": [
        6197,
        6216
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4334": {
      "fn": "UFragments.initialize",
      "offset": [
        6197,
        6216
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4335": {
      "fn": "UFragments.initialize",
      "offset": [
        6226,
        6248
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 49,
      "value": "0x9D"
    },
    "4337": {
      "fn": "UFragments.initialize",
      "offset": [
        6226,
        6256
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4338": {
      "fn": "UFragments.initialize",
      "offset": [
        6226,
        6256
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4339": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "4342": {
      "op": "NOT"
    },
    "4343": {
      "fn": "UFragments.initialize",
      "offset": [
        6266,
        6295
      ],
      "op": "AND",
      "path": "1",
      "statement": 50
    },
    "4344": {
      "fn": "UFragments.initialize",
      "offset": [
        6266,
        6295
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4345": {
      "fn": "UFragments.initialize",
      "offset": [
        6266,
        6295
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4346": {
      "offset": [
        3097,
        3116
      ],
      "op": "PUSH6",
      "path": "1",
      "value": "0x3A352944000"
    },
    "4353": {
      "fn": "UFragments.initialize",
      "offset": [
        6306,
        6318
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 51,
      "value": "0x9E"
    },
    "4355": {
      "fn": "UFragments.initialize",
      "offset": [
        6306,
        6341
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4356": {
      "fn": "UFragments.initialize",
      "offset": [
        6306,
        6341
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4357": {
      "fn": "UFragments.initialize",
      "offset": [
        6306,
        6341
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4362": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4364": {
      "op": "EXP"
    },
    "4365": {
      "op": "SUB"
    },
    "4366": {
      "fn": "UFragments.initialize",
      "offset": [
        6351,
        6373
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 52
    },
    "4367": {
      "fn": "UFragments.initialize",
      "offset": [
        6351,
        6373
      ],
      "op": "AND",
      "path": "1"
    },
    "4368": {
      "fn": "UFragments.initialize",
      "offset": [
        6351,
        6373
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4369": {
      "fn": "UFragments.initialize",
      "offset": [
        6351,
        6373
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4370": {
      "fn": "UFragments.initialize",
      "offset": [
        6351,
        6365
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA1"
    },
    "4372": {
      "fn": "UFragments.initialize",
      "offset": [
        6351,
        6373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4374": {
      "fn": "UFragments.initialize",
      "offset": [
        6351,
        6373
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4375": {
      "fn": "UFragments.initialize",
      "offset": [
        6351,
        6373
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4377": {
      "fn": "UFragments.initialize",
      "offset": [
        6351,
        6373
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4378": {
      "fn": "UFragments.initialize",
      "offset": [
        6351,
        6373
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4379": {
      "fn": "UFragments.initialize",
      "offset": [
        6351,
        6373
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4380": {
      "op": "PUSH6",
      "value": "0x38F18B3BFFF"
    },
    "4387": {
      "op": "NOT"
    },
    "4388": {
      "fn": "UFragments.initialize",
      "offset": [
        6351,
        6388
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4389": {
      "fn": "UFragments.initialize",
      "offset": [
        6351,
        6388
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4390": {
      "fn": "UFragments.initialize",
      "offset": [
        6436,
        6448
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 53
    },
    "4391": {
      "fn": "UFragments.initialize",
      "offset": [
        6436,
        6448
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4392": {
      "fn": "UFragments.initialize",
      "offset": [
        6419,
        6449
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1133"
    },
    "4395": {
      "fn": "UFragments.initialize",
      "offset": [
        6419,
        6449
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4398": {
      "op": "NOT"
    },
    "4399": {
      "offset": [
        3358,
        3392
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC3C"
    },
    "4402": {
      "fn": "UFragments.initialize",
      "offset": [
        3358,
        3392
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4403": {
      "fn": "UFragments.initialize",
      "offset": [
        6419,
        6449
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4404": {
      "fn": "UFragments.initialize",
      "offset": [
        6398,
        6416
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9F"
    },
    "4406": {
      "fn": "UFragments.initialize",
      "offset": [
        6398,
        6449
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4407": {
      "fn": "UFragments.initialize",
      "offset": [
        6504,
        6516
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 54,
      "value": "0x9E"
    },
    "4409": {
      "fn": "UFragments.initialize",
      "offset": [
        6504,
        6516
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4410": {
      "fn": "UFragments.initialize",
      "offset": [
        6487,
        6517
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x114C"
    },
    "4413": {
      "fn": "UFragments.initialize",
      "offset": [
        6487,
        6517
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4414": {
      "offset": [
        3097,
        3116
      ],
      "op": "PUSH6",
      "path": "1",
      "value": "0x3A352944000"
    },
    "4421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4423": {
      "op": "NOT"
    },
    "4424": {
      "offset": [
        3358,
        3392
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC3C"
    },
    "4427": {
      "fn": "UFragments.initialize",
      "offset": [
        3358,
        3392
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4428": {
      "fn": "UFragments.initialize",
      "offset": [
        6487,
        6517
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4429": {
      "fn": "UFragments.initialize",
      "offset": [
        6459,
        6484
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "4431": {
      "fn": "UFragments.initialize",
      "offset": [
        6459,
        6517
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4432": {
      "fn": "UFragments.initialize",
      "offset": [
        6564,
        6576
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 55,
      "value": "0x9E"
    },
    "4434": {
      "fn": "UFragments.initialize",
      "offset": [
        6564,
        6576
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4435": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4437": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4438": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4439": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4440": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4441": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4442": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4447": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4449": {
      "op": "EXP"
    },
    "4450": {
      "op": "SUB"
    },
    "4451": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4452": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "AND",
      "path": "1"
    },
    "4453": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4454": {
      "fn": "UFragments.initialize",
      "offset": [
        6550,
        6553
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4456": {
      "fn": "UFragments.initialize",
      "offset": [
        6550,
        6553
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4457": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4490": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4491": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4492": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4493": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "SUB",
      "path": "1"
    },
    "4494": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4496": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "ADD",
      "path": "1"
    },
    "4497": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4498": {
      "fn": "UFragments.initialize",
      "offset": [
        6533,
        6577
      ],
      "op": "LOG3",
      "path": "1"
    },
    "4499": {
      "offset": [
        1228,
        1240
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4501": {
      "offset": [
        1228,
        1258
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4502": {
      "fn": "UFragments.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4503": {
      "fn": "UFragments.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4504": {
      "fn": "UFragments.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4505": {
      "fn": "UFragments.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4506": {
      "fn": "UFragments.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "4509": {
      "fn": "UFragments.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "MUL",
      "path": "15"
    },
    "4510": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "4513": {
      "op": "NOT"
    },
    "4514": {
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4515": {
      "fn": "UFragments.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "4516": {
      "fn": "UFragments.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "AND",
      "path": "15"
    },
    "4517": {
      "fn": "UFragments.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4518": {
      "fn": "UFragments.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4519": {
      "fn": "UFragments.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "4520": {
      "fn": "UFragments.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "OR",
      "path": "15"
    },
    "4521": {
      "fn": "UFragments.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4522": {
      "fn": "UFragments.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "4523": {
      "op": "POP"
    },
    "4524": {
      "fn": "UFragments.initialize",
      "jump": "o",
      "offset": [
        6028,
        6584
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4525": {
      "fn": "UFragments.allowance",
      "offset": [
        9380,
        9520
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4528": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4530": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4532": {
      "op": "EXP"
    },
    "4533": {
      "op": "SUB"
    },
    "4534": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9504
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 56
    },
    "4535": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9504
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4536": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9504
      ],
      "op": "AND",
      "path": "1"
    },
    "4537": {
      "fn": "UFragments.allowance",
      "offset": [
        9453,
        9460
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4539": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9504
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4540": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9504
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4541": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9504
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4542": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA2"
    },
    "4544": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4546": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9504
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4547": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9504
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4548": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9504
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4549": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4551": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4552": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9504
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4553": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9504
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4554": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9513
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "4555": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9513
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4556": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9513
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "4557": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9513
      ],
      "op": "AND",
      "path": "1"
    },
    "4558": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9513
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4559": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9513
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4560": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9513
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4561": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9513
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4562": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9513
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4563": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9513
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4564": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9513
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4565": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9513
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4566": {
      "fn": "UFragments.allowance",
      "offset": [
        9479,
        9513
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4567": {
      "fn": "UFragments.allowance",
      "jump": "o",
      "offset": [
        9380,
        9520
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4568": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1654,
        1755
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4569": {
      "offset": [
        931,
        940
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11E0"
    },
    "4572": {
      "offset": [
        931,
        938
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD24"
    },
    "4575": {
      "jump": "i",
      "offset": [
        931,
        940
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4576": {
      "branch": 84,
      "fn": "Ownable.transferOwnership",
      "offset": [
        931,
        940
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4577": {
      "offset": [
        923,
        941
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4578": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        923,
        941
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4579": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        923,
        941
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11EB"
    },
    "4582": {
      "branch": 84,
      "offset": [
        923,
        941
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4583": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        923,
        941
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4585": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        923,
        941
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4586": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        923,
        941
      ],
      "op": "REVERT",
      "path": "10"
    },
    "4587": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        923,
        941
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4588": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1722,
        1750
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 57,
      "value": "0x11F4"
    },
    "4591": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1741,
        1749
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4592": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1722,
        1740
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1417"
    },
    "4595": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1722,
        1750
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4596": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1722,
        1750
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4597": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1654,
        1755
      ],
      "op": "POP",
      "path": "10"
    },
    "4598": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1654,
        1755
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4599": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7275,
        7379
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4604": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4606": {
      "op": "EXP"
    },
    "4607": {
      "op": "SUB"
    },
    "4608": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7353,
        7372
      ],
      "op": "AND",
      "path": "1",
      "statement": 58
    },
    "4609": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7327,
        7334
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4611": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7353,
        7372
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4612": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7353,
        7372
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4613": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7353,
        7372
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4614": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7353,
        7367
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA1"
    },
    "4616": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7353,
        7372
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4618": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7353,
        7372
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4619": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7353,
        7372
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4621": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7353,
        7372
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4622": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7353,
        7372
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4623": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7353,
        7372
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4624": {
      "fn": "UFragments.sharesOf",
      "offset": [
        7353,
        7372
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4625": {
      "fn": "UFragments.sharesOf",
      "jump": "o",
      "offset": [
        7275,
        7379
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4626": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8076,
        8257
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4627": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8146,
        8153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4629": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8172,
        8250
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 59,
      "value": "0x6F6"
    },
    "4632": {
      "offset": [
        2930,
        2931
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "4634": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8217,
        8219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "4636": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8217,
        8249
      ],
      "op": "EXP",
      "path": "1"
    },
    "4637": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8172,
        8212
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAA3"
    },
    "4640": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8186,
        8211
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "4642": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8186,
        8211
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4643": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8172,
        8181
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4644": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8172,
        8185
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1231"
    },
    "4647": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8172,
        8185
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4648": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8172,
        8212
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4649": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8172,
        8212
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4650": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8172,
        8212
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "4655": {
      "fn": "UFragments.scaledSharesToShares",
      "offset": [
        8172,
        8212
      ],
      "op": "AND",
      "path": "1"
    },
    "4656": {
      "fn": "UFragments.scaledSharesToShares",
      "jump": "i",
      "offset": [
        8172,
        8212
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4657": {
      "fn": "SafeMath.mul",
      "offset": [
        205,
        586
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4658": {
      "fn": "SafeMath.mul",
      "offset": [
        263,
        270
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4660": {
      "fn": "SafeMath.mul",
      "offset": [
        263,
        270
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4661": {
      "fn": "SafeMath.mul",
      "offset": [
        487,
        493
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4662": {
      "branch": 86,
      "fn": "SafeMath.mul",
      "offset": [
        487,
        493
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4663": {
      "fn": "SafeMath.mul",
      "offset": [
        483,
        518
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4664": {
      "fn": "SafeMath.mul",
      "offset": [
        483,
        518
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1244"
    },
    "4667": {
      "branch": 86,
      "fn": "SafeMath.mul",
      "offset": [
        483,
        518
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4668": {
      "fn": "SafeMath.mul",
      "offset": [
        510,
        511
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 60,
      "value": "0x0"
    },
    "4670": {
      "fn": "SafeMath.mul",
      "offset": [
        503,
        511
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4671": {
      "fn": "SafeMath.mul",
      "offset": [
        503,
        511
      ],
      "op": "POP",
      "path": "9"
    },
    "4672": {
      "fn": "SafeMath.mul",
      "offset": [
        503,
        511
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0xE80"
    },
    "4675": {
      "fn": "SafeMath.mul",
      "offset": [
        503,
        511
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4676": {
      "fn": "SafeMath.mul",
      "offset": [
        483,
        518
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4677": {
      "op": "POP"
    },
    "4678": {
      "fn": "SafeMath.mul",
      "offset": [
        536,
        541
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4679": {
      "fn": "SafeMath.mul",
      "offset": [
        536,
        541
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4680": {
      "fn": "SafeMath.mul",
      "offset": [
        536,
        541
      ],
      "op": "MUL",
      "path": "9"
    },
    "4681": {
      "fn": "SafeMath.mul",
      "offset": [
        540,
        541
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4682": {
      "fn": "SafeMath.mul",
      "offset": [
        536,
        537
      ],
      "op": "DUP5",
      "path": "9"
    },
    "4683": {
      "fn": "SafeMath.mul",
      "offset": [
        536,
        541
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4684": {
      "fn": "SafeMath.mul",
      "offset": [
        555,
        560
      ],
      "op": "DUP2",
      "path": "9",
      "statement": 61
    },
    "4685": {
      "fn": "SafeMath.mul",
      "offset": [
        555,
        560
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4686": {
      "fn": "SafeMath.mul",
      "offset": [
        555,
        560
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4687": {
      "fn": "SafeMath.mul",
      "offset": [
        555,
        560
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1254"
    },
    "4690": {
      "fn": "SafeMath.mul",
      "offset": [
        555,
        560
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4691": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        555,
        560
      ],
      "op": "INVALID",
      "path": "9"
    },
    "4692": {
      "fn": "SafeMath.mul",
      "offset": [
        555,
        560
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4693": {
      "fn": "SafeMath.mul",
      "offset": [
        555,
        560
      ],
      "op": "DIV",
      "path": "9"
    },
    "4694": {
      "branch": 87,
      "fn": "SafeMath.mul",
      "offset": [
        555,
        565
      ],
      "op": "EQ",
      "path": "9"
    },
    "4695": {
      "fn": "SafeMath.mul",
      "offset": [
        547,
        566
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x125F"
    },
    "4698": {
      "branch": 87,
      "fn": "SafeMath.mul",
      "offset": [
        547,
        566
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4699": {
      "fn": "SafeMath.mul",
      "offset": [
        547,
        566
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4701": {
      "fn": "SafeMath.mul",
      "offset": [
        547,
        566
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4702": {
      "fn": "SafeMath.mul",
      "offset": [
        547,
        566
      ],
      "op": "REVERT",
      "path": "9"
    },
    "4703": {
      "fn": "SafeMath.mul",
      "offset": [
        547,
        566
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4704": {
      "fn": "SafeMath.mul",
      "offset": [
        580,
        581
      ],
      "op": "SWAP4",
      "path": "9",
      "statement": 62
    },
    "4705": {
      "fn": "SafeMath.mul",
      "offset": [
        205,
        586
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4706": {
      "op": "POP"
    },
    "4707": {
      "op": "POP"
    },
    "4708": {
      "op": "POP"
    },
    "4709": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        205,
        586
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4710": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1349,
        1816
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4711": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1782,
        1789
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "4712": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1770,
        1790
      ],
      "op": "EXTCODESIZE",
      "path": "15"
    },
    "4713": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1804,
        1811
      ],
      "op": "DUP1",
      "path": "15",
      "statement": 63
    },
    "4714": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1804,
        1811
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4715": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1804,
        1811
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4716": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1349,
        1816
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4717": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1349,
        1816
      ],
      "op": "POP",
      "path": "15"
    },
    "4718": {
      "fn": "Initializable.isConstructor",
      "offset": [
        1349,
        1816
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4719": {
      "fn": "Initializable.isConstructor",
      "jump": "o",
      "offset": [
        1349,
        1816
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4720": {
      "fn": "SafeMath.sub",
      "offset": [
        1079,
        1210
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4721": {
      "fn": "SafeMath.sub",
      "offset": [
        1137,
        1144
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4723": {
      "fn": "SafeMath.sub",
      "offset": [
        1137,
        1144
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4724": {
      "fn": "SafeMath.sub",
      "offset": [
        1160,
        1166
      ],
      "op": "DUP4",
      "path": "9",
      "statement": 64
    },
    "4725": {
      "fn": "SafeMath.sub",
      "offset": [
        1160,
        1166
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4726": {
      "fn": "SafeMath.sub",
      "offset": [
        1160,
        1166
      ],
      "op": "GT",
      "path": "9"
    },
    "4727": {
      "branch": 88,
      "fn": "SafeMath.sub",
      "offset": [
        1160,
        1166
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4728": {
      "fn": "SafeMath.sub",
      "offset": [
        1152,
        1167
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1280"
    },
    "4731": {
      "branch": 88,
      "fn": "SafeMath.sub",
      "offset": [
        1152,
        1167
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4732": {
      "fn": "SafeMath.sub",
      "offset": [
        1152,
        1167
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4734": {
      "fn": "SafeMath.sub",
      "offset": [
        1152,
        1167
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4735": {
      "fn": "SafeMath.sub",
      "offset": [
        1152,
        1167
      ],
      "op": "REVERT",
      "path": "9"
    },
    "4736": {
      "fn": "SafeMath.sub",
      "offset": [
        1152,
        1167
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4737": {
      "op": "POP"
    },
    "4738": {
      "op": "POP"
    },
    "4739": {
      "fn": "SafeMath.sub",
      "offset": [
        1185,
        1190
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4740": {
      "fn": "SafeMath.sub",
      "offset": [
        1185,
        1190
      ],
      "op": "SUB",
      "path": "9"
    },
    "4741": {
      "fn": "SafeMath.sub",
      "offset": [
        1185,
        1190
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4742": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1079,
        1210
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4743": {
      "fn": "SafeMath.add",
      "offset": [
        1273,
        1404
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4744": {
      "fn": "SafeMath.add",
      "offset": [
        1331,
        1338
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4746": {
      "fn": "SafeMath.add",
      "offset": [
        1358,
        1363
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4747": {
      "fn": "SafeMath.add",
      "offset": [
        1358,
        1363
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4748": {
      "fn": "SafeMath.add",
      "offset": [
        1358,
        1363
      ],
      "op": "ADD",
      "path": "9"
    },
    "4749": {
      "fn": "SafeMath.add",
      "offset": [
        1377,
        1383
      ],
      "op": "DUP4",
      "path": "9",
      "statement": 65
    },
    "4750": {
      "fn": "SafeMath.add",
      "offset": [
        1377,
        1383
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4751": {
      "fn": "SafeMath.add",
      "offset": [
        1377,
        1383
      ],
      "op": "LT",
      "path": "9"
    },
    "4752": {
      "branch": 89,
      "fn": "SafeMath.add",
      "offset": [
        1377,
        1383
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4753": {
      "fn": "SafeMath.add",
      "offset": [
        1369,
        1384
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x125F"
    },
    "4756": {
      "branch": 89,
      "fn": "SafeMath.add",
      "offset": [
        1369,
        1384
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4757": {
      "fn": "SafeMath.add",
      "offset": [
        1369,
        1384
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4759": {
      "fn": "SafeMath.add",
      "offset": [
        1369,
        1384
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4760": {
      "fn": "SafeMath.add",
      "offset": [
        1369,
        1384
      ],
      "op": "REVERT",
      "path": "9"
    },
    "4761": {
      "fn": "SafeMath.div",
      "offset": [
        696,
        966
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4762": {
      "fn": "SafeMath.div",
      "offset": [
        754,
        761
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4764": {
      "fn": "SafeMath.div",
      "offset": [
        754,
        761
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4765": {
      "fn": "SafeMath.div",
      "offset": [
        777,
        782
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 66
    },
    "4766": {
      "fn": "SafeMath.div",
      "offset": [
        777,
        782
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4767": {
      "branch": 90,
      "fn": "SafeMath.div",
      "offset": [
        777,
        782
      ],
      "op": "GT",
      "path": "9"
    },
    "4768": {
      "fn": "SafeMath.div",
      "offset": [
        769,
        783
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x12A8"
    },
    "4771": {
      "branch": 90,
      "fn": "SafeMath.div",
      "offset": [
        769,
        783
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4772": {
      "fn": "SafeMath.div",
      "offset": [
        769,
        783
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4774": {
      "fn": "SafeMath.div",
      "offset": [
        769,
        783
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4775": {
      "fn": "SafeMath.div",
      "offset": [
        769,
        783
      ],
      "op": "REVERT",
      "path": "9"
    },
    "4776": {
      "fn": "SafeMath.div",
      "offset": [
        769,
        783
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4777": {
      "fn": "SafeMath.div",
      "offset": [
        863,
        864
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4778": {
      "fn": "SafeMath.div",
      "offset": [
        859,
        860
      ],
      "op": "DUP5",
      "path": "9"
    },
    "4779": {
      "fn": "SafeMath.div",
      "offset": [
        859,
        864
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4780": {
      "fn": "SafeMath.div",
      "offset": [
        859,
        864
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4781": {
      "fn": "SafeMath.div",
      "offset": [
        859,
        864
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4782": {
      "fn": "SafeMath.div",
      "offset": [
        859,
        864
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x12B3"
    },
    "4785": {
      "fn": "SafeMath.div",
      "offset": [
        859,
        864
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4786": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        859,
        864
      ],
      "op": "INVALID",
      "path": "9"
    },
    "4787": {
      "fn": "SafeMath.div",
      "offset": [
        859,
        864
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4788": {
      "fn": "SafeMath.div",
      "offset": [
        859,
        864
      ],
      "op": "DIV",
      "path": "9"
    },
    "4789": {
      "fn": "SafeMath.div",
      "offset": [
        859,
        864
      ],
      "op": "SWAP5",
      "path": "9"
    },
    "4790": {
      "fn": "SafeMath.div",
      "offset": [
        696,
        966
      ],
      "op": "SWAP4",
      "path": "9"
    },
    "4791": {
      "op": "POP"
    },
    "4792": {
      "op": "POP"
    },
    "4793": {
      "op": "POP"
    },
    "4794": {
      "op": "POP"
    },
    "4795": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        696,
        966
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4796": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2815,
        2969
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4797": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2885,
        2891
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4799": {
      "offset": [
        1296,
        1312
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8000000000000000000000000000000000000000000000000000000000000000"
    },
    "4832": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2915,
        2930
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 67
    },
    "4833": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2915,
        2930
      ],
      "op": "EQ",
      "path": "3"
    },
    "4834": {
      "branch": 91,
      "fn": "SafeMathInt.abs",
      "offset": [
        2915,
        2930
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4835": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2907,
        2931
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12EB"
    },
    "4838": {
      "branch": 91,
      "fn": "SafeMathInt.abs",
      "offset": [
        2907,
        2931
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4839": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2907,
        2931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4841": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2907,
        2931
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4842": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2907,
        2931
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4843": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2907,
        2931
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4844": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2952,
        2953
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 68,
      "value": "0x0"
    },
    "4846": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2948,
        2949
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4847": {
      "branch": 92,
      "fn": "SafeMathInt.abs",
      "offset": [
        2948,
        2953
      ],
      "op": "SLT",
      "path": "3"
    },
    "4848": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2948,
        2962
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12F9"
    },
    "4851": {
      "branch": 92,
      "fn": "SafeMathInt.abs",
      "offset": [
        2948,
        2962
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4852": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2961,
        2962
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4853": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2948,
        2962
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F6"
    },
    "4856": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2948,
        2962
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4857": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2948,
        2962
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4858": {
      "op": "POP"
    },
    "4859": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2956,
        2958
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4861": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2956,
        2958
      ],
      "op": "SUB",
      "path": "3"
    },
    "4862": {
      "fn": "SafeMathInt.abs",
      "offset": [
        2956,
        2958
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4863": {
      "fn": "SafeMathInt.abs",
      "jump": "o",
      "offset": [
        2815,
        2969
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4864": {
      "fn": "Ownable.initialize",
      "offset": [
        610,
        691
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4865": {
      "offset": [
        1129,
        1149
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4867": {
      "offset": [
        1024,
        1036
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4868": {
      "fn": "Ownable.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4869": {
      "fn": "Ownable.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "4872": {
      "fn": "Ownable.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "4873": {
      "fn": "Ownable.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "DIV",
      "path": "15"
    },
    "4874": {
      "fn": "Ownable.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4876": {
      "fn": "Ownable.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "AND",
      "path": "15"
    },
    "4877": {
      "branch": 81,
      "fn": "Ownable.initialize",
      "offset": [
        1024,
        1036
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4878": {
      "offset": [
        1024,
        1055
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x131A"
    },
    "4881": {
      "branch": 81,
      "offset": [
        1024,
        1055
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4882": {
      "fn": "Ownable.initialize",
      "offset": [
        1024,
        1055
      ],
      "op": "POP",
      "path": "15"
    },
    "4883": {
      "offset": [
        1040,
        1055
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x131A"
    },
    "4886": {
      "offset": [
        1040,
        1053
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1266"
    },
    "4889": {
      "jump": "i",
      "offset": [
        1040,
        1055
      ],
      "op": "JUMP",
      "path": "15"
    },
    "4890": {
      "branch": 82,
      "fn": "Ownable.initialize",
      "offset": [
        1040,
        1055
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4891": {
      "offset": [
        1024,
        1071
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4892": {
      "fn": "Ownable.initialize",
      "offset": [
        1024,
        1071
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x1328"
    },
    "4895": {
      "branch": 82,
      "offset": [
        1024,
        1071
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4896": {
      "op": "POP"
    },
    "4897": {
      "offset": [
        1060,
        1071
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "4899": {
      "fn": "Ownable.initialize",
      "offset": [
        1060,
        1071
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "4900": {
      "fn": "Ownable.initialize",
      "offset": [
        1060,
        1071
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "4902": {
      "branch": 83,
      "fn": "Ownable.initialize",
      "offset": [
        1060,
        1071
      ],
      "op": "AND",
      "path": "15"
    },
    "4903": {
      "offset": [
        1059,
        1071
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4904": {
      "offset": [
        1024,
        1071
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "4905": {
      "offset": [
        1016,
        1122
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4906": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "4907": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x13BB"
    },
    "4910": {
      "branch": 83,
      "offset": [
        1016,
        1122
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "4911": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "4913": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP1",
      "path": "15"
    },
    "4914": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "4915": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "4948": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP2",
      "path": "15"
    },
    "4949": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4950": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "4952": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "4954": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4955": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "ADD",
      "path": "15"
    },
    "4956": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4957": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x2E"
    },
    "4959": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "4961": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP3",
      "path": "15"
    },
    "4962": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "ADD",
      "path": "15"
    },
    "4963": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "4964": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x436F6E747261637420696E7374616E63652068617320616C7265616479206265"
    },
    "4997": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x44"
    },
    "4999": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5000": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "ADD",
      "path": "15"
    },
    "5001": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5002": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x656E20696E697469616C697A6564000000000000000000000000000000000000"
    },
    "5035": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x64"
    },
    "5037": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP3",
      "path": "15"
    },
    "5038": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "ADD",
      "path": "15"
    },
    "5039": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "5040": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5041": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "5042": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5043": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5044": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5045": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "SUB",
      "path": "15"
    },
    "5046": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x84"
    },
    "5048": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "ADD",
      "path": "15"
    },
    "5049": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5050": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "REVERT",
      "path": "15"
    },
    "5051": {
      "fn": "Ownable.initialize",
      "offset": [
        1016,
        1122
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "5052": {
      "op": "POP"
    },
    "5053": {
      "offset": [
        1152,
        1164
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "5055": {
      "fn": "Ownable.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5056": {
      "fn": "Ownable.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "5057": {
      "fn": "Ownable.initialize",
      "offset": [
        671,
        677
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 69,
      "value": "0x68"
    },
    "5059": {
      "fn": "Ownable.initialize",
      "offset": [
        671,
        686
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5060": {
      "fn": "Ownable.initialize",
      "offset": [
        671,
        686
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5061": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "5082": {
      "op": "NOT"
    },
    "5083": {
      "fn": "Ownable.initialize",
      "offset": [
        671,
        686
      ],
      "op": "AND",
      "path": "10"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5086": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5088": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5090": {
      "op": "EXP"
    },
    "5091": {
      "op": "SUB"
    },
    "5092": {
      "fn": "Ownable.initialize",
      "offset": [
        671,
        686
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "5093": {
      "fn": "Ownable.initialize",
      "offset": [
        671,
        686
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5094": {
      "fn": "Ownable.initialize",
      "offset": [
        671,
        686
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "5095": {
      "fn": "Ownable.initialize",
      "offset": [
        671,
        686
      ],
      "op": "AND",
      "path": "10"
    },
    "5096": {
      "fn": "Ownable.initialize",
      "offset": [
        671,
        686
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "5097": {
      "fn": "Ownable.initialize",
      "offset": [
        671,
        686
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5098": {
      "fn": "Ownable.initialize",
      "offset": [
        671,
        686
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "5099": {
      "fn": "Ownable.initialize",
      "offset": [
        671,
        686
      ],
      "op": "OR",
      "path": "10"
    },
    "5100": {
      "fn": "Ownable.initialize",
      "offset": [
        671,
        686
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5101": {
      "fn": "Ownable.initialize",
      "offset": [
        671,
        686
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5102": {
      "fn": "Ownable.initialize",
      "offset": [
        671,
        686
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5103": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "5106": {
      "op": "NOT"
    },
    "5107": {
      "offset": [
        1170,
        1189
      ],
      "op": "DUP1",
      "path": "15"
    },
    "5108": {
      "fn": "Ownable.initialize",
      "offset": [
        1170,
        1189
      ],
      "op": "DUP4",
      "path": "15"
    },
    "5109": {
      "fn": "Ownable.initialize",
      "offset": [
        1170,
        1189
      ],
      "op": "AND",
      "path": "15"
    },
    "5110": {
      "offset": [
        1152,
        1164
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x100"
    },
    "5113": {
      "offset": [
        1170,
        1189
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5114": {
      "fn": "Ownable.initialize",
      "offset": [
        1170,
        1189
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5115": {
      "fn": "Ownable.initialize",
      "offset": [
        1170,
        1189
      ],
      "op": "OR",
      "path": "15"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5118": {
      "op": "NOT"
    },
    "5119": {
      "offset": [
        1195,
        1213
      ],
      "op": "AND",
      "path": "15"
    },
    "5120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5122": {
      "offset": [
        1195,
        1213
      ],
      "op": "OR",
      "path": "15"
    },
    "5123": {
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5124": {
      "fn": "Ownable.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5125": {
      "fn": "Ownable.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "AND",
      "path": "15"
    },
    "5126": {
      "offset": [
        1152,
        1164
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "5127": {
      "fn": "Ownable.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "DUP2",
      "path": "15"
    },
    "5128": {
      "fn": "Ownable.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5129": {
      "fn": "Ownable.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "DIV",
      "path": "15"
    },
    "5130": {
      "fn": "Ownable.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0xFF"
    },
    "5132": {
      "fn": "Ownable.initialize",
      "offset": [
        1152,
        1164
      ],
      "op": "AND",
      "path": "15"
    },
    "5133": {
      "offset": [
        1228,
        1258
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5134": {
      "fn": "Ownable.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "5135": {
      "fn": "Ownable.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "MUL",
      "path": "15"
    },
    "5136": {
      "fn": "Ownable.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5137": {
      "fn": "Ownable.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5138": {
      "fn": "Ownable.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "5139": {
      "fn": "Ownable.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "OR",
      "path": "15"
    },
    "5140": {
      "fn": "Ownable.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "5141": {
      "fn": "Ownable.initialize",
      "offset": [
        1228,
        1258
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "5142": {
      "fn": "Ownable.initialize",
      "jump": "o",
      "offset": [
        610,
        691
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5143": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1889,
        2058
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5148": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5150": {
      "op": "EXP"
    },
    "5151": {
      "op": "SUB"
    },
    "5152": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1958,
        1980
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 70
    },
    "5153": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1958,
        1980
      ],
      "op": "AND",
      "path": "10"
    },
    "5154": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1958,
        1980
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5155": {
      "branch": 85,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1958,
        1980
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5156": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1950,
        1981
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x142C"
    },
    "5159": {
      "branch": 85,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1950,
        1981
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5160": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1950,
        1981
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5162": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1950,
        1981
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5163": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1950,
        1981
      ],
      "op": "REVERT",
      "path": "10"
    },
    "5164": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1950,
        1981
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5165": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2019
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 71,
      "value": "0x68"
    },
    "5167": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2019
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5168": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1992,
        2030
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5170": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1992,
        2030
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5177": {
      "op": "EXP"
    },
    "5178": {
      "op": "SUB"
    },
    "5179": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1992,
        2030
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5180": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1992,
        2030
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5181": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1992,
        2030
      ],
      "op": "AND",
      "path": "10"
    },
    "5182": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1992,
        2030
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5183": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2019
      ],
      "op": "AND",
      "path": "10"
    },
    "5184": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2019
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5185": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1992,
        2030
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "5218": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1992,
        2030
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5219": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2019
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5221": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2013,
        2019
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5222": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1992,
        2030
      ],
      "op": "LOG3",
      "path": "10"
    },
    "5223": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2036,
        2042
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 72,
      "value": "0x68"
    },
    "5225": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2036,
        2053
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5226": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2036,
        2053
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "5227": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "5248": {
      "op": "NOT"
    },
    "5249": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2036,
        2053
      ],
      "op": "AND",
      "path": "10"
    },
    "5250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5256": {
      "op": "EXP"
    },
    "5257": {
      "op": "SUB"
    },
    "5258": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2036,
        2053
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5259": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2036,
        2053
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5260": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2036,
        2053
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5261": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2036,
        2053
      ],
      "op": "AND",
      "path": "10"
    },
    "5262": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2036,
        2053
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5263": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2036,
        2053
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5264": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2036,
        2053
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5265": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2036,
        2053
      ],
      "op": "OR",
      "path": "10"
    },
    "5266": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2036,
        2053
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5267": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2036,
        2053
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "5268": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        1889,
        2058
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5269": {
      "offset": [
        835,
        12504
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5270": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5271": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5272": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5273": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5275": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5276": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5278": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "AND",
      "path": "1"
    },
    "5279": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5280": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "5283": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "MUL",
      "path": "1"
    },
    "5284": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "SUB",
      "path": "1"
    },
    "5285": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "AND",
      "path": "1"
    },
    "5286": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "5288": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5289": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DIV",
      "path": "1"
    },
    "5290": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5291": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5293": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5294": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5296": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5298": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5299": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5300": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5302": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "ADD",
      "path": "1"
    },
    "5303": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5305": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5306": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DIV",
      "path": "1"
    },
    "5307": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5308": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "ADD",
      "path": "1"
    },
    "5309": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5310": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5311": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "5313": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "LT",
      "path": "1"
    },
    "5314": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14D6"
    },
    "5317": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5318": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5319": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5320": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "5322": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "NOT",
      "path": "1"
    },
    "5323": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "AND",
      "path": "1"
    },
    "5324": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5325": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5326": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "ADD",
      "path": "1"
    },
    "5327": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "OR",
      "path": "1"
    },
    "5328": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5329": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5330": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1503"
    },
    "5333": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5334": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5335": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5336": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5337": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "ADD",
      "path": "1"
    },
    "5338": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5340": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "ADD",
      "path": "1"
    },
    "5341": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5342": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5343": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5344": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5345": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1503"
    },
    "5348": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5349": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5350": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5351": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "ADD",
      "path": "1"
    },
    "5352": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5353": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5354": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5355": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "GT",
      "path": "1"
    },
    "5356": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5357": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1503"
    },
    "5360": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5361": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5362": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5363": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5364": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5365": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5366": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5368": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "ADD",
      "path": "1"
    },
    "5369": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5370": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5371": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5373": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "ADD",
      "path": "1"
    },
    "5374": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5375": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14E8"
    },
    "5378": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5379": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5380": {
      "op": "POP"
    },
    "5381": {
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x126C"
    },
    "5384": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5385": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x675"
    },
    "5388": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5389": {
      "op": "POP"
    },
    "5390": {
      "offset": [
        835,
        12504
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5391": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5392": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5393": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5394": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "GT",
      "path": "1"
    },
    "5395": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5396": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x126C"
    },
    "5399": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5400": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5402": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5403": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5404": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5406": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "ADD",
      "path": "1"
    },
    "5407": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x150F"
    },
    "5410": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        835,
        12504
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "54330a18be975239fc4e7e881a1ec14afbe2f2a4",
  "source": "pragma solidity 0.4.24;\n\nimport \"deps/openzeppelin-eth/2.0.2/contracts/math/SafeMath.sol\";\nimport \"deps/openzeppelin-eth/2.0.2/contracts/ownership/Ownable.sol\";\nimport \"deps/openzeppelin-eth/2.0.2/contracts/token/ERC20/ERC20Detailed.sol\";\n\nimport \"./lib/SafeMathInt.sol\";\n\n/**\n * @title uFragments ERC20 token\n * @dev This is part of an implementation of the uFragments Ideal Money protocol.\n *      uFragments is a normal ERC20 token, but its supply can be adjusted by splitting and\n *      combining tokens proportionally across all wallets.\n *\n *      uFragment balances are internally represented with a hidden denomination, 'shares'.\n *      We support splitting the currency in expansion and combining the currency on contraction by\n *      changing the exchange rate between the hidden 'shares' and the public 'fragments'.\n */\n\ncontract UFragments is ERC20Detailed, Ownable {\n    // PLEASE READ BEFORE CHANGING ANY ACCOUNTING OR MATH\n    // Anytime there is division, there is a risk of numerical instability from rounding errors. In\n    // order to minimize this risk, we adhere to the following guidelines:\n    // 1) The conversion rate adopted is the number of shares that equals 1 fragment.\n    //    The inverse rate must not be used--TOTAL_SHARES is always the numerator and _totalSupply is\n    //    always the denominator. (i.e. If you want to convert shares to fragments instead of\n    //    multiplying by the inverse rate, you should divide by the normal rate)\n    // 2) Share balances converted into Fragments are always rounded down (truncated).\n    //\n    // We make the following guarantees:\n    // - If address 'A' transfers x Fragments to address 'B'. A's resulting external balance will\n    //   be decreased by precisely x Fragments, and B's external balance will be precisely\n    //   increased by x Fragments.\n    //\n    // We do not guarantee that the sum of all balances equals the result of calling totalSupply().\n    // This is because, for any conversion function 'f()' that has non-zero rounding error,\n    // f(x0) + f(x1) + ... + f(xn) is not always equal to f(x0 + x1 + ... xn).\n    using SafeMath for uint256;\n    using SafeMathInt for int256;\n\n    event LogRebase(uint256 indexed epoch, uint256 totalSupply);\n    event LogMonetaryPolicyUpdated(address monetaryPolicy);\n\n    // Used for authentication\n    address public monetaryPolicy;\n    uint256 public rebaseStartTime;\n\n    modifier onlyMonetaryPolicy() {\n        require(msg.sender == monetaryPolicy);\n        _;\n    }\n\n    bool private rebasePausedDeprecated;\n    bool private tokenPausedDeprecated;\n\n    modifier validRecipient(address to) {\n        require(to != address(0x0));\n        require(to != address(this));\n        _;\n    }\n\n    modifier onlyAfterRebaseStart() {\n        require(now >= rebaseStartTime);\n        _;\n    }\n\n    uint256 private constant DECIMALS = 9;\n    uint256 private constant SCALED_SHARES_EXTRA_DECIMALS = 9;\n    uint256 private constant MAX_UINT256 = ~uint256(0);\n    uint256 private constant MAX_UINT128 = ~uint128(0);\n    uint256 private constant MAX_FRAGMENTS_SUPPLY = 4000 * 10**DECIMALS;\n\n    // TOTAL_SHARES is a multiple of MAX_FRAGMENTS_SUPPLY so that _sharesPerFragment is an integer.\n    // Use the highest value that fits in a uint128 for sufficient granularity.\n    uint256 private constant TOTAL_SHARES = MAX_UINT256 - (MAX_UINT256 % MAX_FRAGMENTS_SUPPLY);\n\n    // MAX_SUPPLY = maximum integer < (sqrt(4*TOTAL_SHARES + 1) - 1) / 2\n    uint256 private constant MAX_SUPPLY = MAX_UINT128;\n\n    uint256 private _totalSupply;\n    uint256 public _sharesPerFragment;\n    uint256 public _initialSharesPerFragment;\n    mapping(address => uint256) private _shareBalances;\n\n    // This is denominated in Fragments, because the shares-fragments conversion might change before\n    // it's fully paid.\n    mapping(address => mapping(address => uint256)) private _allowedFragments;\n\n    /**\n     * @param monetaryPolicy_ The address of the monetary policy contract to use for authentication.\n     */\n    function setMonetaryPolicy(address monetaryPolicy_) external onlyOwner {\n        monetaryPolicy = monetaryPolicy_;\n        emit LogMonetaryPolicyUpdated(monetaryPolicy_);\n    }\n\n    /**\n     * @dev Notifies Fragments contract about a new rebase cycle.\n     * @param supplyDelta The number of new fragment tokens to add into circulation via expansion.\n     * @return The total number of fragments after the supply adjustment.\n     */\n    function rebase(uint256 epoch, int256 supplyDelta) external onlyMonetaryPolicy onlyAfterRebaseStart returns (uint256) {\n        if (supplyDelta == 0) {\n            emit LogRebase(epoch, _totalSupply);\n            return _totalSupply;\n        }\n\n        if (supplyDelta < 0) {\n            _totalSupply = _totalSupply.sub(uint256(supplyDelta.abs()));\n        } else {\n            _totalSupply = _totalSupply.add(uint256(supplyDelta));\n        }\n\n        if (_totalSupply > MAX_SUPPLY) {\n            _totalSupply = MAX_SUPPLY;\n        }\n\n        _sharesPerFragment = TOTAL_SHARES.div(_totalSupply);\n\n        // From this point forward, _sharesPerFragment is taken as the source of truth.\n        // We recalculate a new _totalSupply to be in agreement with the _sharesPerFragment\n        // conversion rate.\n        // This means our applied supplyDelta can deviate from the requested supplyDelta,\n        // but this deviation is guaranteed to be < (_totalSupply^2)/(TOTAL_SHARES - _totalSupply).\n        //\n        // In the case of _totalSupply <= MAX_UINT128 (our current supply cap), this\n        // deviation is guaranteed to be < 1, so we can omit this step. If the supply cap is\n        // ever increased, it must be re-included.\n        // NB: Digg will likely never reach the total supply cap as the total supply of BTC is\n        // currently 21 million and MAX_UINT128 is many orders of magnitude greater.\n        // _totalSupply = TOTAL_SHARES.div(_sharesPerFragment)\n\n        emit LogRebase(epoch, _totalSupply);\n        return _totalSupply;\n    }\n\n    function initialize(address owner_) public initializer {\n        ERC20Detailed.initialize(\"Digg\", \"DIGG\", uint8(DECIMALS));\n        Ownable.initialize(owner_);\n\n        rebaseStartTime = 0;\n        rebasePausedDeprecated = false;\n        tokenPausedDeprecated = false;\n\n        _totalSupply = MAX_FRAGMENTS_SUPPLY;\n        _shareBalances[owner_] = TOTAL_SHARES;\n        _sharesPerFragment = TOTAL_SHARES.div(_totalSupply);\n        _initialSharesPerFragment = TOTAL_SHARES.div(_totalSupply);\n\n        emit Transfer(address(0x0), owner_, _totalSupply);\n    }\n\n    /**\n     * @return The total number of fragments.\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @return The total number of underlying shares.\n     */\n    function totalShares() public view returns (uint256) {\n        return TOTAL_SHARES;\n    }\n\n    /**\n     * @param who The address to query.\n     * @return The balance of the specified address.\n     */\n    function balanceOf(address who) public view returns (uint256) {\n        return _shareBalances[who].div(_sharesPerFragment);\n    }\n\n    /**\n     * @param who The address to query.\n     * @return The underlying shares of the specified address.\n     */\n    function sharesOf(address who) public view returns (uint256) {\n        return _shareBalances[who];\n    }\n\n    /**\n     * @param fragments Fragment value to convert.\n     * @return The underlying share value of the specified fragment amount.\n     */\n    function fragmentsToShares(uint256 fragments) public view returns (uint256) {\n        return fragments.mul(_sharesPerFragment);\n    }\n\n    /**\n     * @param shares Share value to convert.\n     * @return The current fragment value of the specified underlying share amount.\n     */\n    function sharesToFragments(uint256 shares) public view returns (uint256) {\n        if (shares == 0) {\n            return 0;\n        }\n        return shares.div(_sharesPerFragment);\n    }\n\n    /// @dev Scaled Shares are a user-friendly representation of shares\n    function scaledSharesToShares(uint256 fragments) public view returns (uint256) {\n        return fragments.mul(_initialSharesPerFragment).mul(10**SCALED_SHARES_EXTRA_DECIMALS);\n    }\n\n    function sharesToScaledShares(uint256 shares) public view returns (uint256) {\n        if (shares == 0) {\n            return 0;\n        }\n        return shares.div(_initialSharesPerFragment).mul(10**SCALED_SHARES_EXTRA_DECIMALS);\n    }\n\n    /**\n     * @dev Transfer tokens to a specified address.\n     * @param to The address to transfer to.\n     * @param value The amount to be transferred.\n     * @return True on success, false otherwise.\n     */\n    function transfer(address to, uint256 value) public validRecipient(to) returns (bool) {\n        uint256 shareValue = value.mul(_sharesPerFragment);\n        _shareBalances[msg.sender] = _shareBalances[msg.sender].sub(shareValue);\n        _shareBalances[to] = _shareBalances[to].add(shareValue);\n        emit Transfer(msg.sender, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Function to check the amount of tokens that an owner has allowed to a spender.\n     * @param owner_ The address which owns the funds.\n     * @param spender The address which will spend the funds.\n     * @return The number of tokens still available for the spender.\n     */\n    function allowance(address owner_, address spender) public view returns (uint256) {\n        return _allowedFragments[owner_][spender];\n    }\n\n    /**\n     * @dev Transfer tokens from one address to another.\n     * @param from The address you want to send tokens from.\n     * @param to The address you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) public validRecipient(to) returns (bool) {\n        _allowedFragments[from][msg.sender] = _allowedFragments[from][msg.sender].sub(value);\n\n        uint256 shareValue = value.mul(_sharesPerFragment);\n        _shareBalances[from] = _shareBalances[from].sub(shareValue);\n        _shareBalances[to] = _shareBalances[to].add(shareValue);\n        emit Transfer(from, to, value);\n\n        return true;\n    }\n\n    /**\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of\n     * msg.sender. This method is included for ERC20 compatibility.\n     * increaseAllowance and decreaseAllowance should be used instead.\n     * Changing an allowance with this method brings the risk that someone may transfer both\n     * the old and the new allowance - if they are both greater than zero - if a transfer\n     * transaction is mined before the later approve() call is mined.\n     *\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     */\n    function approve(address spender, uint256 value) public returns (bool) {\n        _allowedFragments[msg.sender][spender] = value;\n        emit Approval(msg.sender, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev Increase the amount of tokens that an owner has allowed to a spender.\n     * This method should be used instead of approve() to avoid the double approval vulnerability\n     * described above.\n     * @param spender The address which will spend the funds.\n     * @param addedValue The amount of tokens to increase the allowance by.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _allowedFragments[msg.sender][spender] = _allowedFragments[msg.sender][spender].add(addedValue);\n        emit Approval(msg.sender, spender, _allowedFragments[msg.sender][spender]);\n        return true;\n    }\n\n    /**\n     * @dev Decrease the amount of tokens that an owner has allowed to a spender.\n     *\n     * @param spender The address which will spend the funds.\n     * @param subtractedValue The amount of tokens to decrease the allowance by.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        uint256 oldValue = _allowedFragments[msg.sender][spender];\n        if (subtractedValue >= oldValue) {\n            _allowedFragments[msg.sender][spender] = 0;\n        } else {\n            _allowedFragments[msg.sender][spender] = oldValue.sub(subtractedValue);\n        }\n        emit Approval(msg.sender, spender, _allowedFragments[msg.sender][spender]);\n        return true;\n    }\n}\n",
  "sourceMap": "835:11669:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;835:11669:1;;;;;;;",
  "sourcePath": "contracts/digg-core/UFragments.sol",
  "type": "contract"
}